<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4c3829fef399388b42c09e7661bf83f948baba60 Maintainer: adi Status: ready -->
<!-- $Revision$ -->

<refentry xml:id="countable.count" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Countable::count</refname>
  <refpurpose>Zlicza liczbę elementów obiektu</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier> <type>int</type><methodname>Countable::count</methodname>
   <methodparam choice="opt"><type>int</type><parameter>tryb</parameter><initializer>COUNT_NORMAL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Ta metoda jest wywoływana kiedy używana jest funkcja <function>count</function> na 
   obiekcie implementującym <classname>Countable</classname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>tryb</parameter></term>
     <listitem>
      <para>
       Opcjonalny parametr <parameter>tryb</parameter> może być ustawiony na
       <constant>COUNT_NORMAL</constant> lub <constant>COUNT_RECURSIVE</constant>, zależnie od 
       wartości przekazanej jako drugi argument <function>count</function>.
       Jest to szczególnie użyteczne przy zliczaniu wszystkich elementów
       kombinacji tablicy wielowymiarowej i Countable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Własna ilość jako <type>integer</type>.
  </para>
  <note>
   <para>
    Zwracana wartość jest rzutowana na <type>integer</type>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Dodano opcjonalny parametr <parameter>tryb</parameter>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1> 

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Przykład <function>Countable::count</function></title>
    <programlisting role="php">
<![CDATA[
<?php
class myCounter implements Countable {
    private $count = 0;
    public function count() {
        return ++$this->count;
    }
}

$counter = new myCounter;

for($i=0; $i<10; ++$i) {
    echo "Zostałem zliczony " . count($counter) . " razy\n";
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Zostałem zliczony 1 razy
Zostałem zliczony 2 razy
Zostałem zliczony 3 razy
Zostałem zliczony 4 razy
Zostałem zliczony 5 razy
Zostałem zliczony 6 razy
Zostałem zliczony 7 razy
Zostałem zliczony 8 razy
Zostałem zliczony 9 razy
Zostałem zliczony 10 razy
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

