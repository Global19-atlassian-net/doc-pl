<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.10 Maintainer: joeaccord Status: ready -->
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/ibase.xml, last change in rev 1.2 -->
  <refentry id="function.ibase-execute">
   <refnamediv>
    <refname>ibase_execute</refname>
    <refpurpose>Wykonuje wcze¶niej przygotowane zapytanie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>resource</type><methodname>ibase_execute</methodname>
      <methodparam><type>resource</type><parameter>zapytanie</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>dowi±zywany_argument1</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Wykonuje zapytanie przygotowane przez <function>ibase_prepare</function>. Je¶li
     zapytanie wywo³a b³±d, zwraca &false;. Je¶li zapytanie zostanie pomy¶lnie wykonane
     a jego rezultatem bêdzie (byæ mo¿e pusty) zbiór wynikowy (uzyskany za pomoc± SELECT),
     zwraca identyfikator_wyniku. Je¶li zapytanie zostanie pomy¶lnie wykonane
     a nie powstanie zbiór wynikowy, zwraca &true;.
    </para>
    <para>
     Funkcja jest o wiele bardziej efektywna ni¿ <function>ibase_query</function>
     je¿eli wiele razy powtarzasz taki sam rodzaj zapytania, zmieniaj±c
     tylko warto¶ci niektórych parametrów.
    </para>
    <para>
     <example>
      <title>Przyk³ad <function>ibase_execute</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$dbh = ibase_connect($host, $username, $password, 'ISO8859_2');

$aktualizacje = array(
    1 => 'Bronis³aw',
    5 => 'Artur',
    7 => 'Alicja'
);

$sql = ibase_prepare($dbh, "UPDATE NAZWA_TABELI SET IMIE = ? WHERE ID = ?");

foreach ($aktualizacje as $id => $imie) {
    ibase_execute($sql, $imie, $id);
}

?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
      <para>
      W PHP 5.0.0 i wersjach pó¼niejszych ta funkcja zwraca liczbê wierszy przetworzonych
      przez ostatnie zapytanie (je¿eli jest > 0 i u¿yto odpowiedniej instrukcji SQL).
      W przypadku zapytania wykonanego pomy¶lnie, ale nie przetwarzaj±cego ¿adnego wiersza
      (np. UPDATE z warunkiem nie pasuj±cym do ¿adnego rekordu) funkcja zwraca &true;.
      </para>
    </note>
    <para>
    Patrz tak¿e: <function>ibase_query</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
