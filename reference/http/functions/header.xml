<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.5 Maintainer: qrak Status: ready -->
<!-- $Revision: 1.7 $ -->
  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Wysy³a surowy nag³owek HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>int</type><methodname>header</methodname>
      <methodparam><type>string</type><parameter>tre¶æ_nag³ówka</parameter></methodparam>
      <methodparam
      choice="opt"><type>bool</type><parameter>zamieñ</parameter></methodparam>
      <methodparam
      choice="opt"><type>int</type><paramter>kod_odpowiedzi_http</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>header</function> s³u¿y do wys³ania surowego
     nag³ówka <acronym>HTTP</acronym>.
     Zajrzyj do <ulink url="&spec.http1.1;">Specyfikacji HTTP 1.1</ulink>
     aby dowiedzieæ siê wiêcej na temat nag³ówków <acronym>HTTP</acronym>.
    </para>
    <para>
     Pierwszy argument opcjonalny <parameter>zamieñ</parameter> okre¶la,
     czy funkcja
     ma zast±piæ nag³ówek tego samego typu przygotowany przez serwer,
     czy dodaæ jeszcze jeden. Domy¶lnie, oryginalny
     nag³ówek zostanie zast±piony, ale je¶li ustawisz ten argument na &false;,
     to nowy nag³ówek zostanie dodany do ju¿ istniej±cych. Na przyk³ad:
     <informalexample>
      <programlisting role="php">
<![CDATA[      
header('WWW-Authenticate: Negociate');
header('WWW-Authenticate: NTLM', FALSE);
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Drugi argument opcjonalny <parameter>kod_odpowiedzi_http</parameter>
     pozwala
     narzuciæ okre¶lony kod odpowiedzi HTTP. (Argument ten jest dostêpny w
     PHP 4.3.0 i wy¿szych).
    </para>
    <para>
     S± dwa specjalne wywo³ania funkcji header. Pierwszym z nich jest ka¿dy
     nag³ówek zaczynaj±cy siê od "<literal>HTTP/</literal>" (wielko¶æ liter
     nie jest istotna). Nag³ówka tego u¿ywa siê do podania statusu zapytania
     HTTP. Na przyk³ad, je¶li skonfigurowa³e¶ serwer Apache aby u¿ywa³ skryptu
     PHP do wy¶wietlania komunikatów o brakuj±cych plikach (za pomoc± dyrektywy
     <literal>ErrorDocument</literal>), mo¿esz chcieæ wypróbowaæ, czy skrypt
     generuje w³a¶ciwy kod statusu. 
       <informalexample>  
        <programlisting role="php">  
  <![CDATA[  
  <?php  
    header("HTTP/1.0 404 Not Found");  
  ?>  
  ]]>  
        </programlisting>  
       </informalexample>  
       <note>  
        <para>
         Status po³±czenia HTTP zawsze bêdzie wys³any w pierwszej linii
         odpowiedzi serwera, niezale¿nie od kolejno¶ci wywo³ania funkcji
         <function>header</function>. Aktualnie ustalony status po³±czenia mo¿e
         zostaæ nadpisany nowym, wystarczy tylko po raz kolejny wywo³aæ
         funkcjê <function>header</function>. Nale¿y to jednak zrobiæ, nim
         nag³ówki zostan± wys³ane.
        </para>  
       </note>  
       <note>  
        <para>
         W PHP 3 funkcja ta dzia³a tylko, je¿eli PHP jest skompilowane jako
         modu³ Apache'a. Identyczny rezultat do powy¿szego mo¿na uzyskaæ
         za pomoc± nag³ówka <literal>Status</literal>.
         <informalexample>  
          <programlisting role="php">  
  <![CDATA[  
  header("Status: 404 Not Found");  
  ]]>  
          </programlisting>  
         </informalexample>  
        </para>  
       </note>  
      </para>  
      <para>
       Drugim specjalnym wywo³aniem funkcji header jest nag³ówek
       "Location:". W tej sytuacji, do klienta wysy³any jest nie tylko ten
       nag³ówek, ale tak¿e status przekierowania <literal>REDIRECT</literal>
       (302), o ile inny status zapytania <literal>3xx</literal> nie zosta³
       ju¿ wys³any.  

     <informalexample>
      <programlisting role="php">
<![CDATA[
header("Location: http://www.example.com/"); /* Przekieruj przegl±darkê */
exit;                 /* Upewnij siê, ¿e kod poni¿ej nie zostanie wykonany 
                         po przekierowaniu. */
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Protokó³ HTTP 1.1 wymaga bezwzglêdnego <acronym>URI</acronym> w nag³ówku
      <ulink url="&spec.http1.1;/rfc2616-sec14.html#sec14.30">Location:</ulink>
      w³±cznie z okre¶leniem protoko³u, nazwy hosta i bezwzglêdnej scie¿ki
      dostêpu, ale niektóre klienty akceptuj± wzglêdne <acronym>URI</acronym>.
      Zwykle u¿ywa siê
      <literal>$_SERVER['HTTP_HOST']</literal>, 
      <literal>$_SERVER['PHP_SELF']</literal> i
      funkcji <function>dirname</function> by wygenerowaæ bezwglêdny 
      <acronym>URI</acronym>:
      <informalexample>
       <programlisting>
<![CDATA[
header("Location: http://".$_SERVER['HTTP_HOST']
                       ."/".dirname($_SERVER['PHP_SELF'])
                       ."/".$wzglêdny_url);
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
    
    <para>
     Skrypty PHP czêsto s³u¿± do generowania dynamiczej tre¶ci, która
     nie mo¿e byæ buforowana przez klienta czy serwer proxy. Pamiêæ cache
     (bufor) w wiêkszo¶ci tych urz±dzeñ da siê wy³±czyæ dziêki:
     <informalexample>
      <programlisting role="php">
<![CDATA[
header ("Expires: Mon, 26 Jul 1997 05:00:00 GMT");    // data w przesz³o¶ci
header ("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); 
                                                      // ci±gle modyfikowany
header("Cache-Control: no-store, no-cache, must-revalidate");  // HTTP/1.1
header("Cache-Control: post-check=0, pre-check=0", false);
header("Pragma: no-cache");                          // HTTP/1.0
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       Mo¿esz zaobserwowaæ, ¿e strony nie s± buforowane, nawet je¶li
       nie u¿y³e¶ wszystkich ww. nag³ówków. Jest wiele sposobów, w jakie
       u¿ytkownicy mog± skonfigurowaæ swoje przegl±darki, aby zmieniæ
       standardowy sposób buforowania. Przez wys³anie powy¿szych nag³ówków,
       powinno siê udaæ omin±æ wszystkie ustawienia pozwalaj±ce
       na zbuforowanie wyniku pracy twojego skryptu.
      </para>
      <para>
       Dodatkowo, <function>session_cache_limiter</function> i dyrektywa
       konfiguracyjna <literal>session.cache_limiter</literal> s³u¿±
       do automatycznego generowania nag³ówków zwi±zanych z bufurowaniem,
       kiedy sesje s± w u¿yciu.
      </para>
     </note>
    </para>
    <para>
     Pamiêtaj, ¿e <function>header</function> mo¿e byæ wywo³ywana 
     jedynie do momentu nim zostanie wys³ana jakakolwiek tre¶æ, tzn. 
     znaczniki HTML, puste linie lub wynik pracy PHP. Jest to bardzo
     czêsty b³±d, gdzie skrypty z funkcjami <function>include</function>, 
     <function>require</function> itp. maj± spacje albo puste linie przed
     wywo³aniem funkcji <function>header</function>. 
     Problem ten pojawia siê równie¿ w skryptach opartych na
     pojedynczym pliku PHP/HTML.
     <informalexample>
      <programlisting role="php">
<![CDATA[

<?php header ("Content-Type: audio/x-pn-realaudio"); ?>
// skrypt nie dzia³a - zauwa¿ puste linie ponad funkcj± header
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       W PHP 4 mo¿na u¿yæ buforowania wyj¶cia aby omin±æ ten problem.
       Wszystko, co skrypt wy¶le do przegl±darki zostanie zatrzymane na
       serwerze do momentu, kiedy pojawi siê instrukcja wys³ania danych.
       Mo¿na to zrobiæ za pomoc± funkcji <function>ob_start</function> i
       <function>ob_end_flush</function>, lub ustawiaj±c dyrektywê kofiguracyjn±
       <literal>output_buffering</literal> w pliku &php.ini;
       lub w plikach konfiguracyjnych serwera.
      </para>
     </note>
    </para>
    <para>
     Aby u¿ytkownik zosta³ monitowany o zapisanie wysy³anych danych,
     takich jak np. wygenerowany plik PDF, mo¿na u¿yæ nag³ówka <ulink
     url="&url.rfc2183;">Content-Disposition</ulink> aby podaæ zalecan± nazwê
     pliku i zmusiæ przegl±darkê do wy¶wietlenia okienka Zapisz jako.
     <informalexample>
      <programlisting role="php">
<![CDATA[
&lt;?php
header("Content-type: application/pdf");
header("Content-Disposition: attachment; filename=downloaded.pdf");

/* ... tre¶æ pliku pdf ... */
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       W Microsoft Internet Explorer 4.01 jest b³±d, który uniemo¿liwia
       wykorzystanie tego mechanizmu. Nie ma na to rozwi±zania. B³±d, który
       zahacza o ten mechanizm, jest tak¿e w Microsoft Internet Explorer 5.5,
       jednak da siê go omin±æ aktualizuj±c przegl±darkê poprzez Service Pack 2
       lub pó¼niejszy.
      </para>
     </note>
    </para>
    <note> 
       <simpara>
        Je¶li <link linkend="ini.safe-mode">tryb bezpieczny</link> jest
        w³±czony, uid skryptu jest dodane do czê¶ci <literal>realm</literal>
        nag³ówka <literal>WWW-Authenticate</literal>, je¶li ustawisz ten
        nag³ówek (wykorzystuje siê go do autoryzacji HTTP).
       </simpara> 
    </note> 
    <para>
     Patrz tak¿e: <function>headers_sent</function>,
     <function>setcookie</function>, i rozdzia³ 
     <link linkend="features.http-auth">Autoryzacja HTTP</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
