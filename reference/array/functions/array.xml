<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: n/a Maintainer: leszek Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.array" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array</refname>
  <refpurpose>Stwórz tablicê</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Opis</title>
  <methodsynopsis>
   <type>array</type><methodname>array</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Zwraca tablicê stworzon± z podanych parametrów. Parametry mog± byæ
   indeksowane przy pomocy operatora <literal>=&gt;</literal> operator.
   Wiêcej informacji o tym czym s± tablice mo¿na znale¼æ w rodziale o <link
    linkend="language.types.array">typie tablicowym</link>.
  </para>
  <para>
   <note>
    <para>
     <function>array</function> jest sk³adni± jêzyka u¿ywan± do tekstowej
     reprezentacji tablic, a nie zwyk³± funkcj±.
    </para>
   </note>
  </para>
  <para>
   Sk³adnia "index =&gt; warto¶ci", oddzielona przecinkami, definiuje pary
   indeksów i warto¶ci. Indeks mo¿e byæ ci±giem tekstowym lub liczb±
   sta³oprzecinkow±. Je¶li indeks zostanie pominiêty, automatycznie
   wygenerowany zostanie indeks bêd±cy liczb± ca³kowit±, poczynaj±c od 0.
   Je¶li indeks jest liczb± ca³kowit±, nastêpny wygenerowany indeks bêdzie
   mia³ warto¶æ "najwiêkszy indeks + 1".  Zauwa¿, ¿e je¶li pojawi± siê dwie
   warto¶ci o tym samym indeksie, ostatnia nadpisze wcze¶niejsze.
  </para>
  <para>
   Przecinek po ostatniej podanej warto¶ci, mimo ¿e jest niespotykany, jest
   poprawny sk³adniowo.
  </para>
  <para>
   Poni¿szy przyk³ad demonstruje jak stworzyæ wielowymiarow± tablicê, jak
   okre¶liæ klucze w tablicy asocjacyjnej i jak pomin±æ-i-kontynuowaæ
   liczbowe indeksy w normalnych tablicach.
   <example>
    <title>Przyk³ad u¿ycia <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$owoce = array (
   "owoce"  => array("a"=&gt;"pomarañcza", "b"=&gt;"banan", "c"=&gt;"jab³ko"),
   "liczby" => array(1, 2, 3, 4, 5, 6),
   "dziury" => array("pierwszy", 5 =&gt; "drugi", "trzeci")
);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Automatyczne indeksowanie w funkcji <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$array = array( 1, 1, 1, 1,  1, 8 => 1,  4 => 1, 19, 3 => 13);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Zauwa¿, ¿e indeks '3' jest zdefiniowany dwa razy i przchowuje on koñcow±
   warto¶æ 13. Indeks 4 jest zdefiniowany po indeksie 8, a nastêpnym
   wygenerowanym indeksem (dla warto¶ci 19) jest 9, poniewa¿ najwiêkszym
   poprzednim indeksem by³o 8.
  </para>
  <para>
   Ten przyk³ad tworzy tablicê o pocz±tku 1.
   <example>
    <title>Indeksowanie od 1 w <function>array</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$pierwszy_kwartal  = array(1 => 'Styczeñ', 'Luty', 'Marzec');
print_r($pierwszy_kwartal);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [1] => Styczeñ
    [2] => Luty
    [3] => Marzec
)
]]>
    </screen>
   </example>
  </para>
  <para>
   Podobnie jak w Perlu, warto¶æ z tablicy mo¿na uzyskaæ wewn±trz
   cudzys³owów. Jednak¿e w PHP niezbêdne jest zawarcie zmiennej wewn±trz
   nawiasów klamrowych.
   <example>
    <title>Odczytywanie elementu tablicy wewn±trz cudzys³owów</title>
    <programlisting role="php">
<![CDATA[
<?php

$foo = array('bar' => 'baz');
echo "Hello {$foo['bar']}!"; // Hello baz!

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Patrz tak¿e: <function>array_pad</function>, <function>list</function>,
   <function>count</function>,
   <link linkend="control-structures.foreach">foreach</link> i
   <function>range</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
