<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.15 Maintainer: leszek Status: ready -->
<!-- $Revision: 1.6 $ -->
  <refentry id="function.range">
   <refnamediv>
    <refname>range</refname>
    <refpurpose>
     Stwórz tablicê zawieraj±c± przedzia³ elementów
    </refpurpose>
   </refnamediv>
   <refsect1>
   <title>Opis</title>
    <methodsynopsis>
     <type>array</type><methodname>range</methodname>
     <methodparam><type>mixed</type><parameter>dolny</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>górny</parameter></methodparam>
     <methodparam choice="opt"><type>number</type><parameter>krok</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>range</function> zwraca tablicê elementów od
     <parameter>dolny</parameter> do <parameter>górny</parameter>, w³±cznie.
     Je¶li dolny > górny, to sekwencja bêdzie od górnego do dolnego.
    </para>
    <note>
     <title>Nowy parametr</title>
     <simpara>
      Parametr opcjonalny <parameter>krok</parameter> zosta³ dodany w PHP
      5.0.0.
     </simpara>
    </note>
    <para>
     Je¶li podany zostanie parametr <parameter>krok</parameter>, zostanie on
     u¿yty jako ró¿nica pomiêdzy elementami w sekwencji.
     <parameter>krok</parameter> powinien byæ liczb± dodatni±. Je¶li nie
     zostanie on podany, <parameter>krok</parameter> przyjmie domy¶ln± warto¶æ
     1.
    </para>
    <para>
     <example>
      <title>Przyk³ady u¿ycia funkcji <function>range</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
foreach (range(0, 12) as $liczba) {
    echo $liczba;
}

// Parametr kroku zosta³ wprowadzony w 5.0.0
// array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
foreach (range(0, 100, 10) as $liczba) {
    echo $liczba;	
}

// U¿ycie sekwencji znakowych wprowadzono w 4.1.0
// array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i');
foreach (range('a', 'i') as $litera) {
    echo $litera;
}

// array('c', 'b', 'a');
foreach (range('c', 'a') as $litera) {
    echo $litera;
}  
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      W wersjach wcze¶niejszych od PHP 4.1.0 funkcja
      <function>range</function> generowa³a tylko rosn±ce tablice liczbowe.
      Obs³uga sekwencji znakowych i tablic malej±cych zosta³a wprowadzona w
      PHP 4.1.0. Warto¶ci sekwencji znakowych s± ograniczone do d³ugo¶ci
      jednego znaku. Je¶li wprowadzony zostanie ci±g d³ugo¶ci wiêkszej ni¿
      jeden, u¿yty zostanie tylko pierwszy znak.
     </para>
    </note>
    <caution>
     <para>
      W wersjach PHP od 4.1.0 do 4.3.2 funkcja <function>range</function>
      rozpoznawa³a ci±gi numeryczne jako ci±gi, a nie jako liczby. W zwi±zku z
      tym bêd± one u¿yte do generowania sekwencji znakowych. Na przyk³ad
      <literal>"4242"</literal> bêdzie traktowane jako <literal>"4"</literal>.
     </para>
    </caution>
    <para>
     Patrz tak¿e: <function>shuffle</function>,
     <function>array_fill</function> i <link
     linkend="control-structures.foreach">foreach</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
