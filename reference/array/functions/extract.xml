<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.22 Maintainer: leszek Status: ready -->
<!-- $Revision: 1.11 $ -->
<refentry xml:id="function.extract" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>extract</refname>
  <refpurpose>Importuj zmienne do bie¿±cej tablicy symboli z tablicy</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Opis</title>
  <methodsynopsis>
   <type>int</type><methodname>extract</methodname>
   <methodparam><type>array</type><parameter>tablica_zmiennych</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>typ_ekstrakcji</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>prefiks</parameter></methodparam>
  </methodsynopsis>
  <para>
   Ta funkcja s³u¿y do importowania zmiennych z tablicy do bie¿±cej tablicy
   symboli. Pobiera jako parametr tablicê asocjacyjn±
   <parameter>tablica_zmiennych</parameter> i traktuje klucze jako nazwy
   zmiennych a warto¶ci jako warto¶ci tych zmiennych. Dla ka¿dej pary
   klucz/warto¶æ w bie¿±cej tablicy symboli bêdzie stworzona zmienna, zale¿na
   od parametrów <parameter>typ_ekstrakcji</parameter> i
   <parameter>prefiks</parameter>.
  </para>
  <note>
   <para>
    Od wersji 4.0.5 ta funkcja zwraca liczbê wyekstrahowanych zmiennych.
   </para>
  </note>
  <note>
   <para>
    Sta³e <constant>EXTR_IF_EXISTS</constant> i
    <constant>EXTR_PREFIX_IF_EXISTS</constant> zosta³y dodane w PHP 4.2.0.
   </para>
  </note>
  <note>
   <para>
    Sta³a <constant>EXTR_REFS</constant> zosta³a dodana w PHP 4.3.0.
   </para>
  </note>
  <para>
   <function>extract</function> sprawdza ka¿dy klucz aby sprawdziæ, czy
   zawiera prawid³ow± nazwê zmiennej a tak¿e czy istniej± kolizje z
   zmiennymi istniej±cymi w tablicy symboli. Sposób traktowania z³ych nazw
   zmiennych i kolizji jest okre¶lony przez parametr
   <parameter>typ_ekstrakcji</parameter>. Mo¿e byæ jedn± z poni¿szych
   warto¶ci:
   <variablelist>
    <varlistentry>
     <term><constant>EXTR_OVERWRITE</constant></term>
     <listitem>
      <simpara>
       Je¶li istnieje kolizja, nadpisz istniej±c± zmienn±.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_SKIP</constant></term>
     <listitem>
      <simpara>
       Je¶li istnieje kolizja, nie nadpisuj istniej±cej zmiennej.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_PREFIX_SAME</constant></term>
     <listitem>
      <simpara>
       Je¶li istnieje kolizja, na pocz±tek nazwy zmiennej wstaw
       <parameter>prefiks</parameter>.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_PREFIX_ALL</constant></term>
     <listitem>
      <simpara>
       Na pocz±tek ka¿dej nazwy zmiennej wstaw <parameter>prefiks</parameter>.
       Od PHP 4.0.5 dotyczy to tak¿e nazw numerycznych.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_PREFIX_INVALID</constant></term>
     <listitem>
      <simpara>
       Wstaw <parameter>prefiks</parameter> na pocz±tek z³ych/numerycznych
       nazw. Ta flaga zosta³a dodana w PHP 4.0.5.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_IF_EXISTS</constant></term>
     <listitem>
      <simpara>
       Nadpisz tylko zmienn± ju¿ istniej±c± w bie¿±cej tablicy symboli. Jest
       to przydatne do definiowania listy poprawnych zmiennych i ekstrahuj
       tylko te zmienne które zdefiniowano na przyk³ad w $_REQUEST. Flaga ta
       zosta³a dodana w PHP 4.2.0.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_PREFIX_IF_EXISTS</constant></term>
     <listitem>
      <simpara>
       Przedrostek zostanie dodany tylko do zmiennych których odpowiedniki
       bez przedrostka ju¿ istniej± w bie¿±cej tablicy symboli. Flaga ta
       zosta³a dodana w PHP 4.2.0.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><constant>EXTR_REFS</constant></term>
     <listitem>
      <simpara>
       Ekstraktuje zmienne jako referencje. Oznacza to, ¿e warto¶ci
       zaimportowanych zmiennych ci±gle odnosz± siê do warto¶ci parametru
       <parameter>tablica_zmiennych</parameter>. Flaga ta mo¿e byæ u¿yta
       sama lub w po³±czaniu z innymi flagami poprzez u¿ycie operacji OR na
       parametrze <parameter>typ_ekstrakcji</parameter>. Zosta³a ona dodana
       w PHP 4.3.0.
      </simpara>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   Je¶li <parameter>typ_ekstrakcji</parameter> nie zosta³ podany, to
   zak³adana jest opcja <constant>EXTR_OVERWRITE</constant>.
  </para>
  <para>
   Zauwa¿, ¿e parametr <parameter>prefiks</parameter> jest wymagany tylko
   je¶li <parameter>typ_ekstrakcji</parameter> to
   <constant>EXTR_PREFIX_SAME</constant>,
   <constant>EXTR_PREFIX_ALL</constant>,
   <constant>EXTR_PREFIX_INVALID</constant> lub
   <constant>EXTR_PREFIX_IF_EXISTS</constant>. Je¶li nazwa zmiennej po
   dodaniu prefiksu nie jest prawid³ow± nazw± zmiennej, nie jest
   importowana do tablicy symboli. Prefiksy s± automatycznie oddzielane od
   kluczy tablicy poprzez znak "_".
  </para>
  <para>
   <function>extract</function> zwraca liczbê zmiennych szczê¶liwie
   zaimportowanych do tablicy symboli.
  </para>
  <warning>
   <para>
    Nie nale¿y u¿ywaæ funkcji <function>extract</function> na niepewnych
    danych, jak na przyk³ad danych odebranych od u¿ytkownika ($_GET, ...).
    Mo¿na tak zrobiæ na przyk³ad w celu tymczasowego uruchomienia starych
    skryptów, które zale¿ne s± od ustawienia <link
     linkend="security.globals">register_globals</link>. Nale¿y jednak u¿yæ
    nie nadpisuj±cego parametru <parameter>typ_ekstrakcji</parameter>, jak
    na przyk³ad <constant>EXTR_SKIP</constant>. Trzeba te¿ pamiêtaæ aby
    ekstrahowaæ zmienne w kolejno¶ci okre¶lonej przez opcjê <link
     linkend="ini.variables-order">variables_order</link> pliku <link
     linkend="ini">&php.ini;</link>.
   </para>
  </warning>
  <para>
   Mo¿liwa jest ekstrakcja zmiennych zawartych w tablicy asocjacyjnej zwróconej
   przez <function>wddx_deserialize</function>.
  </para>
  <para>
   <example>
    <title>Przyk³ad u¿ycia <function>extract</function></title>
    <programlisting role="php">
<![CDATA[
<?php

/* Za³ó¿my, ¿e $tablica_zmiennych jest tablic± zwrócon± przez
   wddx_deserialize */

$rozmiar = "du¿y";
$tablica_zmiennych = array("kolor"    => "niebieski",
                           "rozmiar"  => "¶redni",
                           "ksztalt"  => "kulisty");
extract($tablica_zmiennych, EXTR_PREFIX_SAME, "wddx");

echo "$kolor, $rozmiar, $ksztalt, $wddx_rozmiar\n";

?>
]]>
    </programlisting>
    <screen>
<![CDATA[
niebieski, du¿y, kulisty, ¶redni
]]>
    </screen>
   </example>
  </para>
  <para>
   <varname>$rozmiar</varname> nie zosta³ nadpisany, poniewa¿ podany zosta³
   parametr <constant>EXTR_PREFIX_SAME</constant>, przez co stworzona zosta³
   zmienna <varname>$wddx_rozmiar</varname>.  Je¶li podana by by³a flaga
   <constant>EXTR_SKIP</constant>, to zmienna
   <varname>$wddx_rozmiar</varname> nie zosta³aby stworzona.  Flaga
   <constant>EXTR_OVERWRITE</constant> spowodowa³aby, ¿e zmienna
   <varname>$rozmiar</varname> mia³aby warto¶æ "¶redni", a
   <constant>EXTR_PREFIX_ALL</constant> spowodowa³aby ¿e wszystkie nowe
   zmienne zosta³yby nazwane <varname>$wddx_kolor</varname>,
   <varname>$wddx_rozmiar</varname>, and <varname>$wddx_ksztalt</varname>.
  </para>
  <para>
   Musisz u¿yæ tablic asocjacyjnych. Tablica indeksowana liczbowo nie da
   ¿adnych efektów, chyba ¿e zostanie u¿yta flaga
   <constant>EXTR_PREFIX_ALL</constant> lub
   <constant>EXTR_PREFIX_INVALID</constant>.
  </para>
  <para>
   Patrz tak¿e: <function>compact</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
