<?xml version="1.0" encoding="iso-8859-2"?>
<!-- splitted from ./pl/functions/array.xml, last change in rev 1.1 -->
<!-- last change to 'array-chunk' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: leszek Status: ready -->
<!-- OLD-Revision: 1.130/EN.1.2 -->
  <refentry id="function.array-chunk">
   <refnamediv>
    <refname>array_chunk</refname>
    <refpurpose>Podziel tablicê na kawa³ki</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>array_chunk</methodname>
      <methodparam><type>array</type><parameter>wej¶cie</parameter></methodparam>
      <methodparam><type>int</type><parameter>rozmiar</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>zachowaj_klucze</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_chunk</function> dzieli tablicê na kilka mniejszych,
     ka¿da po <parameter>rozmiar</parameter> elementów. Istnieje mo¿liwo¶æ, ¿e
     ostatnia tablica bêdzie mniejsza. Otrzymujesz tablice jako elementy
     wielowymiarowej tablicy indeksowanej przez liczby zaczynaj±c od zera.
    </para>
    <para>
     Ustawiaj±c opcjonalny parametr <parameter>zachowaj_klucze</parameter> na
     &true; mo¿esz zmusiæ PHP do zachowywania orginalnych kluczy z tablicy
     wej¶ciowej. Je³i podasz w tym miejscu &false;, to w ka¿dej nowej tablicy
     u¿yte bêd± nowe indeksy liczbowe zaczynaj±ce siê od zera. Domy¶ln±
     warto¶ci± jest &false;.
    </para>
    <example>
     <title>Przyk³ad u¿ycia <function>array_chunk</function></title>
     <programlisting role="php">
<![CDATA[
$tablica_wejsciowa = array('a', 'b', 'c', 'd', 'e');
print_r(array_chunk($tablica_wejsciowa, 2));
print_r(array_chunk($tablica_wejsciowa, 2, TRUE));
]]>
     </programlisting>
     <para>
      Powy¿szy program wy¶wietli:
      <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [0] => c
            [1] => d
        )

    [2] => Array
        (
            [0] => e
        )

)
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [2] => c
            [3] => d
        )

    [2] => Array
        (
            [4] => e
        )

)
]]>
      </screen>
     </para>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
