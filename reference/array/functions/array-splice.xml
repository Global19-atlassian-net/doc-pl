<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.4 Maintainer: leszek Status: ready -->
<!-- $Revision: 1.3 $ -->
  <refentry id="function.array-splice">
   <refnamediv>
    <refname>array_splice</refname>
    <refpurpose>
     Usuñ czê¶æ tablicy i zamieñ j± na co¶ innego
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>array</type><methodname>array_splice</methodname>
      <methodparam><type>array</type><parameter>wej¶cie</parameter></methodparam>
      <methodparam><type>int</type><parameter>przesuniêcie</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>d³ugo¶æ</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>
        zamiennik
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_splice</function> usuwa z tablicy <parameter>wej¶cie
     </parameter> elementy okre¶lone przez parametry
     <parameter>przesuniêcie</parameter> i
     <parameter>d³ugo¶æ</parameter>, i zamienia je przez elementy tablicy
     <parameter>zamiennik</parameter>, je¶li zosta³a ona podana. Funkcja
     zwraca tablice zawieraj±c± usuniête elementy.
    </para>
    <para>
     Je¶li <parameter>przesuniêcie</parameter> jest dodatnie, to pocz±tek
     usuwanej czê¶ci tablicy <parameter>wej¶cie</parameter> znajduje siê
     w miejscu okre¶lonym przez ten parametr. Je¶li
     <parameter>przesuniêcie</parameter> jest ujemne, to wycinanie zaczyna siê
     o tyle elementów od koñca tablicy <parameter>wej¶cie</parameter>.
    </para>
    <para>
     Je¶li <parameter>d³ugo¶æ</parameter> zosta³a pominiêta, to usuniête jest
     wszystko od <parameter>przesuniêcie</parameter> do koñca tablicy. Je¶li
     <parameter>d³ugo¶æ</parameter> jest podana i dodatnia, to tyle elementów
     zostanie usuniêtych. Je¶li <parameter>d³ugo¶æ</parameter> jest podana i
     jest ujemna, to koniec usuwanego kawa³ka tablicy bêdzie siê znajdowa³ o
     tyle elementów od koñca tablicy. Wskazówka: aby usun±æ wszystko od
     <parameter>przesuniêcie</parameter> do koñca tablicy podaj±c tak¿e
     parametr <parameter>zamiennik</parameter>, u¿yj
     <literal>count($wej¶cie)</literal> jako <parameter>d³ugo¶æ</parameter>.
    </para>
    <para>
     Je¶li podana zosta³a tablica <parameter>zamiennik</parameter>, to
     wszystkie usuniête elementy s± zamieniane na elementy z tej tablicy.
     Je¶li <parameter>przesuniêcie</parameter> i <parameter>d³ugo¶æ</parameter>
     zosta³y podane tak, ¿e ¿adne elementy nie zostan± usuniête, to elementy z
     tablicy <parameter>zamiennik</parameter> s± wstawiane w miejsce okre¶lone
     przez <parameter>przesuniêcie</parameter>. Wskazówka: je¶li zamiennik to
     tylko jeden element, to nie trzeba go wstawiaæ do
     <literal>array()</literal>, chyba ¿e element jest w³a¶nie tablic±.
    </para>
    <para>
     Równoznaczno¶ci kodu:
     <programlisting role="php">
<![CDATA[
array_push ($wejscie, $x, $y)     array_splice ($wejscie, count ($wejscie), 0,
                                               array ($x, $y))
array_pop ($wejscie)              array_splice ($wejscie, -1)
array_shift ($wejscie)            array_splice ($wejscie, 0, 1)
array_unshift ($wejscie, $x, $y)  array_splice ($wejscie, 0, 0, array ($x, $y))
$a[$x] = $y                       array_splice ($wejscie, $x, 1, $y)
]]>
     </programlisting>
    </para>
    <para>
     Funkcja zwraca tablicê zawieraj±c± usuniête elementy.
    </para>
    <para>
     <example>
      <title>Przyk³ad u¿ycia <function>array_splice</function></title>
      <programlisting role="php">
<![CDATA[
$wejscie = array ("czerwony", "zielony", "niebieski", "¿ó³ty");
array_splice ($wejscie, 2);      
// $wejscie to teraz array ("czerwony", "zielony")

$wejscie = array ("czerwony", "zielony", "niebieski", "¿ó³ty");
array_splice ($wejscie, 1, -1);  
// $wejscie to teraz array ("czerwony", "¿ó³ty")

$wejscie = array ("czerwony", "zielony", "niebieski", "¿ó³ty");
array_splice ($wejscie, 1, count($wejscie), "pomarañczowy");  
// $wejscie to teraz array ("czerwony", "pomarañczowy")

$wejscie = array ("czerwony", "zielony", "niebieski", "¿ó³ty");
array_splice ($wejscie, -1, 1, array("czarny", "kasztanowy")); 
// $wejscie to teraz array ("czerwony", "zielony", 
//          "niebieski", "czarny", "kasztanowy")
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Patrz tak¿e <function>array_slice</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
