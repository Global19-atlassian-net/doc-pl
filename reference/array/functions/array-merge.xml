<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.19 Maintainer: leszek Status: ready -->
<!-- $Revision: 1.9 $ -->
<refentry id="function.array-merge">
 <refnamediv>
  <refname>array_merge</refname>
  <refpurpose>£±czy jedn± lub wiêcej tablic</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Opis</title>
  <methodsynopsis>
   <type>array</type><methodname>array_merge</methodname>
   <methodparam><type>array</type><parameter>tablica1</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>tablica2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_merge</function> ³±czy elementy jednej lub wiêcej tablic
   razem, tak ¿e warto¶ci jednej tablicy s± wstawiane na koniec poprzedniej
   tablicy. Funkcja ta zwraca tablicê wynikow±.
  </para>
  <para>
   Je¶li tablice wej¶ciowe maj± takie same klucze tekstowe, najnowsza
   warto¶æ nadpisze starsz±. Jednak¿e je¶li tablice bêd± mia³y takie same
   klucze liczbowe, pó¼niejsza warto¶æ <emphasis
   role="strong">nie</emphasis> nadpisze starszej, lecz zostanie
   dopisana na koniec tablicy.
  </para>
  <para>
   Je¶li podana zostanie tylko jedna tablica i jest ona indeksowana
   numerycznie, to klucze tablicy zostan± przeindeksowane w sposób ci±g³y.
  </para>
  <para>
   <example>
    <title>Przyk³ad u¿ycia <function>array_merge</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$tablica1 = array("kolor" => "czerwony", 2, 4);
$tablica2 = array("a", "b", "kolor" => "zielony", "kszta³t" => "trapezoid", 4);
$wynik = array_merge($tablica1, $tablica2));
print_r($wynik);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [kolor] => zielony
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [kszta³t] => trapezoid
    [4] => 4
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Prosty przyk³ad u¿ycia <function>array_merge</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$tablica1 = array();
$tablica2 = array(1 => "dane");
$wynik    = array_merge($tablica1, $tablica2);
?>
]]>
    </programlisting>
    <para>
     Nie zapomnij ¿e klucze numeryczne bêd± przenumerowane!
    </para>
    <screen role="php">
<![CDATA[
Array
(
[0] => dane
)
]]>
    </screen>
    <para>
     Je¶li chcesz ca³kowicie zachowaæ tablice i tylko dodaæ jedn± na koñcu
     drugiej, u¿yj operatora <literal>+</literal>:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$tablica1 = array();
$tablica2 = array(1 => "dane");
$wynik = $tablica1 + $tablica2;
?>
]]>
    </programlisting>
    <para>
     Klucze numeryczne pozostan± zachowane a co za tym idzie asocjacje
     zostan± niezmienione.
    </para>
    <screen role="php">
<![CDATA[
Array
(
    [1] => dane
)
]]>
    </screen>
   </example>
  </para>
  <warning>
   <para>
    Zachowanie <function>array_merge</function> zosta³o zmienione w PHP 5.
    Inaczej ni¿ w PHP 4, <function>array_merge</function> akceptuje teraz
    tylko parametry typu <type>array</type>. Jednak¿e mo¿na u¿yæ rzutowania
    typów aby ³±czyæ zmienne innych typów. Ilustruje to poni¿szy przyk³ad.
   </para>
   <para>
    <example>
     <title>Przyk³ad u¿ycia <function>array_merge</function> w PHP 5</title>
     <programlisting role="php">
 <![CDATA[
 <?php
 $poczatek = 'foo';
 $koniec = array(1 => 'bar');
 $wynik = array_merge((array)$poczatek, (array)$koniec);
 print_r($wynik);
 ?>
 ]]>
     </programlisting>
     &example.outputs;
     <screen role="php">
 <![CDATA[
 Array
 (
     [0] => foo
     [1] => bar
 )
 ]]>
     </screen>
    </example>
   </para>
  </warning>
  <para>
   Patrz tak¿e: <function>array_merge_recursive</function>,
   <function>array_combine</function> i <link
    linkend="language.operators.array">operatory tablic</link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
