<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.6 Maintainer: leszek Status: ready -->
<!-- $Revision: 1.6 $ -->
  <refentry id="function.array-merge">
   <refnamediv>
    <refname>array_merge</refname>
    <refpurpose>£±czy dwie lub wiêcej tablic</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>array</type><methodname>array_merge</methodname>
      <methodparam><type>array</type><parameter>tablica1</parameter></methodparam>
      <methodparam><type>array</type><parameter>tablica2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_merge</function> ³±czy elementy dwóch lub wiêcej tablic
     razem, tak ¿e warto¶ci jednej tablicy s± wstawiane na koniec poprzedniej
     tablicy. Funkcja ta zwraca tabelê wynikow±.
    </para>
    <para>
     Je¶li tablice wej¶ciowe maj± takie same klucze tekstowe, najnowsza
     warto¶æ nadpisze starsz±. Jednak¿e je¶li tablice bêd± mia³y takie same
     klucze liczbowe, pó¼niejsza warto¶æ <emphasis
     role="strong">nie</emphasis> nadpisze starszej, lecz zostanie
     dopisana na koniec tablicy.
    </para>
    <para>
     <example>
      <title>Przyk³ad u¿ycia <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
$tablica1 = array ("kolor" => "czerwony", 2, 4);
$tablica2 = array ("a", "b", "kolor" => "zielony", "kszta³t" => "trapezoid", 4);
print_r(array_merge ($tablica1, $tablica2));
]]>
      </programlisting>
      <para>
       Powy¿szy przyk³ad wy¶wietli:
       <screen>
<![CDATA[
Array
(
    [kolor] => zielony
    [0] => 2
    [1] => 4
    [2] => a
    [3] => b
    [kszta³t] => trapezoid
    [4] => 4
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <para>
     <example>
      <title>Prosty przyk³ad u¿ycia <function>array_merge</function></title>
      <programlisting role="php">
<![CDATA[
$tablica1 = array();
$tablica2 = array(1 => "dane");
$wynik    = array_merge($tablica1, $tablica2);
]]>
       </programlisting>
       <para>
        Nie zapomnij ¿e klucze numeryczne bêd± przenumerowane!
        <screen role="php">
<![CDATA[
Array
(
[0] => dane
)
]]>
        </screen>
       </para>
       <para>
        Je¶li chcesz ca³kowicie zachowaæ tablice i tylko dodaæ jedn± na koñcu
        drugiej, u¿yj operatora <literal>+</literal>:
        <programlisting role="php">
<![CDATA[
$tablica1 = array();
$tablica2 = array(1 => "dane");
$wynik = $tablica1 + $tablica2;
]]>
        </programlisting>
        Klucze numeryczne pozostan± zachowane a co za tym idzie asocjacje
        zostan± niezmienione.
        <screen role="php">
<![CDATA[
Array
(
    [1] => dane
)
]]>
       </screen>
      </para>
     </example>
    </para>
    <note>
     <para>
      Wspó³dzielone klucze bêd± nadpisane na zasadzie pierwszy
      przyszed³-pierwszy obs³u¿ony.
     </para>
    </note>
    <para>
     Patrz tak¿e: <function>array_merge_recursive</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
