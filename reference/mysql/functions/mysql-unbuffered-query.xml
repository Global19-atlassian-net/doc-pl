<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 2c69dc3c075ff95fc1fcf2801ed48d7f48e90412 Maintainer: slawek Status: ready -->
<!-- $Revision$ -->
  <refentry xml:id="function.mysql-unbuffered-query" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_unbuffered_query</refname>
    <refpurpose>Wysy³a zapytanie do serwera MySQL nie pobieraj±c i buforuj±c wyniku</refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>resource</type><methodname>mysql_unbuffered_query</methodname>
      <methodparam><type>string</type><parameter>zapytanie</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>identyfikator_po³±czenia</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_unbuffered_query</function> wysy³a
     <parameter>zapytanie</parameter> SQL do serwera MySQL nie pobieraj±c
     i buforuj±c wyniku, jak to czyni <function>mysql_query</function>.
     Po pierwsze, zauwa¿alnie oszczêdza to pamiêæ, je¶li zapytania SQL
     generuj± du¿e wyniki. Po drugie, mo¿na pracowaæ na zbiorze wynikowym
     ju¿ po odebraniu od bazy pierwszego wiersza. Nie trzeba czekaæ, a¿
     zakoñczy siê dzia³anie zapytania. Przy pracy z kilkoma po³±czeniami do
     bazy, nale¿y dodaæ opcjonalny argument
     <parameter>identyfikator_po³±czenia</parameter>.
    </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>zapytanie</parameter></term>
     <listitem>
      <para>
       Zapytanie SQL
      </para>
     </listitem>
    </varlistentry>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Dla wyra¿eñ SELECT, SHOW, DESCRIBE lub EXPLAIN,
   <function>mysql_unbuffered_query</function>
   zwraca <type>zasób</type> w przypadku sukcesu lub &false; gdy
   nast±pi niepowodzenie.
  </para>
  <para>
   Dla innych typów wyra¿eñ SQL, UPDATE, DELETE, DROP, etc,
   <function>mysql_unbuffered_query</function> zwróci &true; w przypadku
   skucesu lub &false; gdy nast±pi niepowodzenie.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
    <note>
     <para>
      Oprócz korzy¶ci, funkcja <function>mysql_unbuffered_query</function>
      wprowadza pewne ograniczenia: nie mo¿na u¿yæ funkcji <function>mysql_num_rows</function> i
	  <function>mysql_data_seek</function> na zbiorze wyników zwróconym przez 
	  <function>mysql_unbuffered_query</function>.
	  Trzeba tak¿e pobraæ wszystkie wiersze wyniku niebuforowanego zapytania SQL przed wys³aniem
      kolejnego.
     </para>
    </note>
	 </refsect1> 
     
    <refsect1 role="seealso"> 
     &reftitle.seealso; 
     <para>
      <simplelist>
       <member><function>mysql_query</function></member>
      </simplelist>
     </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
