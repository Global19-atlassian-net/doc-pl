<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: slawek Status: ready -->
<!-- $Revision$ -->
  <refentry xml:id="function.mysql-fetch-array" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_fetch_array</refname> 
    <refpurpose>
     Zapisuje wiersz wyniku w tablicy asocjacyjnej, numerycznej lub w obu
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>array</type><methodname>mysql_fetch_array</methodname>
      <methodparam><type>resource</type><parameter>wynik</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        typ_wyniku
       </parameter></methodparam>
     </methodsynopsis>
    <para> 
     Zwraca tablicę zawierającą pobrany wiersz, lub
     &false; jeżeli nie ma więcej wierszy w <parameter>wynik</parameter>.
    </para>
    <para>
     <function>mysql_fetch_array</function> jest rozszerzoną wersją
     <function>mysql_fetch_row</function>. Oprócz zapisywania danych
     w indeksach numerycznych, zapisuje je też w indeksach
     przyporządkowujących (asocjacyjnych), używając nazw pól jako kluczy.
    </para>
    <para>
     Jeżeli dwie lub więcej kolumn wyniku ma te same nazwy, ostatnia
     kolumna będzie brana pod uwagę. Dostęp do innych kolumn o tej
     samej nazwie jest możliwy jedynie przez indeksowanie numeryczne
     lub przez stworzenie aliasa. Po stworzeniu aliasa nie można
     już odwoływać się do danej kolumny używając jej prawdziwej nazwy
     (w tym przykładzie używając <literal>'pole'</literal>).
     <example>
      <title>Zapytanie z powtarzającymi się nazwami pól</title>
      <programlisting role="sql">
<![CDATA[
select table1.field as foo table2.field as bar from table1, table2
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Godne uwagi jest to, że użycie <function>mysql_fetch_array</function>
     <emphasis>nie jest</emphasis> znacząco wolniejsze od użycia
     <function>mysql_fetch_row</function>, a jest bardziej funkcjonalne.
    </para>
    <para>
     Opcjonalny drugi argument <parameter>result_type</parameter> w
     funkcji <function>mysql_fetch_array</function> jest stałą i może
     przyjmować następujące wartości: MYSQL_ASSOC, MYSQL_NUM i MYSQL_BOTH.
     Tę funkcjonalność dodano w PHP 3.0.7. Wartością domyślną jest MYSQL_BOTH.
    </para>
    <para>
     Używając MYSQL_BOTH otrzymasz tablicę indeksowaną zarówno asocjacyjnie
     jak i numerycznie. MYSQL_ASSOC dostarczy tablicy indeksowanej tylko
     asocjacyjnie (jak w <function>mysql_fetch_assoc</function>), natomiast
     MYSQL_NUM indeksowanej tylko numerycznie (jak w
     <function>mysql_fetch_row</function>).
    </para>
    <example>
     <title>mysql_fetch_array z MYSQL_NUM</title>
     <programlisting role="php">
<![CDATA[
<?php
mysql_connect('localhost', 'uzytkownik', 'haslo') or
    die('Nie można się połączyć: ' . mysql_error());
mysql_select_db('baza');

$result = mysql_query("SELECT id, nazwa FROM tabela");

while ($row = mysql_fetch_array($result, MYSQL_NUM)) {
    printf ("ID: %s  Nazwa: %s", $row[0], $row[1]);  
}
mysql_free_result($result);
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>mysql_fetch_array z MYSQL_ASSOC</title>
     <programlisting role="php">
<![CDATA[
<?php
mysql_connect('localhost', 'uzytkownik', 'haslo') or
    die('Nie można się połączyć: ' . mysql_error());
mysql_select_db('baza');

$result = mysql_query("SELECT id, nazwa FROM tabela");

while ($row = mysql_fetch_array($result, MYSQL_ASSOC)) {
    printf ("ID: %s  Nazwa: %s", $row["id"], $row["nazwa"]);  
}
mysql_free_result($result);
?>
]]>
     </programlisting>
    </example>
    <example>
     <title>mysql_fetch_array z MYSQL_BOTH</title>
     <programlisting role="php">
<![CDATA[
<?php
mysql_connect('localhost', 'uzytkownik', 'haslo') or
    die('Nie można się połączyć: ' . mysql_error());
mysql_select_db('baza');

$result = mysql_query("SELECT id, nazwa FROM tabela");

while ($row = mysql_fetch_array($result, MYSQL_BOTH)) {
    printf ("ID: %s  Nazwa: %s", $row[0], $row["nazwa"]);  
}
mysql_free_result($result);
?>
]]>
     </programlisting>
    </example>
    <para>
     Patrz także:
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
