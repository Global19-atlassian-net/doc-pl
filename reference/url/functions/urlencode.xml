<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.7 Maintainer: adi Status: ready -->
<!-- $Revision: 1.6 $ -->
  <refentry id="function.urlencode">
   <refnamediv>
    <refname>urlencode</refname>
    <refpurpose>Koduje ³añcuch metod± kodowania URLi</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>string</type><methodname>urlencode</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <para>
     Zwraca ³añcuch w którym wszystkie nie alfanumeryczne znaki
     z wyj±tkiem <screen>-_.</screen> zosta³y zast±pione przez
     dwie cyfry szesnastkowe poprzedzone znakiem procenta
     (<literal>%</literal>), a spacje kodowane s± jako znak
     (<literal>+</literal>). To kodowanie jest takie same jak
     wykorzystywane przy przesy³aniu danych z formularzy WWW, tj.
     takie samo jak w media typie:
     <literal>application/x-www-form-urlencoded</literal>.
     Ró¿ni siê od kodowania z RFC1738 (zobacz
     <function>rawurlencode</function>) tym, ¿e z powodów historycznych,
     spacje s± kodowane jako znak plus (+).  Funkcja ta jest odpowiednia
     do zakodowania ³añcucha u¿ywanego w zapytaniu URL oraz
     jako zmienna przekazywana do nastêpnej strony:
     <example>
      <title><function>urlencode</function> przyk³ad</title>
      <programlisting role="php">
<![CDATA[
<?php
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
    Notka: Uwa¿aj na zmienne, które mog± zawieraæ HTML'owe encje.
    Rzeczy jak &amp;amp, &amp;copy i &amp;pound s± przetwarzane przez
    przegl±darkê i ich aktualna postaæ jest u¿ywana dalej zamiast
    porz±danej nazwy zmiennej.  To jest oczywisty problem, o którym W3C
    informuje ludzi od lat. Referencje s± tutaj:
    <ulink url="&url.argsep;">&url.argsep;</ulink> PHP obs³uguje
    zmianê separatora argumentów na zalecany przez W3C ¶rednik
    poprzez dyrektywê arg_separator .ini.  Niestety wiêkszo¶æ przegl±darek
    nie wysy³a danych z formularza w formacie u¿ywaj±cym ¶rednik jako
    separator. Bardziej przeno¶nym rozwi±zaniem jest u¿ycie &amp;amp;
    jako separatora zamiast &amp;.  Nie musisz zmieniaæ PHP'owego
    arg_separator aby to uzyskaæ.  Zostaw separator jako &amp;, ale
    koduj swoje URL'e u¿ywaj±c
    htmlentities(urlencode($data)).
	</para>  
    <para>  
     <example>
      <title><function>urlencode</function> i
             <function>htmlentities</function> przyk³ad</title>
      <programlisting role="php">
<![CDATA[
<?php
echo '<a href="mycgi?foo=', htmlentities(urlencode($userinput)), '">';
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Patrz tak¿e: <function>urldecode</function>,
     <function>htmlentities</function>,
     <function>rawurldecode</function> i
     <function>rawurlencode</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
