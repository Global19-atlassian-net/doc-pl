<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.14 Maintainer: adi Status: ready -->
<!-- $Revision: 1.8 $ -->
<refentry id="function.parse-url">
 <refnamediv>
  <refname>parse_url</refname>
  <refpurpose>Przetwarza adres URL i zwraca jego sk³adowe</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>parse_url</methodname>
   <methodparam><type>string</type><parameter>url</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sk³adnik</parameter></methodparam>
  </methodsynopsis>
  <para>
   Funkcja przetwarza URL i zwraca tablicê asocjacyjn± zawieraj±c± ka¿dy z 
   komponentów wchodz±cych w sk³ad URL.
   </para>
  <para>
    Ta funkcja <emphasis role="strong">nie s³u¿y</emphasis> do sprawdzania
	poprawno¶ci podanego URL, tylko rozbija go na podane ni¿ej czê¶ci. Czê¶ciowe
	URLe tak¿e s± obs³ugiwane <function>parse_url</function> postara siê przetworzyæ
	je poprawnie.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>url</parameter></term>
     <listitem>
      <para>
       Adres URL do przetworzenia
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   <variablelist>
    <varlistentry>
     <term><parameter>sk³adnik</parameter></term>
     <listitem>
      <para>
       Podaj jedn± ze sta³ych <constant>PHP_URL_SCHEME</constant>,
       <constant>PHP_URL_HOST</constant>, <constant>PHP_URL_PORT</constant>,
       <constant>PHP_URL_USER</constant>, <constant>PHP_URL_PASS</constant>,
       <constant>PHP_URL_PATH</constant>, <constant>PHP_URL_QUERY</constant>
       or <constant>PHP_URL_FRAGMENT</constant> aby otrzymaæ okre¶lony sk³adnik URL
	   jako <type>string</type>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   W przypadku powa¿nie zdeformowanych URLi, <function>parse_url</function> mo¿e zwróciæ
   &false; i wyemitowaæ <constant>E_WARNING</constant>. W przeciwnym wypadku zostanie zwrócona asocjatywna tablica,
   której sk³adowe mog± byæ nastêpuj±ce (wyst±pi przynajmnej jedena):  
   <itemizedlist>
    <listitem>
     <simpara>
      <structfield>scheme (protokó³)</structfield> - np. http
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>host</structfield> 
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>port</structfield>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>user (u¿ytkownik)</structfield>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>pass (has³o)</structfield>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>path (¶cie¿ka)</structfield>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>query (zapytanie)</structfield> - po znaku <literal>?</literal>
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      <structfield>fragment</structfield> - po znaku <literal>#</literal>
    </simpara> 
	</listitem> 
	</itemizedlist> 
	</para>
	<para>
   Je¶li parametr <parameter>sk³adnik</parameter> jest okre¶lony, zwracany jest
   <type>string</type> zamiast <type>array</type>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.2</entry>
       <entry>Dodano parametr <parameter>sk³adnik</parameter></entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
	
</refsect1> 
<refsect1 role="examples"> &reftitle.examples; 
<para> 
<example> 
<title>A <function>parse_url</function> przyk³ad</title>
<programlisting role="php">
<![CDATA[
<?php
$url = 'http://uzytkownik:haslo@serwer/sciezka?arg=wartosc#kotwica';

print_r(parse_url($url));
echo parse_url($url, PHP_URL_PATH);
?>
]]> 
</programlisting> 
&example.outputs; 
<screen> 
<![CDATA[
Array
(
    [scheme] => http
	[host] => serwerer
	[user] => uzytkownik
	[pass] => haslo
	[path] => /sciezka
	[query] => arg=wartosc
	[fragment] => kotwica
)
/sciezka
]]>
</screen> 
</example>
</para>
</refsect1>
<refsect1 role="notes">
&reftitle.notes;
<note>
<para>
Funkcja nie dzia³a na relatywnych URLach.
</para>
</note>
<note>
<para>
<function>parse_url</function> jest przeznaczona do przetwarzania URLi, a nie URI.
Jednak¿e, aby zastosowaæ wymóg wstecznej kompatybilno¶ci PHP, zrobiono wyj±tek dla
protoko³u file:// gdzie potrójne uko¶niki (file:///...) s± dozwolone. Dla innych protoko³ów
jest to nieprawid³owe.
</para>
</note>
</refsect1>
<refsect1 role="seealso"> &reftitle.seealso;
<para>
<simplelist>
<member><function>pathinfo</function></member>
<member><function>parse_str</function></member>
<member><function>http_build_query</function></member>
<member><function>dirname</function></member>
<member><function>basename</function></member>
</simplelist>
</para>
</refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->