<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.1 Maintainer: qrak Status: ready -->
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./en/functions/http.xml, last change in rev 1.2 -->
  <refentry xml:id="function.header" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Wysy³a surowy nag³owek HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>void</type><methodname>header</methodname>
      <methodparam><type>string</type><parameter>tre¶æ_nag³ówka</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>zamieñ</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>kod_odpowiedzi_http</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>header</function> s³u¿y do wys³ania surowego
     nag³ówka <acronym>HTTP</acronym>.
     Zajrzyj do <link xlink:href="&url.rfc;2616">Specyfikacji HTTP 1.1</link>
     aby dowiedzieæ siê wiêcej na temat nag³ówków <acronym>HTTP</acronym>.
    </para>
     <note> 
      <para> 
       Pocz±wszy od PHP 4.4.2 i PHP 5.1.2 funkcja nie pozwala na wys³anie
       wiêcej ni¿ jednego nag³ówka za jednym razem jest to zabezpieczenie
       przeciwko atakom typu iniekcja nag³owka (header injection).
      </para> 
     </note> 
    <para>
     Argument opcjonalny <parameter>zamieñ</parameter> okre¶la, czy funkcja
     ma zast±piæ nag³ówek tego samego typu, czy dodaæ jeszcze jeden.
     Domy¶lnie, zostanie zast±piony, ale je¶li ustawisz ten argument na &false;,
     mo¿esz wymusiæ wielokrotne nag³owki tego samego typu. Na przyk³ad:
    </para> 
    <para> 
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header('WWW-Authenticate: Negociate');
header('WWW-Authenticate: NTLM', false);
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Drugi argument opcjonalny <parameter>kod_odpowiedzi_http</parameter>
     pozwala narzuciæ okre¶lony kod odpowiedzi HTTP. (Argument ten jest dostêpny
     w PHP 4.3.0 i wy¿szych).
    </para>
    <para>
     S± dwa specjalne wywo³ania funkcji header. Pierwszym z nich jest ka¿dy
     nag³ówek zaczynaj±cy siê od "<literal>HTTP/</literal>" (wielko¶æ liter
     nie jest istotna). Nag³ówka tego u¿ywa siê do podania statusu zapytania
     HTTP. Na przyk³ad, je¶li skonfigurowa³e¶ serwer Apache aby u¿ywa³ skryptu
     PHP do wy¶wietlania komunikatów o brakuj±cych plikach (za pomoc± dyrektywy
     <literal>ErrorDocument</literal>), mo¿esz chcieæ wypróbowaæ, czy skrypt
     generuje w³a¶ciwy kod statusu.
     </para> 
     <para> 
       <informalexample>  
        <programlisting role="php">  
<![CDATA[
<?php
header("HTTP/1.0 404 Not Found");
?>
]]>
        </programlisting>  
       </informalexample>  
      </para>
       <note>  
        <para>
         Status po³±czenia HTTP zawsze bêdzie wys³any do klienta w pierwszej
	 linii, niezale¿nie od kolejno¶ci wywo³ania funkcji <function>header</function>.
	 Status mo¿e byæ nadpisany w dowolnym momencie - dopóki nag³owki HTTP
	 nie zosta³y wys³ane - poprzez wywo³anie <function>header</function> z 
	 now± lini± statusu.
        </para>  
       </note>  
      <para>
       Drugim specjalnym wywo³aniem funkcji header jest nag³ówek
       "Location:". W tej sytuacji, do klienta wysy³any jest nie tylko ten
       nag³ówek, ale tak¿e status przekierowania <literal>REDIRECT</literal>
       (302), o ile inny kod statusu <literal>3xx</literal> nie zosta³
       ju¿ wys³any.  
      </para> 
      <para> 
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
header("Location: http://www.example.com/"); /* Przekieruj przegl±darkê */
/* Upewnij siê, ¿e kod poni¿ej nie zostanie wykonany po przekierowaniu. */
exit;                 
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Protokó³ HTTP 1.1 wymaga bezwzglêdnego <acronym>URI</acronym> w nag³ówku
      <link xlink:href="&spec.http1.1;-sec14.html#sec14.30">Location:</link>
      w³±cznie z okre¶leniem protoko³u, nazwy hosta i bezwzglêdnej scie¿ki
      dostêpu, ale niektóre klienty akceptuj± wzglêdne URI.
      Zwykle u¿ywa siê <literal>$_SERVER['HTTP_HOST']</literal>, 
      <literal>$_SERVER['PHP_SELF']</literal> i funkcji <function>dirname</function>
      by wygenerowaæ samemu bezwglêdny URI ze wzglêdnego:
      <informalexample>
       <programlisting role="php">
<![CDATA[
<?php
/* Przekieruj do innej strony w tym samym katalogu z którego nast±pi³o ¿±danie */
$host  = $_SERVER['HTTP_HOST'];
$uri   = rtrim(dirname($_SERVER['PHP_SELF']), '/\\');
$extra = 'mypage.php';
header("Location: http://$host$uri/$extra");
exit;
?>
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
     <note> 
      <para>
        Identyfikator sesji nie jest przekazywany w nag³ówku Location chocia¿by <link 
        linkend="ini.session.use-trans-sid">session.use_trans_sid</link> by³ 
        w³±czony. Musi zostaæ przekazany rêcznie u¿ywaj±c sta³ej <constant>SID</constant>.
      </para> 
    </note> 
    <para>
     Skrypty PHP czêsto s³u¿± do generowania dynamiczej tre¶ci, która
     nie mo¿e byæ buforowana przez klienta czy serwer proxy znajduj±cy siê
     pomiêdzy serwerem a przegl±dark± klienta. Wiele klientów i proxy mo¿na
     zmusiæ do wy³±czenia buforowania za pomoc±: 
    </para> 
    <para> 
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1 
header("Expires: Mon, 26 Jul 1997 05:00:00 GMT");    // data w przesz³o¶ci
?>
]]>
      </programlisting>
     </informalexample>
    </para>
     <note>
      <para>
       Mo¿esz zaobserwowaæ, ¿e strony nie s± buforowane, nawet je¶li
       nie u¿y³e¶ wszystkich ww. nag³ówków. Jest wiele sposobów, w jakie
       u¿ytkownicy mog± skonfigurowaæ swoje przegl±darki, aby zmieniæ
       standardowy sposób buforowania. Przez wys³anie powy¿szych nag³ówków,
       powinno siê udaæ omin±æ wszystkie ustawienia pozwalaj±ce
       na zbuforowanie wyniku pracy twojego skryptu.
      </para>
      <para>
       Dodatkowo, <function>session_cache_limiter</function> i dyrektywa
       konfiguracyjna <literal>session.cache_limiter</literal> s³u¿±
       do automatycznego generowania nag³ówków zwi±zanych z bufurowaniem,
       kiedy sesje s± w u¿yciu.
      </para>
     </note>
    <para>
     Pamiêtaj, ¿e <function>header</function> musi byæ wywo³any
     przed wys³aniem jakiejkolwiek tre¶ci tak¿e znaczników HTML,
     pustych lini w pliku lub z PHP. Jest to bardzo czêsty b³±d,
     gdzie skrypty z funkcjami <function>include</function>, 
     <function>require</function> lub innymi operuj±cymi na plikach,
     maj± spacje albo puste linie przed wywo³aniem funkcji <function>header</function>. 
     Problem ten pojawia siê równie¿ w skryptach opartych na
     pojedynczym pliku PHP/HTML.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<html>
<?php
/*  Ten kod powoduje powstanie b³êdu. Proszê zauwa¿yæ, ¿e
 * ponad wywo³aniem funkcji header() znajduje siê jaka¶ tre¶æ. */
header('Location: http://www.na_przyklad.com/');
?>
]]>
      </programlisting>
     </informalexample>
    </para>
     <note>
      <para>
       Od PHP 4 mo¿na u¿yæ buforowania wyj¶cia aby omin±æ ten problem.
       Wszystko, co skrypt przesy³a do przegl±darki zostanie przechowane na
       serwerze dopóki tego nie wy¶lesz.
       Mo¿na to zrobiæ za pomoc± funkcji <function>ob_start</function> i
       <function>ob_end_flush</function>, lub ustawiaj±c dyrektywê kofiguracyjn±
       <literal>output_buffering</literal> w pliku &php.ini;
       lub w plikach konfiguracyjnych serwera.
      </para>
     </note>
    <para>
     Aby u¿ytkownik zosta³ zapytany o zapisanie wysy³anych danych,
     takich jak np. wygenerowany plik PDF, mo¿na u¿yæ nag³ówka <link
     xlink:href="&url.rfc2183;">Content-Disposition</link> aby podaæ zalecan± nazwê
     pliku i zmusiæ przegl±darkê do wy¶wietlenia okienka zapisu pliku.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// przesy³amy plik PDF
header('Content-type: application/pdf');

// ustawiamy jego nazwê na downloaded.pdf
header('Content-Disposition: attachment; filename="downloaded.pdf"');

// tre¶æ znajduje siê w pliku original.pdf
readfile('original.pdf');
?>
]]>
      </programlisting>
     </informalexample>
    </para>
     <note>
      <para>
       W Microsoft Internet Explorer 4.01 jest b³±d, który uniemo¿liwia
       wykorzystanie tego mechanizmu. Nie ma na to rozwi±zania. B³±d, który
       zahacza o ten mechanizm, jest tak¿e w Microsoft Internet Explorer 5.5,
       jednak da siê go omin±æ aktualizuj±c przegl±darkê poprzez Service Pack 2
       lub pó¼niejszy.
      </para>
     </note>
    <note> 
     <simpara>
      Je¶li <link linkend="ini.safe-mode">tryb bezpieczny</link> jest
      w³±czony, uid skryptu jest dodane do czê¶ci <literal>realm</literal>
      nag³ówka <literal>WWW-Authenticate</literal>, je¶li ustawisz ten
      nag³ówek (wykorzystuje siê go do autoryzacji HTTP).
     </simpara> 
    </note> 
    <para>
     Patrz tak¿e: <function>headers_sent</function>,
     <function>setcookie</function> i rozdzia³ 
     <link linkend="features.http-auth">Autoryzacja HTTP</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
