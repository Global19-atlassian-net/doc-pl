<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.13 Maintainer: leszek Status: ready -->
<!-- $Revision: 1.6 $ -->
  <refentry id="function.session-set-save-handler">
   <refnamediv>
    <refname>session_set_save_handler</refname>
    <refpurpose>
     Ustawia funkcje u¿ytkownika do przechowywania sesji
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>bool</type><methodname>session_set_save_handler</methodname>
      <methodparam><type>callback</type><parameter>otwórz</parameter></methodparam>
      <methodparam><type>callback</type><parameter>zamknij</parameter></methodparam>
      <methodparam><type>callback</type><parameter>czytaj</parameter></methodparam>
      <methodparam><type>callback</type><parameter>zapisz</parameter></methodparam>
      <methodparam><type>callback</type><parameter>niszcz</parameter></methodparam>
      <methodparam><type>callback</type><parameter>gc</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>session_set_save_handler</function> ustawia funkcje u¿ytkownika
     do obs³ugi przechowywania sesji, które u¿ywane sa do zapisywania i
     odtwarzania danych skojarzonych z sesj±. Jest to bardzo przydatne je¶li
     preferowany jest sposób przechowywania sesji inny ni¿ ten, który jest
     dostarczany z PHP, np. przechowywanie danych sesji w lokalnej bazie
     danych.
     &return.success;
    </para>
    <note>
     <para>
      Procedura obs³ugi "zapisz" nie bêdzie wywo³ana dopóki strumieñ wyj¶ciowy
      jest otwarty. W zwi±zku z tym, wyj¶cie instrukcji debugowania zawartych
      w procedurze "zapisz" nigdy nie bêdzie widoczne w oknie przegl±darki.
      Je¶li konieczne jest wyj¶cie debugowania, sugerowane jest zapisanie tego
      wyj¶cia do pliku.
     </para>
    </note>
    <para>
     Poni¿szy przyk³ad opisuje metodê przechowywania danych sesyjnych w
     plikach, podobn± do tej obs³ugiwanej wewnêtrznie przez PHP. Przyk³ad ten
     mo¿e byæ ³atwo rozszerzony aby móc u¿yæ go z twoj± ulubion± baz± danych
     obs³ugiwan± przez PHP.
    </para>
    <para>
     Funkcja czytaj±ca zawsze musi zwracaæ ci±g aby procedura obs³ugi dzia³a³a
     zgodnie z przewidywaniami. Zwróæ pusty ci±g je¶li nie ma ¿adnych danych
     do odczytania. Warto¶ci zwracane przez inne procedury obs³ugi s±
     konwertowane na wyra¿enia logiczne. &true; dla sukcesu, &false; dla
     niepowodzenia.
    </para>
    <warning>
     <para>
      Od wersji PHP 5.0.5, funkcje obs³ugi zapisu i zamykania wywo³ywane s± po
      zniszczeniu obiektów. W zwi±zku z tym, destruktory mog± u¿ywaæ sesji,
      ale nie mog± u¿ywaæ obiektów. W wersjach wcze¶niejszych, wywo³ywane by³y
      w odwrotnej koljeno¶ci. Mo¿liwe jest wywo³anie
      <function>session_write_close</function> z destruktora aby rozwi±zaæ ten
      problem kury i jajka.
     </para>
    </warning>
    <para>
     <example>
      <title>
       Przyk³ad <function>session_set_save_handler</function>
      </title>
      <programlisting role="php">
<![CDATA[
<?php

function open ($save_path, $session_name)
{
  global $sess_save_path, $sess_session_name;
       
  $sess_save_path = $save_path;
  $sess_session_name = $session_name;
  return(true);
}

function close()
{
  return(true);
}

function read ($id)
{
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "r")) {
    $sess_data = fread($fp, filesize($sess_file));
    return($sess_data);
  } else {
  return(""); // Zawsze musi zwracaæ ""
  }

}

function write ($id, $sess_data)
{
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "w")) {
    return(fwrite($fp, $sess_data));
  } else {
    return(false);
  }

}

function destroy ($id)
{
  global $sess_save_path, $sess_session_name;
       
  $sess_file = "$sess_save_path/sess_$id";
  return(@unlink($sess_file));
}

/*********************************************
 * UWAGA: Musisz sam zaimplementowaæ obs³ugê *
 * zbierania ¶mieci (gc)                     *
 *********************************************/
 function gc ($maxlifetime)
 {
  return true;
}

session_set_save_handler ("open", "close", "read", "write", "destroy", "gc");

session_start();

// dalej normalnie u¿ywaj sesji

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Zobacz tak¿e opis dyrektywy konfiguracji <link
      linkend="ini.session.save-handler">session.save_handler</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
