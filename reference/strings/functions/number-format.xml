<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: qrak Status: ready -->
<!-- $Revision$ -->
<!-- splitted from ./en/functions/math.xml, last change in rev 1.2 -->
  <refentry xml:id="function.number-format" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>number_format</refname>
    <refpurpose>Formatuje liczbę według szablonu</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>string</type><methodname>number_format</methodname>
      <methodparam><type>float</type><parameter>liczba</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>miejsc_dziesiętnych</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>przecinek_dziesiętny</parameter></methodparam>
      <methodparam><type>string</type><parameter>separator_tysięcy</parameter></methodparam>
     </methodsynopsis>
    <para>
     Funkcja <function>number_format</function> zwraca sformatowaną liczbę
     <parameter>liczba</parameter> według podanych argumentów. Ta funkcja
     przyjmuje jeden, dwa lub cztery argumenty (nie trzy):
    </para>
    <para>
     Jeśli podany jest tylko jeden argument, <parameter>liczba</parameter>
     zostanie sformatowana bez miejsc dziesiętnych ale z przecinkiem (",")
     pomiędzy każdą grupą tysięcy.
    </para>
    <para>
     Jeśli podane są dwa argumenty, <parameter>liczba</parameter> będzie
     sformatowana z <parameter>miejsc_dziesiętnych</parameter>, z kropką
     (".") w charakterze przecinka dziesiętnego i przecinkiem (",")
     pomiędzy każdą grupą tysięcy.
    </para>
    <para>
     Kiedy wszystkie cztery parametry są podane, <parameter>liczba</parameter>
     będzie sformatowana z <parameter>miejsc_dziesiętnych</parameter>,
     z <parameter>przecinek_dziesiętny</parameter> zamiast kropki (".") i
     <parameter>separator_tysięcy</parameter> pomiędzy każdą grupą tysięcy.
    </para>
    <note>
     <para>
      Tylko pierwszy znak z <parameter>separator_tysięcy</parameter> jest
      wykorzystywany. Na przykład, jeśli użyjesz <literal>foo</literal> jako
      separatora, to z liczby <literal>1000</literal> funkcja zwróci
      <literal>1f000</literal>.
     </para>
    </note>
    <para>
    <example>
     <title><function>number_format</function> - przykłady</title>
     <para>
      W polskiej notacji liczbowej używa się przecinka (",") jako przecinka
      dziesiętnego i spacji (" ") jako separatora tysięcy. W PHP można
      to zrobić tak:
     </para>
      <programlisting role="php">
<![CDATA[
<?php

    $liczba = 1234.56;

    // notacja angielska (domyślna)
    $notacja_angielska = number_format($liczba);
    // 1,234.56

    // notacja polska
    $notacja_polska = number_format($liczba, 2, ',', ' ');
    // 1 234,56

    $number = 1234.5678;

    // notacja angielska bez separatora tysięcy
    $notacja_angielska = number_format($liczba, 2, '.', '');
    // 1234.57

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Patrz także: <function>money_format</function>, <function>sprintf</function>,
     <function>printf</function> i <function>sscanf</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
