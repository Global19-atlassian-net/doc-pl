<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: fa8878d2a548c5ee197762bdce2b20f23d539627 Maintainer: adi Status: ready -->
<!-- $Revision$ -->
<!-- CREDITS: dombal -->
<refentry xml:id="function.token-get-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>token_get_all</refname>
  <refpurpose>Dzieli zadane ¼ród³o na tokeny PHP</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>token_get_all</methodname>
   <methodparam><type>string</type><parameter>¼ród³o</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>token_get_all</function> parsuje zadane
   <parameter>¼ród³o</parameter>, czyli ci±g znaków zawieraj±cy kod PHP,
   zamieniaj±c je na tokeny jêzyka PHP przy u¿yciu analizy leksykalnej
   silnika Zend.
  </para>
  <para>	
   Listê tokenów identyfikowanych przez parser znajdziesz w <xref
   linkend="tokens"/>, mo¿esz tak¿e u¿yæ funkcji
   <function>token_name</function> by przet³umaczyæ warto¶æ tokena na jego
   nazwê.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>¼ród³o</parameter></term>
     <listitem>
      <para>
       ¬ród³o PHP do sparsowania.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Tablica zindentyfikowanych tokenów. Ka¿dy pojedynczy token identyfikowany
   jest poprzez pojedynczy znak (np.: <literal>;</literal>, <literal>.</literal>, 
   <literal>&gt;</literal>, <literal>!</literal>, etc...),
   lub trójelementow± tablicê zawieraj±c± indeks tokenu w elemencie 0 i
   ³añcuch znaków zawieraj±cy oryginalny token w elemencie 1 i numer linii w elemencie 2.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    <example>
     <title>Przyk³ady u¿ycia <function>token_get_all</function></title>
      <programlisting role="php">
<![CDATA[
<?php
  $tokeny = token_get_all('<?php echo; ?>'); /* => array(
                                                    array(T_OPEN_TAG, '<?php'), 
                                                    array(T_ECHO, 'echo'),
                                                    ';',
                                                    array(T_CLOSE_TAG, '?>') ); */
.
/* W nastêpnym przyk³adzie zwróæ uwagê na fakt, i¿ ci±g znaków jest parsowany
   jako T_INLINE_HTML, inaczej ni¿ oczekiwane T_COMMENT (T_ML_COMMENT w PHP
   <5). Jest tak z powodu braku w "kodzie" otwieraj±cych/zamykaj±cych tagów
   PHP. Jest to jednoznaczne z komentarzem znajduj±cym siê poza tagami <?php
   ?> w normalnym pliku. */
  $tokeny = token_get_all('/* koment. */'); // => array(array(T_INLINE_HTML, '/* koment. */'));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.2</entry>
       <entry>Numer linii jest zwracany w elemencie 2
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
