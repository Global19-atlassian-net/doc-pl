<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.1 Maintainer: Qrak Status: ready -->
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/datetime.xml, last change in rev 1.2 -->
  <refentry id="function.mktime">
   <refnamediv>
    <refname>mktime</refname>
    <refpurpose>Oblicza uniksowy znacznik czasu dla podanej daty</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>int</type><methodname>mktime</methodname>
      <methodparam><type>int</type><parameter>godzina</parameter></methodparam>
      <methodparam><type>int</type><parameter>minuta</parameter></methodparam>
      <methodparam><type>int</type><parameter>sekunda</parameter></methodparam>
      <methodparam><type>int</type><parameter>miesi±c</parameter></methodparam>
      <methodparam><type>int</type><parameter>dzieñ</parameter></methodparam>
      <methodparam><type>int</type><parameter>rok</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>letni/zimowy</parameter></methodparam>
     </methodsynopsis>
    <para>
     <emphasis>Uwaga:</emphasis> Proszê zwróciæ uwagê na dziwn± kolejno¶æ
     argumentów, zupe³nie odmienn± od spotykanej w standardowym wywo³aniu
     uniksowym mktime(); która w dodatku nie jest praktyczna przy opuszczaniu
     argumentów
     od prawej do lewej (patrz ni¿ej). Czêstym b³êdem w skryptach s± pomy³ki
     w kolejno¶ci tych argumentów.
    </para>
    <para>
     Funkcja zwraca uniksowy znacznik czasu odpowiadaj±cy podanym argumentom.
     Znacznik czasu jest liczb± ca³kowit± d³ug± (long integer) zawieraj±c±
     liczbê sekund dziel±c± uniksow± Epokê (1 stycznia 1970) od podanego
     w argumentach czasu.
    </para>
    <para>
     Argumenty mog± byæ opuszczane w kolejno¶ci od prawej do lewej. Za ka¿dy
     pominiêty argument bêdzie wówczas wstawiona aktualna warto¶æ, zgodnie
     z lokalnym czasem/dat±.
    </para>
    <para>
     Argument <parameter>letni/zimowy</parameter> mo¿e byæ ustawiony na 1, je¶li
     to czas zimowy, lub 0 je¶li letni, lub -1 (domy¶lnie) je¶li niewiadomo,
     czy letni czy zimowy. Je¶li niewiadomo, PHP spróbuje ustaliæ to
     samodzielnie. Mo¿e to powodowaæ nieoczekiwane (ale na pewno poprawne)
     wyniki.
    </para>
    <note>
     <para>
      Argument <parameter>letni/zimowy</parameter> dodano w PHP 3.0.10.
     </para>
    </note>
    <para>
     Funkcja <function>mktime</function> przydaje siê przy wykonywaniu
     arytmetyki dat i walidacji, gdy¿ automatycznie policzy w³a¶ciw± warto¶æ
     dla danych spoza przedzia³ów. Na przyk³ad, ka¿da poni¿sza linia wy¶wietli
     "Jan-01-1998".
     <example>
      <title>przyk³ad <function>mktime</function></title>
      <programlisting role="php">
<![CDATA[
echo date ("M-d-Y", mktime (0,0,0,12,32,1997));
echo date ("M-d-Y", mktime (0,0,0,13,1,1997));
echo date ("M-d-Y", mktime (0,0,0,1,1,1998));
echo date ("M-d-Y", mktime (0,0,0,1,1,98));
]]>
      </programlisting>
     </example>
     <parameter>rok</parameter> mo¿e byæ liczb± dwu lub czterocyfrow±, przy
     czym warto¶ci dwucyfrowe z przedzia³u 0-69 bêd± mapowane do 2000-2069,
     a z przedzia³u 70-99 do 1970-1999 (w systemach, w których time_t jest
     32-bitow± liczb± ca³kowit± ze znakiem, co jest obecnie najpopularniejszym
     rozwi±zaniem, poprawny zakres argumentu <parameter>rok</parameter>
     zawiera siê pomiêdzy 1902 a 2037).
    </para>
    <para>
     Ostatni dzieñ dowolnego miesi±ca mo¿e byæ wyra¿ony jako zerowy dzieñ
     nastêpnego miesi±ca, ale nie jako -1 dzieñ. Obydwa poni¿sze przyk³ady
     wy¶wietl± "Ostatni dzieñ lutego 2000 to: 29".
     <example>
      <title>Ostatni dzieñ miesi±ca</title>
      <programlisting role="php">
<![CDATA[
$ostatni = mktime (0,0,0,3,0,2000);
echo strftime ("Ostatni dzieñ lutego 2000 to: %d", $ostatni);
     
$ostatni = mktime (0,0,0,4,-31,2000);
echo strftime ("Ostatni dzieñ lutego 2000 to: %d", $ostatni);
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
    Data z rokiem, miesi±cem i dniem równym zero jest niepoprawna (w przeciwnym
    razie oznacza³oby to 30.11.1999, co mog³oby powodowaæ dziwne rezultaty).
    </simpara>
    <para>
     Patrz tak¿e <function>date</function> i <function>time</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
