<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.12 Maintainer: adi Status: ready -->
<!-- $Revision: 1.4 $ -->
  <refentry id="function.fgets">
   <refnamediv>
    <refname>fgets</refname>
    <refpurpose>Pobiera liniê ze wska¼nika pliku</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>string</type><methodname>fgets</methodname>
      <methodparam><type>resource</type><parameter>uchwyt</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>d³ugo¶æ</parameter></methodparam>
     </methodsynopsis>
    <para>
     Zwraca ³añcuch o d³ugo¶ci - 1 bajtów odczytany z pliku wskazanego
     przez <parameter>uchwyt</parameter>. Czytanie koñczy siê kiedy przeczytano d³ugo¶æ - 1 bajtów
     lub gdy wyst±pi znak nowej linii (jest on do³±czany do zwracanego
     wyniku) lub gdy wyst±pi znak koñca pliku EOF (którykolwiek
     przypadek zdarzy siê pierwszy). Je¶li nie zosta³a okre¶lona d³ugo¶æ,
     domy¶lnie przyjmuje 1k (1024 bajty).
    </para>
    <para>
     W przypadku b³êdu, zwraca &false;.
    </para>
    <para>
     G³ówna pu³apka:
    </para>
    <simpara>
     Osoby przyzwyczajone do semantyki 'C' powinni zauwa¿yæ ró¿nicê
     w sposobie zwracania <literal>EOF</literal> przez <function>fgets</function>.
     </simpara>
      &fs.validfp.all;
    <para>
     Prosty przyk³ad:
     <example>
      <title>Czytanie pliku linia po linii</title>
      <programlisting role="php">
<![CDATA[
<?php
$uchwyt = fopen ("/tmp/inputfile.txt", "r");
while (!feof ($uchwyt)) {
    $buffer = fgets($uchwyt, 4096);
    echo $buffer;
}
fclose ($uchwyt);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      Parametr <parameter>d³ugo¶æ</parameter> sta³ siê opcjonalny w PHP 4.2.0
	  je¶li zosta³ pominiêty, to powinien przyj±æ warto¶æ 1024.  
      W PHP 4.3, pominiêcie <parameter>d³ugo¶æ</parameter> powoduje odczytywanie
	  ze strumienia do chwili osi±gniêcia koñca lini,
	  Je¶li wiêkszo¶æ lini w pliku jest d³u¿sza od 8KB, du¿o efektywniejsze
	  jest podanie maksymalnej d³ugo¶ci linii.
     </simpara>
    </note>
	<note> 
       <simpara> 
        Funkcja jest binaarnie bezpieczna od PHP 4.3.  Poprzednie wersje
		nie s± binarnie bezpieczne.
       </simpara> 
      </note> 
      &note.line-endings; 
    <para>
     Patrz tak¿e: <function>fread</function>,
	 <function>fgetc</function>,  
     <function>stream_get_line</function>,  
	 <function>fopen</function>,
     <function>popen</function>, 
	 <function>fsockopen</function> i 
	 <function>socket_set_timeout</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
