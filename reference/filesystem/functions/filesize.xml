<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: n/a Maintainer: adi Status: ready -->
<!-- $Revision$ -->
<refentry xml:id="function.filesize" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>filesize</refname>
  <refpurpose>Pobiera rozmiar pliku</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Opis</title>
  <methodsynopsis>
   <type>int</type><methodname>filesize</methodname>
   <methodparam><type>string</type><parameter>nazwa_pliku</parameter></methodparam>
  </methodsynopsis>
  <para>
  Zwraca rozmiar pliku w bajtach, lub &false; (oraz zostanie wygenerowany b³±d na poziomie
  <constant>E_WARNING</constant>) w przypadku b³êdu.
  </para>
  <note>
   <simpara>
    Poniewa¿ PHPowy typ integer jest oznaczony (ang. signed, dopuszcza liczby ujemne
    i dodatnie) i wiele platform u¿ywa 32 bitowego integera, <function>filesize</function>
    mo¿e zwróciæ nieoczekiwane wyniki dla plików wiêkszych od 2 GB.
    Dla plików o rozmiarze pomiêdzy 2 GB, a 4 GB mo¿na zwykle przezwyciê¿yæ to
    u¿ywaj±c <literal>sprintf("%u", filesize($plik))</literal>.
   </simpara>
   </note>
    &note.clearstatcache;

    &tip.fopen-wrapper.stat;
  <para>
   <example>
    <title><function>filesize</function> przyk³ad</title>
    <programlisting role="php">
<![CDATA[
<?php

// wy¶wietli np. jakisplik.txt: 1024 bajtów

$filename = 'jakisplik.txt';
echo $filename . ': ' . filesize($filename) . ' bajtów';

?>
]]>
     </programlisting>
    </example>
   </para>
  <simpara>
    Patrz tak¿e: <function>file_exists</function>
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
