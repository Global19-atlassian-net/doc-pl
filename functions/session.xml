<?xml encoding="iso-8859-2"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.session">
  <title>Funkje obs³ugi sesji</title>
  <titleabbrev>Sesje</titleabbrev>
	
  <partintro>
   <para>
    Obs³uga sesji w PHP ma na celu zapewnienie sposobu na zachowanie pewnych
    danych w trakcie nastêpuj±cych po sobie wywo³añ strony. Pozwala to na
    budowanie bardziej spersonalizowanych aplikacji i zwiêkszenie
    atrakcyjno¶ci twojej strony internetowej.
   </para>
   <para>
    Je¶li jeste¶ zaznajomiony z zarz±dzaniem sesj± w PHPLIB, zauwa¿ysz ¿e
    pewnie koncepcje s± podobne w ob³udze sesji PHP.
   </para>
   <para>
    Go¶æ wchodz±cy na twoj± stronê WWW otrzymuje unikalny identyfikator, tzw.
    id sesji. Jest ono przechowywane albo jako ciasteczko po stronie
    u¿ytkownika lub propagowane w URL'u.
   </para>
   <para>
    Obs³uga sesji pozwala ci na rejestrowanie dowolnej ilo¶ci zmiennych, które
    maj± byæ przekazywane pomiêdzy stronami. Kiedy go¶æ wchodzi na twoj±
    strone, PHP automatycznie sprawdzi (je¶li session.auto_start jest ustawione
    na 1) lub na twoje ¿yczenie (jawnie przez wywo³anie
    <function>session_start</function> lub niejawnie przez wywo³anie
    <function>session_register</function>) czy specyficzne id sesji zosta³o
    przypisane. Je¶li tak, poprzednio zachowane ¶rodowisko jest odtwarzane.
   </para>
   <para>
    Wszystkie zarejestrowane zmienne s± serializowane po wykonaniu ca³ego kodu
    strony. Zarejestrowane zmienne, które s± niezdefiniowane, s± zaznaczane
    jako niezdefijiowane. Nie s± one definiowane przez modu³ sesji w
    nastêpuj±cych po sobie wywo³aniach, chyba ¿e u¿ytkownik zdefiniuje je
    pó¼niej.
   </para>
   <para>
    Opcje konfiguracyjne <link
    linkend="ini.track-vars"><literal>track_vars</literal></link> i
    <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>
    wp³ywaj± na to, jak zmienne sesyjne s± przechowywane i odtwarzane.
   </para>

   <note>
    <para>
     Od PHP w wersji 4.0.3 opcja <link
     linkend="ini.track-vars"><literal>track_vars</literal></link> jest zawsze
     w³±czona.
    </para>
   </note>

   <para>
    Je¶li w³±czona jest opcja <link
    linkend="ini.track-vars"><literal>track_vars</literal></link> a
    <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>
    jest wy³±czona, tylko pozycje nale¿±ce do zmiennej asocjacyjnej
    $HTTP_SESSION_VARS mog± byæ zarejestrowane jako zmienne sesyjne.
    Odtworzone zmienne sesyjne bêd± dostêpne tylko w zmiennej
    $HTTP_SESSION_VARS.
  <example>
     <title>
      Rejestracja zmiennej z w³±czon± opcj± <link
      linkend="ini.track-vars"><literal>track_vars</literal></link>
     </title>
     <programlisting role="php">
&lt;?php
session_register("count");
$HTTP_SESSION_VARS["count"]++;
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Je¶li w³±czona jest opcja <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>,
    wszystkie globalne zmienne mog± byæ zarejestrowane jako zmienne sesyjne a
    zmienne sesyjne bêd± odtworzone do odpowiadaj±cych im zmiennych
    globalnych.
  <example>
     <title>
      Rejestracja zminnych z w³±czon± opcj± <link
      linkend="ini.register-globals"><literal>register_globals</literal></link>
     </title>
     <programlisting role="php">
&lt;?php
session_register("count");
$count++;
?&gt;
     </programlisting>
    </example>
   </para>
   <para>
    Je¶li w³±czone s± obie opcje, <link
    linkend="ini.track-vars"><literal>track_vars</literal></link> i
    <link
    linkend="ini.register-globals"><literal>register_globals</literal></link>,
    globalne zmienne i wpisy w $HTTP_SESSION_VARS bêd± referencjami do tej
    samej warto¶ci.
   </para>
   <para>
    Istniej± dwie metody propagacji identyfikatora sesji:
    <itemizedlist>
     <listitem>
      <simpara>
       Ciasteczka
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Parametry URL'a
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    Modu³ sesji obs³uguje obie metody. Ciasteczka s± metod± optymaln±, ale
    poniewa¿ nie s± one pewne (klienci nie musz± ich akceptowaæ), nie mo¿êmy
    na nich polegaæ. Druga metora wstawia identyfikatory sesji bezpo¶rednio do
    URL'i.
   </para>
   <para>
    PHP mo¿e to robiæ 'przezroczy¶cie' je¶li zosta³ skompilowany z opcj±
    <link linkend="install.configure.enable-trans-sid">
    <literal>--enable-trans-sid</literal></link>. Je¶li w³±czysz t± opcjê,
    wzglêdne URI zostan± automatycznie podmienione tak, aby zawiera³y
    identyfikator sesji. Mo¿esz tak¿e u¿yæ sta³ej <literal>SID</literal> która
    jest definiowana je¶li klient nie wys³a³ odpowiedniego ciastka. <literal>
    SID</literal> jest albo w postaci <literal>nazwa_sesji=id_sesji</literal>
    lub pustym stringiem.
   </para>
   <para>
    Poni¿szy przyk³ad demonstruje jak zarejestrowaæ zmienn± i jak prawid³owo
    wstawiæ link do kolejnej strony korzystaj±c ze sta³ej SID.
    <example>
     <title>Zliczanie ilo¶ci odwiedzin pojedyñczego u¿ytkownika</title>
     <programlisting role="php">
&lt;?php
session_register ("count");
$count++;
?&gt;

Witaj go¶ciu. Ogl±dasz t± stronê &lt;?php echo $count; ?&gt; raz.&lt;p&gt;

&lt;php?
# &lt;?=SID?&gt; jest konieczne do zachowania identyfikatora sesji je¶li
# u¿ytkownik wy³±czy³ ciastka
?&gt;

Aby kontynuowaæ, &lt;A HREF="nextpage.php?&lt;?=SID?&gt;"&gt;kliknij tutaj&lt;/A&gt;
     </programlisting>
    </example>
   </para>
   <para>
    <literal>&lt;?=SID?&gt;</literal> nie jest konieczne je¶li przy kompilacji
    PHP u¿yta zosta³a opcja
    <link linkend="install.configure.enable-trans-sid">
    <literal>--enable-trans-sid</literal></link>.
   </para>
   <note>
    <para>
     PHP zak³ada, ¿e bezwzglêdne URLe odnosz± siê do zewnêtrznych serwisów,
     wiêc nie trzeba przekazywaæ SID, poniewa¿ istnia³oby niebezpieczeñstwo
     podkradania SIDów przez inny serwer.
    </para>
   </note>
   <para>
    Aby zaimplementowaæ przechowywanie danych sesyjnych w bazie danych lub w
    dowolnej innej postaci, musisz u¿yæ
    <function>session_set_save_handler</function> do stworzenia zestawu
    funkcji przechowuj±cych dane.
   </para>
   <para>
    System zarz±dzania sesj± obs³uguje wiele opcji konfiguracyjnych, które
    mo¿esz wstawiæ do swojego pliku php.ini. Oto ich krótki przegl±d.
    <itemizedlist>
     <listitem>
      <simpara>
       <literal>session.save_handler</literal> definiuje nazwê procedury
       obs³ugi, która jest u¿ywana do przechowywania i odczytu danych
       skojarzonych z sesj±. Domy¶lnie <literal>files</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.save_path</literal> definiuje argument, który jest
       przekazywany procedurze obs³ugi zapisu danych. Je¶li wybierzesz
       domy¶ln± procedurê obs³ugi, jest to ¶cie¿ka gdzie tworzone bêd± pliki z
       danymi. Domy¶lnie <literal>/tmp</literal>.
      </simpara>
      <warning>
       <para>
        Je¶li w tej opcji ustawisz katalog, który jest ogólnie dostêpny, jak
        na przyk³ad <filename>/tmp</filename> (domy¶lna warto¶æ), inni
        u¿ytkownicy serwera bêd± w stanie przechwyciæ sesjê przez pobranie
        listy plików z tego katalogu.
       </para>
      </warning>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.name</literal> okre¶la nazwê sesji, która jest u¿ywana
       jako nazwa ciastka. Powinna zawieraæ tylko znaki alfanumeryczne.
       Domy¶lnie <literal>PHPSESSID</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.auto_start</literal> okre¶la, czy modu³ sesji
       rozpoczyna sesjê na pocz±tku wywo³ania. Domy¶lnie
       <literal>0</literal> (wy³±czony).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_lifetime</literal> okre¶la d³ugo¶æ ¿ycia w
       sekundach ciastka przesy³anego do przegl±darki. Warto¶æ 0 oznacza
       "dopóki przegl±darka nie zosta³a zamkniêta". Domy¶lnie
       <literal>0</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.serialize_handler</literal> okre¶la nazwê procedury
       obs³ugi, która zostanie u¿yta do serializacji/odserializacji danych.
       Obecnie obs³ugiwany jest wewnêtrzny format PHP (nazwa <literal>php
       </literal> i WDDX (nazwa <literal>wddx</literal>). WDDX jest jedynym
       dostêpnym formatem je¶li PHP zosta³o skompilowane z
       <link linkend="ref.wddx">obs³ug± WDDX</link>. Domy¶lnie
       <literal>php</literal>.
       </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.gc_probability</literal> okre¶la prawdopodobieñstwo w
       procentach rozpoczêcia procedury gc (garbage collection - zbieranie
       ¶mieci) przy ka¿dym wywo³aniu. Domy¶lnie <literal>1</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.gc_maxlifetime</literal> okre¶la ilo¶æ sekund, po
       jakich dane bêd± rozpoznawane jako '¶mieci' i usuwane.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.referer_check</literal> zawiera podci±g, z którym
       HTTP_REFERER ma byæ sprawdzany. Je¶li HTTP_REFERER zosta³ wys³any przez
       klienta i nie zawiera³ podanego podci±gu, identyfikator sesji podany
       przez takiego klienta zostanie uznany za niewa¿ny. Domy¶lnie jest to
       ci±g pusty. 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.entropy_file</literal> podaje ¶cie¿kê do zewnêtrznego
       zasobu (pliku), który bêdzie u¿yty jako dodatkowe ¼ród³o entropii w
       procesie tworzenia identyfikatora sesji. Przyk³ady to
       <literal>/dev/random</literal> lub
       <literal>/dev/urandom</literal>, które s± dostêpne na wielu systemach
       Unix.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.entropy_length</literal> okre¶la liczbê bajtów, która
       bêdzie odczytana z pliku podanego powy¿ej. Domy¶lnie
       <literal>0</literal> (wy³±czona).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.use_cookies</literal> okre¶la czy modu³ bêdzie u¿ywa³
       ciasteczek do przechowywania identyfikatora sesji po stronie klienta.
       Domy¶lnie <literal>1</literal> (w³±czona).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_path</literal> okre¶la ¶cie¿kê która bêdzie
       podana w session_cookie. Domy¶lnie <literal>/</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cookie_domain</literal> okre¶la domenê która ma byæ
       podana w session_cookie. Domy¶lnie - pusta.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cache_limiter</literal> okre¶la metodê u¿ywan± do
       przechowywania stron sesyjnych w pamiêci podrêcznej 
       (nocache/private/private_no_expire/public). Domy¶lnie
       <literal>nocache</literal>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.cache_expire</literal> okre¶la czas ¿ycia w minutach
        stron sesyjnych zachowanych w pamiêci podrêcznej. Nie ma to efektu dla
        metody <literal>nocache</literal>. Domy¶lnie <literal>180</literal>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>session.use_trans_sid</literal> okre¶la czy bêdzie u¿ywana
       obs³uga przezroczystego przekazywania identyfikatora sesji. Opcja brana
       pod uwagê tylko je¶li PHP zosta³o skompilowane z opcj±
       <link linkend="install.configure.enable-trans-sid">
       <literal>--enable-trans-sid</literal></link>.
       Domy¶lnie <literal>1</literal> (w³±czona).
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <literal>url_rewriter.tags</literal> okre¶la które tagi HTML zostaj±
       przepisane w celu dopisania identyfikatora sesji je¶li w³±czona zosta³a
       opcja przezroczystego przekazywania identyfikatora sesji. Domy¶lnie
       <literal>a=href,area=href,frame=src,input=src,form=fakeentry</literal>
      </simpara>
     </listitem>
    </itemizedlist>
    <note>
     <para>
      Obs³uga sesji zosta³a dodana w PHP 4.0.
     </para>
    </note>
   </para>
  </partintro>

  <refentry id="function.session-start">
   <refnamediv>
    <refname>session_start</refname>
    <refpurpose>Inicjalizuj dane sesji</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_start</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>session_start</function> tworzy sesjê (lub odtwarza bie¿±c±
      w oparciu o identyfikator sesji przekazywany przez zmienne GET lub
      ciasteczko).</simpara>
    <simpara>
     Ta funkcja zawsze zwraca warot¶æ &true;.
    </simpara>
    <note>
     <para>
      Ta funkcja zosta³a dodana w PHP 4.0.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-destroy">
   <refnamediv>
    <refname>session_destroy</refname>
    <refpurpose>Niszczy wszystkie dane zarejestrowane w sesji</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_destroy</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     <function>session_destroy</function> niszczy wszystkie dane skojarzone z
     bie¿±c± sesj±.
    </simpara>
    <simpara>
     Funkcja ta zawraca &true; w przypadku sukcesu w niszczeniu danych sesji.
     W przeciwnym przypadku zwracana jest warto¶æ &false;.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.session-name">
   <refnamediv>
    <refname>session_name</refname>
    <refpurpose>Pobierz i/lub ustaw nazwê bie¿±cej sesji</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_name</function></funcdef>
      <paramdef>string 
       <parameter><optional>nazwa</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_name</function> zwraca nazwê bie¿±cej sesji. Je¶li
     podano parametr <parameter>name</parameter>, nazwa bie¿±cej sesji
     zostanie zmieniona na t± warto¶æ.
    </para>
    <para>
     Nazwa sesji jest u¿ywana w identyfikatorze sesji w ciasteczkach i URLach.
     Powinna zawieraæ tylko znaki alfanumeryczne; powinna byæ krótka i
     tre¶ciwa (np. dla u¿ytkowników z w³±czonymi ostrze¿eniami o
     ciasteczkach). Nazwa sesji jest przywracana do domy¶lnej warto¶ci
     okre¶lonej w <literal>session.name</literal> na pocz±tku wywo³ania
     strony, a wiêc musisz wywo³aæ <function>session_name</function> dla
     ka¿dej strony (przed wywo³aniem w niej <function>session_start</function>
     i <function>session_register</function>).
    </para>
    <example>
     <title>Przyk³ady <function>session_name</function></title>
     <programlisting role="php">
&lt;?php

# ustaw nazwê sesji na WebsiteID

$poprzednia_nazwa = session_name ("WebsiteID");

echo "Poprzedni± nazw± sesji by³o $poprzednia_nazwa&lt;p&gt;";
?&gt;
     </programlisting>
    </example>
    <note>
     <para>
      Funkcja ta zosta³a dodana w PHP 4.0.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-module-name">
   <refnamediv>
    <refname>session_module_name</refname>
    <refpurpose>Pobierz i/lub ustaw modu³ bie¿±cej sesji</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_module_name</function></funcdef>
      <paramdef>string 
       <parameter><optional>modu³</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_module_name</function> zwraca nazwê bie¿±cego modu³u
     sesji. Je¶li podany zosta³ parametr <parameter>modu³</parameter>, u¿yty
     zostanie nowo podany modu³.
     <note>
      <para>
       Ta funkcja zosta³a dodana w PHP 4.0.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-save-path">
   <refnamediv>
    <refname>session_save_path</refname>
    <refpurpose>Pobierz i/lub ustaw ¶cie¿kê zapisu bie¿±cej sesji</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_save_path</function></funcdef>
      <paramdef>string 
       <parameter><optional>¶cie¿ka</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_save_path</function> zwraca ¶cie¿kê do katalogu, który
     aktualnie jest u¿ywany do zapisu danych sesji. Je¶li podany zosta³
     parametr <parameter>¶cie¿ka</parameter>, zmieniona zostanie ¶cie¿ka
     zapisu danych.
     <note>
      <para>
       Na niektórych systemach operacyjnych mo¿esz chciaæ podaæ ¶cie¿kê do
       systemu plików, który lepiej obs³uguje du¿e ilo¶ci ma³ych plików. Na
       przyk³ad na Linuksie reiserfs w takich warunkach ma lepsz± wydajno¶æ
       ni¿ ext2fs.
      </para>
     </note>
     <note>
      <para>
       Ta funkcja zosta³a dodana w PHP 4.0.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-id">
   <refnamediv>
    <refname>session_id</refname>
    <refpurpose>Pobierz i/lub ustaw identyfikator bie¿±cej sesji</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_id</function></funcdef>
      <paramdef>string <parameter><optional>id</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_id</function> zwraca identyfikator sesji dla bie¿±cej
     sesji. Je¶li podany zosta³ parametr <parameter>id</parameter>, zostanie
     on u¿yty do zmiany identyfikatora bie¿±cej sesji.
    </para>
    <para>
     Do pobrania nazwy i identyfikatora bie¿±cej sesji mo¿a byæ u¿yta tak¿e
     sta³a <systemitem>SID</systemitem>, która zawiera string odpowiedni do
     dodawania go do URLi.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-register">
   <refnamediv>
    <refname>session_register</refname>
    <refpurpose>
     Zarejestruj jedn± lub wiêcej zmiennych w bie¿±cej sesji
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_register</function></funcdef>
      <paramdef>mixed <parameter>nazwa</parameter></paramdef>
      <paramdef>mixed
       <parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_register</function> jest funkcj± o zmiennej liczbie
     argumentów, z których ka¿dy mo¿e byæ albo stringiem zawieraj±cym nazwê
     zmiennej lub tablic± zawieraj±c± nazwy zmiennych lub inne tablice. Dla
     ka¿dej napotkanej nazwy zmiennej, <function>session_register</function>
     rejestruje w bie¿±cej sesji globaln± zmienn± o danej nazwie.
    </para>
    <para>
     Funkcja ta zwraca warto¶æ &true; je¶li zmienna zosta³a pomy¶lnie
     zarejestrowana w sesji.
    </para>
    <note>
     <para>
      W chwili obecnej niemo¿liwe jest zarejestrowanie w sesji zmiennych
      zawieraj±cych zasoby. Na przyk³ad, nie mo¿esz stworzyæ po³±czenia do
      bazy danych i zachowaæ identyfikator po³±czenia jako zmienn± sesyjn± i
      oczekowaæ, ¿e po³±czenie ci±gle bêdzie aktywne po odtworzeniu danych
      sesji. Funkcjê PHP, która zwraca zasoby, identyfikuje siê przez
      zwracanie typu <literal>resource</literal> w definicji funkcji. Listê
      funkcji, które zwracaj± zasoby, mo¿na znale¼æ w za³±czniku
      <link linkend="resource">typy zasobów</link>.
     </para>
    </note>
    <note>
     <para>
      Funkcja ta zosta³a dodana w PHP 4.0.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-unregister">
   <refnamediv>
    <refname>session_unregister</refname>
    <refpurpose>
     Wyrejestruj zmienn± z bie¿±cej sesji
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_unregister</function></funcdef>
      <paramdef>string <parameter>nazwa</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_unregister</function> wyrejestrowuje (zapomina)
     globaln± zmienn± o nazwie <parameter>nazwa</parameter> z bie¿±cej sesji.
    </para>
    <para>
     Funkcja ta zwraca warto¶æ &true; je¶li zmienna zosta³a pomy¶lnie
     wyrejestrowana z sesji.
     <note>
      <para>
       Funkcja ta zosta³a dodana w PHP 4.0.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.session-unset">
   <refnamediv>
    <refname>session_unset</refname>
    <refpurpose>
     Zwolnij wszystkie zmienne sesyjne
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>session_unset</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja <function>session_unset</function> zwalnia wszystkie zmienne
     sesyjne, które s± aktualnie zarejestrowane.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-is-registered">
   <refnamediv>
    <refname>session_is_registered</refname>
    <refpurpose>
     Sprawd¼, czy zmienna jest zarejestrowana w sesji
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_is_registered</function></funcdef>
      <paramdef>string <parameter>nazwa</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_is_registered</function> zwraca warto¶æ &true; je¶li w
     bie¿±cej sesji zarejestrowana jest zmienna o nazwie
     <parameter>nazwa</parameter>.
     <note>
      <para>
       Funkcja ta zosta³a dodana w PHP 4.0.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.session-get-cookie-params">
   <refnamediv>
    <refname>session_get_cookie_params</refname>
    <refpurpose>
     Pobierz parametry ciasteczka sesyjnego
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>
       array <function>session_get_cookie_params</function>
      </funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja <function>session_get_cookie_params</function> zwraca tablicê
     zawieraj±c± informacje o bie¿±cym ciasteczku sesyjnym. Tablica zawiera
     poni¿sze informacje:
     <itemizedlist>
      <listitem>
       <simpara>
        "lifetime" -  Czas ¿ycia ciasteczka.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "path" -  ¦cie¿ka na której przechowywane s± informacje.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "domain" -  Domena ciasteczka.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-set-cookie-params">
   <refnamediv>
    <refname>session_set_cookie_params</refname>
    <refpurpose>
     Ustaw parametry ciasteczka sesyjnego
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>session_set_cookie_params</function></funcdef>
      <paramdef>
       int <parameter>czas_¿ycia</parameter>
      </paramdef>
      <paramdef>
       string <parameter><optional>¶cie¿ka</optional></parameter>
      </paramdef>
      <paramdef>
       string <parameter><optional>domena</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Ustaw parametry ciasteczka pierwotnie zdefiniowane w pliku php.ini. Efekt
     dzia³ania tej funkcji widoczny jest tylko do koñca dzia³ania skryptu.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-decode">
   <refnamediv>
    <refname>session_decode</refname>
    <refpurpose>Dekoduje dane sesji ze stringu</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>session_decode</function></funcdef>
      <paramdef>string <parameter>dane</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_decode</function> dekofuje dane sesji zawarte w
     parametrze <parameter>dane</parameter>, ustawiaj±c zmienne zachowane w
     sesji.
     <note>
      <para>
       Ta funkcja zosta³a dodana w PHP 4.0.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-encode">
   <refnamediv>
    <refname>session_encode</refname>
    <refpurpose>
     Koduje dane bie¿±cej sesji do postaci stringu
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_encode</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_encode</function> zwraca string zawieraj±cy zakodowane
     dane bie¿±cej sesji.
     <note>
      <para>
       Ta funkcja zosta³a dodana w PHP 4.0.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-set-save-handler">
   <refnamediv>
    <refname>session_set_save_handler</refname>
    <refpurpose>
     Ustawia funkcje u¿ytkownika do przechowywania sesji
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void
       <function>session_set_save_handler</function>
      </funcdef>
      <paramdef>string
      <parameter>otwórz</parameter></paramdef><paramdef>string
      <parameter>zamknij</parameter></paramdef><paramdef>string
      <parameter>czytaj</parameter></paramdef><paramdef>string
      <parameter>zapisz</parameter></paramdef><paramdef>string
      <parameter>niszcz</parameter></paramdef><paramdef>string
      <parameter>gc</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_set_save_handler</function> ustawia funkcje u¿ytkownika
     do obs³ugi przechowywania sesji, które u¿ywane sa do zapisywania i
     odtwarzania danych skojarzonych z sesj±. Jest to bardzo przydatne je¶li
     preferowany jest sposób przechowywania sesji inny ni¿ ten, który jest
     dostarczany z PHP, np. przechowywanie danych sesji w lokalnej bazie
     danych.
    </para>
    <note>
     <para>
      W swoim pliku php.ini musisz ustawiæ opcjê konfiguracji
      <parameter>session.save_handler</parameter> na
      <parameter>user</parameter> aby
      <function>session_set_save_handler</function> zadzia³a³o.
     </para>
    </note>
    <note>
     <para>
      Procedura obs³ugi "zapisz" nie bêdzie wywo³ana dopóki strumieñ wyj¶ciowy
      jest otwarty. W zwi±zku z tym, wyj¶cie instrukcji debugowania zawartych
      w procedurze "zapisz" nigdy nie bêdzie widoczne w oknie przegl±darki.
      Je¶li konieczne jest wyj¶cie debugowania, sugerowane jest zapisanie tego
      wyj¶cia do pliku.
     </para>
    </note>
    <para>
     Poni¿szy przyk³ad opisuje metodê przechowywania danych sesyjnych w
     plikach, podobn± do tej obs³ugiwanej wewnêtrznie przez PHP. Przyk³ad ten
     mo¿e byæ ³atwo rozszerzony aby móc u¿yæ go z twoj± ulubion± baz± danych
     obs³ugiwan± przez PHP.
    </para>
    <para>
     <example>
      <title>
       Przyk³ad <function>session_set_save_handler</function>
      </title>
      <programlisting role="php">
&lt;?php

function open ($save_path, $session_name) {
  global $sess_save_path, $sess_session_name;
       
  $sess_save_path = $save_path;
  $sess_session_name = $session_name;
  return(true);
}

function close() {
  return(true);
}

function read ($id) {
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "r")) {
    $sess_data = fread($fp, filesize($sess_file));
    return($sess_data);
  } else {
    return("");
  }

}

function write ($id, $sess_data) {
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "w")) {
    return(fwrite($fp, $sess_data));
  } else {
    return(false);
  }

}

function destroy ($id) {
  global $sess_save_path, $sess_session_name;
       
  $sess_file = "$sess_save_path/sess_$id";
  return(@unlink($sess_file));
}

/*********************************************
 * UWAGA: Musisz sam zaimplementowaæ obs³ugê *
 * zbierania ¶mieci (gb)                     *
 *********************************************/
function gc ($maxlifetime) {
  return true;
}

session_set_save_handler ("open", "close", "read", "write", "destroy", "gc");

session_start();

// dalej normalnie u¿ywaj sesji

?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.session-cache-limiter">
   <refnamediv>
    <refname>session_cache_limiter</refname>
    <refpurpose>
     Pobierz i/lub ustaw bie¿±cy ogranicznik pamiêci podrêcznej
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>session_cache_limiter</function></funcdef>
      <paramdef>string 
       <parameter><optional>ogranicznik</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>session_cache_limiter</function> zwraca nazwê bie¿±cego
     ogranicznika pamiêci podrêcznej. Je¶li podany zosta³ parametr
     <parameter>ogranicznik</parameter>, nazwa bie¿±cego ogranicznego zostanie
     zmieniona na now± warto¶æ.
    </para>
    <para>
     Ogranicznik pamiêci podrêcznej kontroluje nag³ówki HTTP wysy³ane do
     klienta. Nag³ówki te ustalaj± zasady, wed³ug których zawarto¶æ strony
     mo¿e byæ przechowywana w pamiêci podrêcznej przegl±darki. Ustawiaj±c
     ogranicznik pamiêci podrêcznej na przyk³ad na<literal>nocache</literal>,
     zabronimy jakiekolwiek zachowywanie strony po stronie klienta. Warto¶æ
     <literal>public</literal> pozwoli na takie przechywanie. Ogranicznikiem
     mo¿e byæ te¿ <literal>private</literal>, który jest troszkê bardziej
     restrykcyjny ni¿ <literal>public</literal>.
    </para>
    <para>
     W trybie <literal>private</literal>, nag³ówek <literal>Expire</literal>,
     który jest wysy³any do klienta, mo¿e spowodowaæ nieoczekiwane dzia³anie
     niektórych przegl±darem, miêdzy innymi Mozilli. Mo¿esz unikn±æ tego
     problemu u¿ywaj±c trybu <literal>private_no_expire</literal>. Nag³ówek
     <literal>Expire</literal> nie jest w tym wypadku wysy³any do klienta.
    </para>
    <note>
     <para>
      <literal>private_no_expire</literal> zosta³o dodane w PHP 4.2.0dev.
     </para>
    </note>
    <para>
     Ogranicznik pamiêci podrêcznej w momencie wywo³ania skryptu jest zerowany
     do warto¶ci domy¶lnej przechowywanej w 
     <literal>session.cache_limiter</literal>. W zwi±zku z tym niezbêdne jest
     wywo³anie <function>session_cache_limiter</function> dla ka¿dego
     wywo³ania skryptu (i przed wywo³aniem <function>session_start</function>).
    </para>
    <example>
     <title>Przyk³ady <function>session_cache_limiter</function></title>
     <programlisting role="php">
&lt;?php

# Ustaw ogranicznik pamiêci podrêcznej na 'private'

session_cache_limiter('private');
$cache_limiter = session_cache_limiter();

echo "Ogranicznikiem pamiêci podrêcznej jest teraz $cache_limiter&lt;p&gt;";
?&gt;
     </programlisting>
    </example>
    <note>
     <para>
      Funkcja ta zosta³a dodana w PHP 4.0.3.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.session-write-close">
   <refnamediv>
    <refname>session_write_close</refname>
    <refpurpose>Zapisz dane i zakoñcz sesjê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>session_write_close</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zakoñcz bie¿±c± sesjê i zachowaj dane sesji.
    </para>
    <para>
     Dane sesji s± zazwyczaj przechowywane do czasu zakoñczenie dzia³ania
     skryptu bez konieczno¶ci wywo³ania <function>session_write_close
     </function>, ale poniewa¿ dane sesji s± blokowane w celu zapobie¿enia
     równoleg³ym zapisom, tylko jeden skrypt mo¿e operowaæ na sesji w danej
     chwili. U¿ywaj±c ramek HTMLowych razem z sesjami napotkasz problemy
     zwi±zane z jednoczesnym korzystaniem z jednej sesji przez kilka skryptów.
     Mo¿esz zmniejszyæ czas niezbêdny do wczytania wszystkich ramek przez
     koñczenie sesji jak tylko wykonane s± wszystkie zmiany w zmiennych
     sesyjnych.
    </para>
<!-- wykomentowane do czasu ostatecznej decyzji o implementacji
    <para>
     Zobacz tak¿e: <function>session_readonly</function>.
    </para>
-->
   </refsect1>
  </refentry>

<!-- wykomentowane do czasu ostatecznej decyzji o implementacji
  <refentry id="function.session-readonly">
   <refnamediv>
    <refname>session_readonly</refname>
    <refpurpose>Rozpocznij sesjê - reinicjalizuj zamro¿one zmienne, ale nie
    nie zapisuj zmian po zakoñczeniu wywo³ania</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>session_readonly</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Odczytaj dane sesji bez blokowania tych danych. Nie jest mo¿liwa zmiana
     danych sesyjnych, ale zwiêkszona jest wydajno¶æ ramek HTML.
    </para>
   </refsect1>
  </refentry>
-->
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
