<?xml version="1.0" encoding="iso-8859-2"?>
<!-- $Revision: 1.3 $ -->
<!-- t³umacz Tomasz Wójtowicz <tomek-w@wp.pl>
t³umaczone z wersji 1.2 angielskiego math.xml 2001-10-12
aktualizacja do wersji en 1.8 z naszego CVSu w dniu 2001-11-29
-->
 <reference id="ref.math">
  <title>Funkcje Matematyczne</title>
  <titleabbrev>Math</titleabbrev>
  
  <partintro>
   <sect1 id="math.intro">
    <title>Wprowadzenie</title>
    <para>
     Omówione poni¿ej funkcje operuj± na warto¶ciach z przedzia³ów typów
     <type>integer</type> i <type>float</type> na twoim komputerze (co odpowiada
     zakresowi long resp. double jêzyka C).
     Je¶li potrzebujesz obs³ugi wiêkszych liczb, zajrzyj do <link
     linkend="ref.bc">funkcji matematycznych dla liczb dowolnej dok³adno¶ci
     </link>
    </para>
    <sect2 id="math.constants">
     <title>Sta³e matematyczne</title>
     <para>
      Poni¿sze warto¶ci s± zdefiniowane w PHP jako sta³e w rozszerzeniu
      matematycznym:
      <table>
       <title>Sta³e matematyczne</title>
       <tgroup cols="3">
    <thead>
     <row>
      <entry>Sta³a</entry>
      <entry>Wartosæ</entry>
      <entry>Opis</entry>
     </row>
    </thead>
    <tbody>
    <row>
     <entry>M_PI</entry>
     <entry>3.14159265358979323846</entry>
     <entry>Pi</entry>
    </row>
    <row>
     <entry>M_E</entry>
     <entry>2.7182818284590452354</entry>
     <entry>e</entry>
    </row>
    <row>
     <entry>M_LOG2E</entry> 
     <entry>1.4426950408889634074</entry>   
     <entry>log_2 e</entry>
    </row>
    <row>
     <entry>M_LOG10E</entry>
     <entry>0.43429448190325182765</entry>  
     <entry>log_10 e</entry>
    </row>
    <row>
     <entry>M_LN2</entry>   
     <entry>0.69314718055994530942</entry>      
     <entry>log_e 2</entry>
    </row>
    <row>
     <entry>M_LN10</entry>  
     <entry>2.30258509299404568402</entry>  
     <entry>log_e 10</entry>
    </row>
    <row>
     <entry>M_PI_2</entry>
     <entry>1.57079632679489661923</entry>  
     <entry>pi/2</entry>
    </row>
    <row>
     <entry>M_PI_4</entry>
    <entry>0.78539816339744830962</entry>   
     <entry>pi/4</entry>
    </row>
    <row>
     <entry>M_1_PI</entry>
     <entry>0.31830988618379067154</entry>  
     <entry>1/pi</entry>
    </row>
    <row>
     <entry>M_2_PI</entry>
     <entry>0.63661977236758134308</entry>  
     <entry>2/pi</entry>
    </row>
    <row>
     <entry>M_SQRTPI</entry>    
     <entry>1.77245385090551602729</entry>  
     <entry>sqrt(pi) [4.0.2]</entry>
    </row>
    <row>
     <entry>M_2_SQRTPI</entry>  
     <entry>1.12837916709551257390</entry>  
     <entry>2/sqrt(pi)</entry>
    </row>
    <row>
     <entry>M_SQRT2</entry> 
     <entry>1.41421356237309504880</entry>  
     <entry>sqrt(2)</entry>
    </row>
    <row>
     <entry>M_SQRT3</entry> 
     <entry>1.73205080756887729352</entry>  
     <entry>sqrt(3) [4.0.2]</entry>
    </row>
    <row>
     <entry>M_SQRT1_2</entry>   
     <entry>0.70710678118654752440</entry>  
     <entry>1/sqrt(2)</entry>
    </row>
    <row>
     <entry>M_LNPI</entry>  
     <entry>1.14472988584940017414</entry>  
     <entry>log_e(pi) [4.0.2]</entry>
    </row>
    <row>
     <entry>M_EULER</entry> 
     <entry>0.57721566490153286061</entry>  
     <entry>Sta³a Eulera [4.0.2]</entry>
    </row>
    </tbody>
       </tgroup>
      </table>
     Tylko sta³a M_PI by³a dostêpna w wsze¶niejszych wersjach PHP do PHP4RC1
     w³±cznie. Pozosta³e pojawi³y siê w PHP 4.0. Sta³e oznaczone [4.0.2] zosta³y
     dodane w PHP 4.0.2.
     </para>
    </sect2>
   </sect1>
  </partintro>

  <refentry id="function.abs">
   <refnamediv>
    <refname>abs</refname>
    <refpurpose>Warto¶æ bezwglêdna (modu³ z liczby)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>abs</function></funcdef>
      <paramdef>mixed <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca warto¶æ bezwzglêdn± podanej liczby. Je¶li argument is typu 
     <type>float</type>, zwracana warto¶æ jest tak¿e <type>float</type>,
     inaczej zwracana jest warto¶æ <type>integer</type> (<type>float</type>
     ma zwykle szerszy zakres ni¿ <type>integer</type>).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.acos">
   <refnamediv>
    <refname>acos</refname>
    <refpurpose>Arcus cosinus</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>acos</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca w radianach arcus cosinus argumentu.
    </para>
    <para>
     Zobacz te¿ <function>acosh</function>, 
     <function>asin</function> i <function>atan</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.acosh">
   <refnamediv>
    <refname>acosh</refname>
    <refpurpose>Odwrotny cosinus hiperboliczny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>acosh</function></funcdef>
      <paramdef>float <parameter>arg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca odwrotny cosinus hiperboliczny z liczby <parameter>arg</parameter>,
     tzn. tak± warto¶æ, której cosinus hiperboliczny równy 
     <parameter>arg</parameter>.
    </para>
    &note.no-windows;
    <para>
     Zobacz te¿ <function>acos</function>, <function>asin</function>
     and <function>atan</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.asin">
   <refnamediv>
    <refname>asin</refname>
    <refpurpose>Arcus sinus</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>asin</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca w radianach arcus sinus argumentu.
    </para>
    <para>
     Zobacz te¿ <function>asinh</function>, <function>acos</function>
      i <function>atan</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.asinh">
   <refnamediv>
    <refname>asinh</refname>
    <refpurpose>Odwrotny sinus hiperboliczny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>asinh</function></funcdef>
      <paramdef>float <parameter>arg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca odwrotny sinus hiperboliczny z liczby <parameter>arg</parameter>,
     tzn. tak± warto¶æ, której sinus hiperboliczny jest równy
     <parameter>arg</parameter>.
    </para>
    &note.no-windows;
    <para>
     Zobacz te¿ <function>asin</function>, <function>acos</function>
     and <function>atan</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.atan">
   <refnamediv>
    <refname>atan</refname>
    <refpurpose>Arcus tangens</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>atan</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca w radianach arcus tangens argumentu.
    </para>
    <para>
     Zobacz te¿ <function>atanh</function>, 
     <function>asin</function> i <function>acos</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.atanh">
   <refnamediv>
    <refname>atanh</refname>
    <refpurpose>Odwrotny tangens hiperboliczny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>atanh</function></funcdef>
      <paramdef>float <parameter>arg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca odwrotny tangens hiperboliczny z liczby <parameter>arg</parameter>,
     tzn. tak± warto¶æ, dla której tangens hiperboliczny jest równy
     <parameter>arg</parameter>.
    </para>
    &note.no-windows;
    <para>
     Zobacz te¿ <function>atan</function>, <function>asin</function>
     and <function>acos</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.atan2">
   <refnamediv>
    <refname>atan2</refname>
    <refpurpose>Arcus tangens dwóch zmiennych</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>atan2</function></funcdef>
      <paramdef>float <parameter>y</parameter></paramdef>
      <paramdef>float <parameter>x</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Ta funkcja oblicza arcus tangens dwóch zmiennych <parameter>x</parameter>
     i <parameter>y</parameter>. Jej dzia³anie przypomina obliczanie arcus
     tangens z <parameter>y</parameter> / <parameter>x</parameter>, a do tego,
     znaki obydwu argumentów wykorzystywane s± do okre¶lenia æwiartki 
     (kwadrantu) uk³adu wspó³rzêdnych.
    </simpara>
    <simpara>
     Funkcja zwraca warto¶æ w radianach, zawieraj±c± siê miêdzy -PI a PI
     w³±cznie.
    </simpara>
    <para>
     Zobacz te¿ <function>acos</function> i <function>atan</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.base-convert">
   <refnamediv>
    <refname>base_convert</refname>
    <refpurpose>Konwertuje liczbê pomiêdzy ró¿nymi systemami liczbowymi
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>base_convert</function></funcdef>
      <paramdef>string <parameter>liczba</parameter></paramdef>
      <paramdef>int <parameter>system_bazowy</parameter></paramdef>
      <paramdef>int <parameter>system_docelowy</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca ³añcuch znaków zawieraj±cy <parameter>liczbê</parameter> w 
     reprezentacji w <parameter>system_docelowy</parameter>. System w którym
     podajemy liczbê jest okre¶lony w <parameter>system_bazowy</parameter>.
     Parametry <parameter>system_bazowy</parameter> i
     <parameter>system_docelowy</parameter> musz± zawieraæ siê pomiêdzy 2 a 36
     w³±cznie. Cyfry w liczbach o bazie wiêkszej ni¿ 10 s± reprezentowane
     za pomoc± liter a-z, gdzie a oznacza 10, b oznacza 11, a z oznacza 35.
     <example>
      <title><function>base_convert</function></title>
      <programlisting role="php">
<![CDATA[      
$binary = base_convert ($hexadecimal, 16, 2);
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.bindec">
   <refnamediv>
    <refname>bindec</refname>
    <refpurpose>Konwertuje liczbê dwójkow± na dziesiêtn±</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>bindec</function></funcdef>
      <paramdef>string <parameter>liczba_dwójkowa</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca liczbê dziesiêtn± odpowiadaj±c± liczbie dwójkowej podane w
     argumencie <parameter>liczba_dwójkowa</parameter>.
    </para>
    <para>
     <function>bindec</function> konwertuje liczby dwójkowe do liczb 
     ca³kowitych. Najwiêksz± konwertowan± liczb± jest 31 bitów 1 czyli
     2 147 483 647 dziesiêtnie.
    </para>
    <para>
     Zobacz te¿ <function>decbin</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ceil">
   <refnamediv>
    <refname>ceil</refname>
    <refpurpose>Zaokr±gla u³amki w górê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>ceil</function></funcdef>
      <paramdef>float <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Zwraca nabli¿sz± liczbê ca³kowit±, wiêksz± lub równ± podanemu argumentowi
     <parameter>liczba</parameter>.
     Zwracana przez funkcjê <function>ceil</function> warto¶æ jest nadal typu
     <type>float</type> gdy¿ zakres tego typu jest zwykle wiêkszy ni¿ zakres
     typu <type>int</type>.
    </simpara>
    <simpara>
     Zobacz te¿ <function>floor</function> i
     <function>round</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.cos">
   <refnamediv>
    <refname>cos</refname>
    <refpurpose>Cosinus</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>cos</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca cosinus k±ta <parameter>argument</parameter> podanego w radianach.
    </para>
    <para>
     Zobacz te¿ <function>sin</function> i <function>tan</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.cosh">
   <refnamediv>
    <refname>cosh</refname>
    <refpurpose>Cosinus hiperboliczny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>cosh</function></funcdef>
      <paramdef>float <parameter>arg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca cosinus hiperboliczny z liczby <parameter>arg</parameter>,
     definiowany jako <literal>(exp(arg) + exp(-arg))/2</literal>.
    </para>
    <para>
     Zobacz te¿ <function>cos</function>, <function>acosh</function>,
     <function>sin</function> and <function>tan</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.decbin">
   <refnamediv>
    <refname>decbin</refname>
    <refpurpose>Konwertuje liczbê dziesiêtn± do dwójkowej</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>decbin</function></funcdef>
      <paramdef>int <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca ³añcuch znaków stanowi±cy dwójkow± reprezentacjê liczby dziesiêtnej
     podanej jako argument. Najwiêksz± liczb± mo¿liw± do skonwertowania jest
     2 147 483 647 dziesiêtnie, co równe jest 31 bitom 1.
    </para>
    <para>
     Zobacz te¿ <function>bindec</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.dechex">
   <refnamediv>
    <refname>dechex</refname>
    <refpurpose>Konwersja liczby dziesiêtnej do szesnastkowej</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>dechex</function></funcdef>
      <paramdef>int <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca ³añcuch znaków stanowi±cy szesnastkow± reprezentacjê podanej
     liczby dziesiêtnej. Najwiêksz± liczb±, która mo¿e byæ skonwertowana
     jest 2 147 483 647 dziesiêtnie, co odpowiada "7fffffff" szesnastkowo.
    </para>
    <para>
     Zobacz te¿ <function>hexdec</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.decoct">
   <refnamediv>
    <refname>decoct</refname>
    <refpurpose>Konwersja liczby dziesiêtnej do ósemkowej</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>decoct</function></funcdef>
      <paramdef>int <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca ³añcuch znaków zawieraj±cy ósemkow± reprezentacjê podanej liczby
     dziesiêtnej. Najwiêksz liczb±, która mo¿e byæ skonwertowana jest
     2 147 483 647 dziesiêtnie, co odpowiada "17777777777" ósemkowo.
    </para>
    <para>
     Zobacz te¿ <function>octdec</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.deg2rad">
   <refnamediv>
    <refname>deg2rad</refname>
    <refpurpose>
     Przelicza stopnie na radiany
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>deg2rad</function></funcdef>
      <paramdef>float <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>deg2rad</function> przelicza stopnie podane w 
     <parameter>liczba</parameter> na radiany.
    </para>
    <para>
     Zobacz te¿ <function>rad2deg</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.exp">
   <refnamediv>
    <refname>exp</refname>
    <refpurpose>e do potêgi ...</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>exp</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca e podniesione do potêgi <parameter>argument</parameter>.
    </para>
    <para>
     Zobacz te¿ <function>pow</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.floor">
   <refnamediv>
    <refname>floor</refname>
    <refpurpose>Zaokr±gla u³amki w dó³</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>floor</function></funcdef>
      <paramdef>float <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Zwraca najbli¿sz± liczbê ca³kowit±, mniejsz± lub równ± podanemu arumentowi
     <parameter>liczba</parameter>.
     Zwracana przez funkcjê <function>floor</function> warto¶æ jest nadal typu
     <type>float</type> gdy¿ zakres tego typu jest zwykle wiêkszy ni¿ zakres
     typu <type>int</type>.
    </simpara>
    <simpara>
     Zobacz te¿ <function>ceil</function> i
     <function>round</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.getrandmax">
   <refnamediv>
    <refname>getrandmax</refname>
    <refpurpose>Najwiêksza mo¿liwa liczba losowa</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>getrandmax</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Zwraca najwiêksz± liczbê, jaka mo¿e byæ zwrócona przez funkcjê
     <function>rand</function>.
    </simpara>
    <simpara>
     Zobacz te¿ <function>rand</function>, <function>srand</function>,
     <function>mt_rand</function>, <function>mt_srand</function>, i
     <function>mt_getrandmax</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.hexdec">
   <refnamediv>
    <refname>hexdec</refname>
    <refpurpose>Konwersja liczby szesnastkowej do dziesiêtnej</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>hexdec</function></funcdef>
      <paramdef>string <parameter>hex_string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca dziesiêtny odpowiednik liczby szesnastkowej podanej w argumencie
     <parameter>hex_string</parameter>. <function>hexdec</function>kownertuje
     szesnastkowy ³añcuch znaków do postaci liczby dziesiêtnej. Najwiêksz±
     liczb±, która mo¿e byæ skonwertowana jest 7fffffff, czyli  2147483647
     dziesiêtnie.
    </para>
    <para>
     <function>hexdec</function> zast±pi ka¿dy znak, nie bêd±cy cyfr± w systemie
     szesnastkowym liczb± <literal>0</literal>. W ten sposób, wszystko zera
     stoj±ce z lewej strony s± ignorowane, ale zera z prawej strony s± brane
     pod uwagê.
     <example>
      <title>Przyk³ad zastosowania <function>hexdec</function></title>
      <programlisting role="php">
<![CDATA[
var_dump(hexdec("See"));
var_dump(hexdec("ee"));
// obydwa zwracaj± "int(238)"

var_dump(hexdec("that"));
var_dump(hexdec("a0"));
// obydwa zwracaj± int(160)
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Zobacz te¿ <function>dechex</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.lcg-value">
   <refnamediv>
    <refname>lcg_value</refname>
    <refpurpose>Z³o¿ony przystaj±cy generator liniowy</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>lcg_value</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>lcg_value</function> zwraca liczbê pseudolosow± z przedzia³u
     (0, 1). Funkcja ³±czy dwa CG o okresach 2^31 - 85 i 2^31 - 249. Okres
     tej funkcji jest równy warto¶ci obydwu sk³adowych.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.log">
   <refnamediv>
    <refname>log</refname>
    <refpurpose>Logarytm naturalny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>log</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca logarytm naturalny z liczby <parameter>argument</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.log10">
   <refnamediv>
    <refname>log10</refname>
    <refpurpose>Logarytm dziesiêtny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>log10</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca logarytm dziesiêtny z <parameter>argument</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.max">
   <refnamediv>
    <refname>max</refname>
    <refpurpose>Znajduje najwiêksz± liczbê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>max</function></funcdef>
      <paramdef>mixed <parameter>arg1</parameter></paramdef>
      <paramdef>mixed <parameter>arg2</parameter></paramdef>
      <paramdef>mixed <parameter>argn</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>max</function> zwraca najwiêksz± liczbê spo¶ród podanych
     argumentów.
    </para>
    <para>
     Je¶li pierwszy argument jest tablic±, <function>max</function> zwróci
     najwiêksz± liczbê z tej tablicy. Je¶li pierwszy argument jest liczb±
     ca³kowit±, zmiennoprzecinkow± czy ³añcuchem znaków, musisz mieæ conajmniej
     dwa argumenty, spomiêdzy których funkcja <function>max</function> zwróci
     najwiêksz± warto¶æ. Za pomoc± tej funkcji mo¿esz porównywaæ nieograniczon±
     ilo¶æ liczb.
    </para>
    <para>
     Je¶li jedna lub wiêcej podanych liczb jest zmiennoprzecinkowa, wszystkie
     liczby zostan± potraktowane jak zmiennoprzecinkowe i tak¿e liczba
     zmiennoprzecinkowa zostanie zwrócona. Je¶li ¿adna z liczb nie bêdzie
     zmiennoprzecinkow±, wszystkie zostan± potraktowane jako ca³kowite i liczba
     ca³kowita zostanie zwrócona.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.min">
   <refnamediv>
    <refname>min</refname>
    <refpurpose>Znajduje najmniejsz± warto¶æ</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>number <function>min</function></funcdef>
      <paramdef>number <parameter>arg1</parameter></paramdef>
      <paramdef>number <parameter>arg2</parameter></paramdef>
      <paramdef><parameter><optional>...</optional></parameter></paramdef>
     </funcprototype>
     <funcprototype>
      <funcdef>number <function>min</function></funcdef>
      <paramdef>array <parameter>liczby</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>min</function> zwraca najmniejsz± liczbê spo¶ród podanych
     argumentów.
    </para>
    <para>
     W pierwszym wariancie, po podaniu co najmniej dwóch argumentów,
     <function>min</function> zwróci najmniejszy z nich. Mo¿na porównywaæ
     nieograniczon± ilo¶æ warto¶ci.
    </para>
    <para>
     W drugim wariancie, <function>min</function> zwróci najmniejsz± warto¶æ
     z tablicy <parameter>liczby</parameter>.
    </para>
    <para>
     Je¶li jedna lub wiêcej warto¶ci jest typu , wszystkie
     warto¶ci zostan± potraktowane jako zmiennoprzecinkowe i taka te¿ liczba
     zostanie zwrócona.
     Je¶li ¿adna spo¶ród warto¶ci nie jest typu <type>float</type>, wszystkie
     zostan± potraktowane jako <type>integer</type> i warto¶æ ca³kowita
     zostanie zwrócona.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mt-rand">
   <refnamediv>
    <refname>mt_rand</refname>
    <refpurpose>Wygeneruj lepsz± liczbê losow±</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>mt_rand</function></funcdef>
      <void/>
     </funcprototype>
     <funcprototype>
      <funcdef>int <function>mt_rand</function></funcdef>
      <paramdef>int
       <parameter>min</parameter>
      </paramdef>
      <paramdef>int
       <parameter>max</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Wiele generatorów liczb losowych w starych libc maj± niepewne albo nieznane
     charakterystyki i s± powolne. Domy¶lnie PHP u¿ywa generatora liczb losowych
     z libc w funkcji <function>rand</function>. Funkcja
     <function>mt_rand</function> jest jej zamiennikiem. U¿ywa ona generatora
     liczb losowych o znanej charakterystyce, Mersenne Twistera, który generuje
     liczby losowe w sam raz dla wiêkszo¶ci potrzeb kryptografii (aby dowiedzieæ
     siê wiêcej, zajrzyj na strony www Mersenne Twistera) i dzia³a cztery razy
     szybciej od typowych generatorów zawartych w libc. Stronê www Mersene
     Twistera mo¿na znale¼æ pod adresem 
     <ulink url="&url.mersenne;">&url.mersenne;</ulink>, a zoptymalizowan±
     wersjê kodu ¼ród³owego MT pod adresem
     <ulink url="&url.mersenne.twister;">&url.mersenne.twister;</ulink>.
    </simpara>
    <simpara>
     Je¶li funkcja zostanie wywo³ana bez opcjonalnych argumentów 
     <parameter>min</parameter> i <parameter>max</parameter>, funkcja
     <function>mt_rand</function> zwróci liczbê pseudolosow± z przedzia³u
     pomiêdzy 0 a <constant>RAND_MAX</constant>. Je¶li na przyk³ad 
     potrzebujesz liczby losowej z przedzia³u od 5 do 15 w³±cznie, u¿yj
     <literal>mt_rand (5, 15)</literal>.
    </simpara>
    <simpara>
     Pamiêtaj, aby przed u¿yciem tej funkcji inicjalizowaæ generator liczb
     losowych za pomoc± <function>mt_srand</function>.
    </simpara>
    <note>
     <para>
      W wersjach przed 3.0.7 argument <parameter>max</parameter> znaczy³
      <parameter>zakres</parameter>. Aby otrzymaæ takie same wyniki w tych¿e
      wersjach, nale¿y u¿yæ <literal>mt_rand (5, 11)</literal> aby otrzymaæ
      liczbê losow± z przedzia³u od 5 do 15.
     </para>
    </note>
    <simpara>
     Zobacz te¿ <function>mt_srand</function>,
     <function>mt_getrandmax</function>, <function>srand</function>,
     <function>rand</function> i <function>getrandmax</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.mt-srand">
   <refnamediv>
    <refname>mt_srand</refname>
    <refpurpose>Inicjalizuj generator Mersenne Twister</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>mt_srand</function></funcdef>
      <paramdef>int <parameter>ziarno</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>    
    <para>
     Inicjalizuje generator liczb losowych za pomoc± ziarna 
     <parameter>ziarno</parameter>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
// naziarnij mikrosekundami
function make_seed() {
    list($usec,$sec) = explode(" ", microtime());
    return ((float)$sec+(float)$usec) * 100000;
}
mt_srand(make_seed());
$randval = mt_rand();
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Zobacz te¿ <function>mt_rand</function>,
     <function>mt_getrandmax</function>, <function>srand</function>,
     <function>rand</function>, i
     <function>getrandmax</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.mt-getrandmax">
   <refnamediv>
    <refname>mt_getrandmax</refname>
    <refpurpose>Najwiêksza mo¿liwa liczba losowa</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>mt_getrandmax</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>    
    <simpara>
     Zwraca najwiêksz± liczbê losow±, jak± mo¿e zwróciæ funkcja 
     <function>mt_rand</function>.
    </simpara>
    <simpara>
     Zobacz te¿ <function>mt_rand</function>,
     <function>mt_srand</function> <function>rand</function>,
     <function>srand</function>, i
     <function>getrandmax</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.number-format">
   <refnamediv>
    <refname>number_format</refname>
    <refpurpose>Formatuje liczbê wed³ug szablonu</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>number_format</function></funcdef>
      <paramdef>float <parameter>liczba</parameter></paramdef>
      <paramdef>int <parameter><optional>miejsc_dziesiêtnych</optional>
      </parameter></paramdef>
      <paramdef>string <parameter><optional>przecinek_dziesiêtny</optional>
      </parameter></paramdef>
      <paramdef>string <parameter><optional>separator_tysiêcy</optional>
      </parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja <function>number_format</function> zwraca sformatowan± liczbê
     <parameter>liczba</parameter> wed³ug podanych argumentów. Ta funkcja
     przyjmuje jeden, dwa lub cztery argumenty (nie trzy):
    </para>
    <para>
     Je¶li podany jest tylko jeden argument, <parameter>liczba</parameter>
     zostanie sformatowana bez miejsc dziesiêtnych ale z przecinkiem (",")
     pomiêdzy ka¿d± grup± tysiêcy.
    </para>
    <para>
     Je¶li podane s± dwa argumenty, <parameter>liczba</parameter> bêdzie
     sformatowana z <parameter>miejsc_dziesiêtnych</parameter>, z kropk±
     (".") w charakterze przecinka dziesiêtnego i przecinkiem (",")
     pomiêdzy ka¿d± grup± tysiêcy.
    </para>
    <para>
     Kiedy wszystkie cztery parametry s± podane, <parameter>liczba</parameter>
     liczba bêdzie sformatowana z <parameter>miejsc_dziesiêtnych</parameter>,
     z <parameter>przecinek_dziesiêtny</parameter> zamiast kropki (".") i 
     <parameter>separator_tysiêcy</parameter> pomiêdzy ka¿d± grup± tysiêcy.
    </para>
    <note>
     <para>
      Tylko pierwszy znak z <parameter>separator_tysiêcy</parameter> jest
      wykorzystywany. Na przyk³ad, je¶li u¿yjesz <literal>foo</literal> jako
      separatora, to z liczby <literal>1000</literal> funkcja zwróci
      <literal>1f000</literal>.
     </para>
    </note>
    <para>
    <example>
     <title><function>number_format</function> - przyk³ady</title>
     <para>
      W polskiej notacji liczbowej u¿ywa siê przecinka (",") jako przecinka 
      dziesiêtnego i spacji (" ") jako separatora tysiêcy. W PHP mo¿na
      to zrobiæ tak:
     </para>
      <programlisting role="php">
<![CDATA[
&lt;?php

    $liczba = 1234.56;

    // notacja angielska (domy¶lna)
    $notacja_angielska = number_format($liczba);
    // 1,234.56

    // notacja polska
    $notacja_polska = number_format($liczba, 2, ',', ' ');
    // 1 234,56


    $number = 1234.5678;

    // notacja angielska bez separatora tysiêcy
    $notacja_angielska = number_format($liczba, 2, '.', '');
    // 1234.56

?&gt;
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Zobacz te¿ <function>sprintf</function>,
      <function>printf</function> i <function>sscanf</function>.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.octdec">
   <refnamediv>
    <refname>octdec</refname>
    <refpurpose>Konwersja liczby ósemkowej do dziesiêtnej</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>octdec</function></funcdef>
      <paramdef>string <parameter>liczba_ósemkowa</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca dziesiêtny odpowiednik liczby ósemkowej podanej jako argument
     <parameter>liczba_ósemkowa</parameter>.
     OctDec zamienia an ³añcuch ósemkowy na liczbê dziesiêtn±. Najwiêksz±
     liczb±, jaka mo¿e byæ skonwertowana jest 17777777777 ósemkowo, czyli
     2147483647 dziesiêtnie.
    </para>
    <para>
     Zobacz te¿ <function>decoct</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.pi">
   <refnamediv>
    <refname>pi</refname>
    <refpurpose>Warto¶æ liczby Pi</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>pi</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Zwraca przybli¿on± warto¶æ liczby pi.
    </simpara>
   <para>
    <informalexample>
     <programlisting>
<![CDATA[
echo pi();
// wy¶wietli 3.1415926535898
]]>
     </programlisting>
    </informalexample>
   </para>
   </refsect1>
  </refentry>

  <refentry id="function.pow">
   <refnamediv>
    <refname>pow</refname>
    <refpurpose>Potêgowanie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>number <function>pow</function></funcdef>
      <paramdef>number <parameter>podstawa</parameter></paramdef>
      <paramdef>number <parameter>wyk³adnik</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca argument <parameter>podstawa</parameter> podniesiony do potêgi
     <parameter>wyk³adnik</parameter>. Je¶li mo¿liwe, funkcja zwróci typ
     <type>integer</type>.
    </para>
    <para>
     Je¶li nie da siê obliczyæ potêgi, zostanie wy¶wietlone ostrze¿enie
     a funkcja <function>pow</function> zwróci &false;.
    </para>
    <example>
     <title>Parê przyk³adów z <function>pow</function></title>
     <programlisting role="php">
<![CDATA[
<?php

var_dump( pow(2,8) ); // int(256)
echo pow(-1,20); // 1
echo pow(0, 0); // 1

echo pow(-1, 5.5); // b³±d

?>
]]>
     </programlisting>
    </example>
    <warning>
     <para>
      W PHP 4.0.6 i wcze¶niejszych funkcja <function>pow</function> zawsze
      zwraca³a typ <type>float</type> i nie wy¶wietla³a ostrze¿eñ.
     </para>
    </warning>
    <para> 
     Zobacz te¿ <function>exp</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.rad2deg">
   <refnamediv>
    <refname>rad2deg</refname>
    <refpurpose>
     Przelicza radiany na stopnie.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>rad2deg</function></funcdef>
      <paramdef>float <parameter>liczba</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>rad2deg</function> przelicza k±t <parameter>liczba</parameter>
     podany w radianach na jego odpowiednik w stopniach.
    </para>
    <para>
     Zobacz te¿ <function>deg2rad</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.rand">
   <refnamediv>
    <refname>rand</refname>
    <refpurpose>Wygeneruj liczbê losow±</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>rand</function></funcdef>
      <void/>
     </funcprototype>
     <funcprototype>
      <funcdef>int <function>rand</function></funcdef>
      <paramdef>int 
       <parameter>min</parameter>
      </paramdef>
      <paramdef>int
       <parameter>max</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <simpara>
     Je¶li wywo³ana bez opcjonalnych argumentów <parameter>min</parameter> i
     <parameter>max</parameter>, funkcja <function>rand</function> zwraca liczbê
     pseudolosow± z przedzia³u pomiêdzy 0 a <constant>RAND_MAX</constant>.
     Je¶li potrzebujesz liczby losowej z przedzia³u np. od 5 do 15 (w³±cznie),
     u¿yj <literal>rand (5,15)</literal>.
    </simpara>
    <simpara>
     Pamiêtaj, aby przed u¿yciem tej funkcji inicjalizowaæ generator liczb
     losowych za pomoc± <function>srand</function>.
    </simpara>
    <note>
     <para>
      W wersjach przed 3.0.7 argument <parameter>max</parameter> znaczy³
      <parameter>zakres</parameter>. Aby otrzymaæ takie same wyniki w tych¿e
      wersjach, nale¿y u¿yæ <literal>rand (5, 11)</literal> aby otrzymaæ
      liczbê losow± z przedzia³u od 5 do 15.
     </para>
    </note>
    <simpara>
     Zobacz te¿ <function>srand</function>,
     <function>getrandmax</function>, <function>mt_rand</function>,
     <function>mt_srand</function> i
     <function>mt_getrandmax</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.round">
   <refnamediv>
    <refname>round</refname>
    <refpurpose>Zaokr±gla liczbê zmiennoprzecinkow±</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>round</function></funcdef>
      <paramdef>float <parameter>warto¶æ</parameter></paramdef>
      <paramdef>int
       <parameter><optional>dok³adno¶æ</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca zaokr±glon± warto¶æ argumentu <parameter>warto¶æ</parameter> do
     miejsca po przecinku okre¶lonego w <parameter>dok³adno¶æ</parameter>.
     <parameter>dok³adno¶æ</parameter> mo¿e byæ tak¿e ujemny lub równy zero
     (domy¶lnie).
    </para>
    <para>
     <caution>
      <simpara>
       PHP domy¶lnie nie obs³uguje poprawnie ³añcuchów znaków takich jak
       <literal>"12,300.2"</literal>. Zobacz <link 
       linkend="language.types.string.conversion">konwersje z ³añcuchów znaków
       </link>.
      </simpara>
     </caution>
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
$foo = round(3.4);  // $foo == 3.0
$foo = round(3.5);  // $foo == 4.0
$foo = round(3.6);  // $foo == 4.0
$foo = round(3.6, 0);  // znaczy to samo, co zapis 1 wiersz wy¿ej

$foo = round(1.95583, 2);  // $foo == 1.96

$foo = round(1241757, -3);  // $foo == 1242000
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <simpara>
      Argument <parameter>dok³adno¶æ</parameter> jest dostêpny tylko w PHP 4.
     </simpara>
    </note>
    <simpara>
     Zobacz te¿ <function>ceil</function> i
     <function>floor</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.sin">
   <refnamediv>
    <refname>sin</refname>
    <refpurpose>Sinus</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>sin</function></funcdef>
      <paramdef>float </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca sinus k±ta <parameter>argument</parameter> podanego w radianach.
    </para>
    <para>
     Zobacz te¿ <function>cos</function> i <function>tan</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.sinh">
   <refnamediv>
    <refname>sinh</refname>
    <refpurpose>Sinus hiperboliczny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>sinh</function></funcdef>
      <paramdef>float <parameter>arg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca sinus hiperboliczny z liczby <parameter>arg</parameter>,
     definiowany jako <literal>(exp(arg) - exp(-arg))/2</literal>.
    </para>
    <para>
     Zobacz te¿ <function>sin</function>, <function>asinh</function>,
     <function>cos</function> and <function>tan</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.sqrt">
   <refnamediv>
    <refname>sqrt</refname>
    <refpurpose>Pierwiastek kwadratowy</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>sqrt</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca pierwiastek kwadratowy z <parameter>argument</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.srand">
   <refnamediv>
    <refname>srand</refname>
    <refpurpose>Inicjalizuje generator liczb losowych</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>srand</function></funcdef>
      <paramdef>int <parameter>ziarno</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Inicjalizuje generator liczb losowych za pomoc± ziarna
     <parameter>ziarno</parameter>.
     <informalexample>
      <programlisting role="php">
<![CDATA[
// naziarnij mikrosekundami
function make_seed() {
    list($usec,$sec) = explode(" ", microtime());
    return ((float)$sec+(float)$usec) * 100000;
}
srand(make_seed());
$randval = rand();
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Zobacz te¿ <function>rand</function>,
     <function>getrandmax</function>, <function>mt_rand</function>,
     <function>mt_srand</function>, i
     <function>mt_getrandmax</function>.
    </simpara>    
   </refsect1>
  </refentry>

  <refentry id="function.tan">
   <refnamediv>
    <refname>tan</refname>
    <refpurpose>Tangens</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>tan</function></funcdef>
      <paramdef>float <parameter>argument</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca tangens k±ta <parameter>argument</parameter> podanego w radianach.
    </para>
    <para>
     Zobacz te¿ <function>sin</function> i <function>cos</function>.
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.tanh">
   <refnamediv>
    <refname>tanh</refname>
    <refpurpose>Tangens hiperboliczny</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>float <function>tanh</function></funcdef>
      <paramdef>float <parameter>arg</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca tangens hiperboliczny z liczby <parameter>arg</parameter>,
     definiowanej jako <literal>sinh(arg)/cosh(arg)</literal>.
    </para>
    <para>
     Zobacz te¿ <function>tan</function>, <function>atanh</function>,
     <function>sin</function> and <function>cos</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
