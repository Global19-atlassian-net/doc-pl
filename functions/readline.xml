<?xml version="1.0" encoding="iso-8859-2"?>
<!-- $Revision: 1.2 $ -->
 <reference id="ref.readline">
  <title>GNU Readline</title>
  <titleabbrev>Readline</titleabbrev>

  <partintro>
   <simpara>
    Funkcje <function>readline</function> implementuj± interfejs do biblioteki
    GNU Readline. Funkcje te pozwalaj± na tworzenie edytowalnych linii
    poleceñ. Jako przyk³ad mo¿e pos³u¿yæ Bash, który pozwala na u¿ywanie
    klawiszy strza³ek do poruszania siê po wpisanej czê¶ci polecenia lub
    przewijanie histrii. Ze wzglêdu na interaktywno¶æ tej biblioteki, nie
    przyda siê ona do pisania aplikacji sieciowych, lecz mo¿e byæ przydatna do
    pisania skryptów które maj± byæ uruchamiane z linii poleceñ.
   </simpara>
   <simpara>
    Stronê domow± projektu GNU Readline mo¿na znale¼æ pod adresem
    <ulink url="&url.readline;">&url.readline;</ulink>. Zajmuje siê ni± Chet
    Ramey, który jest tak¿e autorem Basha.
   </simpara>
  </partintro>

  <refentry id="function.readline">
   <refnamediv>
    <refname>readline</refname>
    <refpurpose>Czyta liniê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>readline</function></funcdef>
      <paramdef>string 
       <parameter><optional>prompt</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta zwraca pojedyñczy string pobrany od u¿ytkownika. Jako parametr
     funkcji mo¿na podaæ string zawieraj±cy prompt (znak zachêty) który bêdzie
     wy¶wietlony. Zwracany string ma usuniêty z koñca znak nowego wiersza.
     Musisz dodaæ do liniê do historii rêcznie u¿ywaj±c
     <function>readline_add_history</function>.
    </para>
    <example>
     <title><function>readline</function></title>
     <programlisting role="php">
//pobierz 3 komendy od u¿ytkownika
for ($i=0; $i &lt; 3; $i++) {
        $line = readline ("Komenda: ");
        readline_add_history ($line);
}

//zrzuæ historiê
print_r (readline_list_history());

//zrzuæ zmienne
print_r (readline_info());
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.readline-add-history">
   <refnamediv>
    <refname>readline_add_history</refname>
    <refpurpose>Dodaje liniê do historii</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>readline_add_history</function></funcdef>
      <paramdef>string <parameter>linia</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta dodaje liniê do historii linii poleceñ.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-clear-history">
   <refnamediv>
    <refname>readline_clear_history</refname>
    <refpurpose>Czy¶ci historiê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>readline_clear_history</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta czy¶ci ca³± historiê linii poleceñ.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-completion-function">
   <refnamediv>
    <refname>readline_completion_function</refname>
    <refpurpose>Rejestruje funkcjê dope³niania</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool 
       <function>readline_completion_function</function>
      </funcdef>
      <paramdef>string <parameter>linia</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta rejestruje funkcjê dope³niania. Musisz podaæ nazwê istniej±cej
     funkcji, która przyjmuje jako parametr czê¶ciowo wype³nion± liniê i
     zwraca tablicê mo¿liwych dope³nieñ. Jest to efekt który mo¿na
     zaobserwowaæ wciskaj±c klawisz TAB u¿ywaj±c Basha.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-info">
   <refnamediv>
    <refname>readline_info</refname>
    <refpurpose>Pobiera/ustawia ró¿ne wewnêtrzne zmienne readline'a</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>mixed <function>readline_info</function></funcdef>
      <paramdef>string 
       <parameter><optional>nazwa_zmiennej</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>nowa_warto¶æ</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Je¶li funkcja zostanie wywo³ana bez parametrów, to zwrócona zostanie
     tablica z warto¶ciami wszystkich ustawieñ biblioteki readline. Elementy
     tej tablicy bêd± mia³y takie indeksy:  done, end, erase_empty_line,
     library_version, line_buffer, mark, pending_input, point, prompt,
     readline_name, i terminal_name.
    </para>
    <para>
     Je¶li zostanie wywo³ana z jednym parametrem, to zwrócona zostanie warto¶æ
     ustawienia podanego jako parametr. Je¶li zostanie wywo³ana z dwoma
     paremetrami, zmienione zostanie podane ustawienie.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-list-history">
   <refnamediv>
    <refname>readline_list_history</refname>
    <refpurpose>Zwraca listê historii</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>readline_list_history</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta zwraca tablicê zawieraj±c± ca³± historiê linii poleceñ.
     Elementy s± indeksowane przez liczby ca³kowite poczynaj±c od zera.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-read-history">
   <refnamediv>
    <refname>readline_read_history</refname>
    <refpurpose>Czyta historiê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool 
       <function>readline_read_history</function>
      </funcdef>
      <paramdef>string <parameter>nazwa_pliku</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta czyta historiê poleceñ z pliku.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.readline-write-history">
   <refnamediv>
    <refname>readline_write_history</refname>
    <refpurpose>Zapisuje historiê</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool 
       <function>readline_write_history</function>
      </funcdef>
      <paramdef>string <parameter>nazwa_pliku</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja ta zapisuje historiê poleceñ do pliku.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
