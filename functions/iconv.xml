<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.10 Maintainer: Qrak Status: ready -->
<!-- $Revision: 1.1 $ -->
 <reference id="ref.iconv">
  <title>Funkcje iconv</title>
  <titleabbrev>iconv</titleabbrev>

  <partintro>
   <para>
    Ten modu³ zawiera interferjs do korzystania z funkcji biblioteki iconv.
    Aby móc u¿ywaæ funkcji opisanych w tym module, trzeba skompilowaæ
    interpreter PHP z opcj± --with-iconv. Nale¿y przy tym dysponowaæ funkcj±
    iconv() w standardowej bibliotece C lub mieæ zainstalowan± w systemie
    bibliotekê libiconv. Biblioteka libiconv jest dostêpna pod adresem
    <ulink url="&url.libiconv;">&url.libiconv;</ulink>.
   </para>

   <para>
    Funkcja biblioteki iconv s³u¿y do konwersji plików pomiêdzy ró¿nymi
    zestawami znaków. Od implementacji iconv() w twoim systemie zale¿y, jakie
    zestawy znaków funkcja bêdzie obs³ugiwaæ. Proszê pamiêtaæ, ¿e funkcja
    iconv()w niektórych systemach nie dzia³a zgodnie z oczekiwaniami. Nale¿y
    wtedy zainstalowaæ bibliotekê libiconv, aby usun±æ ten problem.
   </para>
  </partintro>

  <refentry id="function.iconv">
   <refnamediv>
    <refname>iconv</refname>
    <refpurpose>Konwertuje ³añcuch znaków do innego zestawu znaków</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>iconv</function></funcdef>
      <paramdef>string <parameter>zestaw_wej¶ciowy</parameter></paramdef>
      <paramdef>string <parameter>zestaw_docelowy</parameter></paramdef>
      <paramdef>string <parameter>³añcuch</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Konwertuje ³añcuch znaków <parameter>³añcuch</parameter>, zakodowany
     w <parameter>zestaw_wej¶ciowy</parameter> na ³añcuch znaków zakodowany
     w <parameter>zestaw_docelowy</parameter>. Zwraca skonwertowany ³añcuch
     lub &false;, je¶li konwersja siê nie uda.
    </para>
    <para>
     <example>
      <title>przyk³ad <function>iconv</function>:</title>
      <programlisting role="php">
<![CDATA[
echo iconv("ISO-8859-1","UTF-8","To jest test.");
echo iconv("ISO-8859-2","UTF-8","Za¿ó³æ gê¶l± ja¼ñ");
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.iconv-get-encoding">
   <refnamediv>
    <refname>iconv_get_encoding</refname>
    <refpurpose>
     Pobiera aktualne ustawienia dla konwersji zestawu znaków
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>iconv_get_encoding</function></funcdef>
      <paramdef>string 
       <parameter><optional>typ</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zwraca aktualne ustawienia funkcji <function>ob_iconv_handler</function>
     jako tablicê, lub &false; je¶li siê nie uda.
    </para>
    <para>
     Zobacz te¿: 
     <function>iconv_set_encoding</function> i
     <function>ob_iconv_handler</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.iconv-set-encoding">
   <refnamediv>
    <refname>iconv_set_encoding</refname>
    <refpurpose>
     Ustawia aktualne ustawienia dla konwersji zestawu znaków
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>iconv_set_encoding</function></funcdef>
      <paramdef>string <parameter>typ</parameter></paramdef>
      <paramdef>string <parameter>zestaw_znaków</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Zmienia warto¶æ zmiennej <parameter>typ</parameter> na 
     <parameter>zestaw_znaków</parameter> i zwraca &true; je¶li zmiana siê
     powiedzie, lub &false; w przeciwnym razie.
    </para>
    <para>
     <example>
      <title>przyk³ad <function>iconv_set_encoding</function>:</title>
      <programlisting role="php">
<![CDATA[
iconv_set_encoding("internal_encoding", "UTF-8");
iconv_set_encoding("output_encoding", "ISO-8859-1");
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Zobacz te¿: 
     <function>iconv_get_encoding</function> i
     <function>ob_iconv_handler</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ob-iconv-handler">
   <refnamediv>
    <refname>ob_iconv_handler</refname>
    <refpurpose>
     Konwertuje kodowanie znaków jako uchwyt buforu wyj¶cia
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>ob_iconv_handler</function></funcdef>
      <paramdef>string 
       <parameter>zawarto¶æ</parameter>
      </paramdef>
      <paramdef>int 
       <parameter>status</parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Konwertuje ³añcuch zapisany w <parameter>internal_encoding</parameter> do
     <parameter>output_encoding</parameter>.
    </para>
    <para>
     <parameter>internal_encoding</parameter> i
     <parameter>output_encoding</parameter> powinny zostaæ zdefiniowane przez
     <function>iconv_set_encoding</function> lub w pliku konfiguracyjnym.
    </para>
    <para>
     <example>
      <title>przyk³ad <function>ob_iconv_handler</function>:</title>
      <programlisting role="php">
<![CDATA[
ob_start("ob_iconv_handler"); // rozpocznij buforowanie wyj¶cia
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Zobacz te¿: 
     <function>iconv_get_encoding</function> i
     <function>iconv_set_encoding</function>.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
