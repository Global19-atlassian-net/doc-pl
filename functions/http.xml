<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.36 Maintainer: Qrak Status: ready -->
<!-- $Revision: 1.13 $ -->
 <reference id="ref.http">
  <title>HTTP</title>
  <titleabbrev>HTTP</titleabbrev>

  <partintro>
   <simpara>
    Te funkcje pozwalaj± ci operowaæ na danych wysy³anych do przegl±darki
    internetowej na poziomie protoko³u HTTP.
   </simpara>
  </partintro>

  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Wysy³a surowy nag³owek HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>int</type><methodname>header</methodname>
      <methodparam><type>string</type><parameter>tre¶æ_nag³ówka</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>zamieñ</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>header</function> s³u¿y do wys³ania surowego
     nag³ówka <acronym>HTTP</acronym>.
     Zajrzyj do <ulink url="&spec.http1.1;">Specyfikacji HTTP 1.1</ulink>
     aby dowiedzieæ siê wiêcej na temat nag³ówków <acronym>HTTP</acronym>.
    </para>
    <para>
     Opcjonalny agrument <parameter>zamieñ</parameter> okre¶la, czy funkcja
     ma zast±piæ nag³ówek tego samego typu przygotowany przez serwer,
     czy dodaæ jeszcze jeden. Domy¶lnie, oryginalny
     nag³ówek zostanie zast±piony, ale je¶li ustawisz ten argument na &false;,
     to nowy nag³ówek zostanie dodany do ju¿ istniej±cych. Na przyk³ad:
     <informalexample>
      <programlisting role="php">
<![CDATA[      
header('WWW-Authenticate: Negociate');
header('WWW-Authenticate: NTLM',false);
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     W PHP s± dwa specjalne wywo³ania <function>header</function>.
     Pierwszym z nich jest &quot;Location&quot;. To wywo³anie nie tylko
     wysy³a ten nag³ówek do przegl±darki, ale tak¿e wysy³a do przegl±darki
     status przekierowania <literal>REDIRECT</literal> (302). 
     <informalexample>
      <programlisting role="php">
<![CDATA[
header("Location: http://www.php.net/"); /* Przekieruj przegl±darkê 
                                            na stronê g³ówn± PHP */
exit;                 /* Upewnij siê, ¿e kod poni¿ej nie zostanie wykonany 
                         po przekierowaniu. */
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Protokó³ HTTP 1.1 wymaga bezwzglêdnego <acronym>URI</acronym> w nag³ówku
      <ulink url="&spec.http1.1;/rfc2616-sec14.html#sec14.30">Location:</ulink>
      w³±cznie z okre¶leniem protoko³u, nazwy hosta i bezwzglêdnej scie¿ki
      dostêpu, ale niektóre klienty akceptuj± wzglêdne <acronym>URI</acronym>.
      Zwykle u¿ywa siê
      $HTTP_SERVER_VARS['HTTP_HOST'], $HTTP_SERVER_VARS['PHP_SELF'] i
      funkcji <function>dirname</function> by wygenerowaæ bezwglêdnego 
      <acronym>URI</acronym>:
      <informalexample>
       <programlisting>
<![CDATA[
header("Location: http://".$HTTP_SERVER_VARS['HTTP_HOST']
                       ."/".dirname($HTTP_SERVER_VARS['PHP_SELF'])
                       ."/".$relative_url);
]]>
       </programlisting>
      </informalexample>
     </para>
    </note>
    <para>
     Drugim specjalnym wywo³aniem funkcji jest ka¿dy nag³ówek zaczynaj±cy siê
     od ci±gu znaków &quot;<literal>HTTP/</literal>&quot; (wielko¶æ liter nie
     gra roli), którego u¿ywa siê do okre¶lenia, jaki kod statusu HTTP ma zostaæ
     wys³any.
     Na przyk³ad, je¶li skonfigurowa³e¶ Apache'a tak, ¿e skrypt PHP obs³uguje
     zapytania do nieistniej±cych plików (za pomoc± dyrektywy 
     <literal>ErrorDocument</literal>), powiniene¶ zwróciæ uwagê, aby skrypt
     generowa³ w³a¶ciwy kod statusu zapytania HTTP.
     <informalexample>
      <programlisting role="php">
<![CDATA[
header("HTTP/1.0 404 Not Found");
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
      <para>
       W PHP 3 dzia³a to tylko wtedy, kiedy PHP jest skompilowane jako modu³
       serwera Apache. Taki sam efekt mo¿na osi±gn±æ za pomoc± nag³ówka
       <literal>Status</literal>.
       <informalexample>
        <programlisting role="php">
<![CDATA[
header("Status: 404 Not Found");
]]>
        </programlisting>
       </informalexample>
      </para>
     </note>
    <para>
     Skrypty PHP czêsto s³u¿± do generowania dynamiczej tre¶ci, która
     nie mo¿e byæ buforowana przez klienta czy serwer proxy. Pamiêæ cache
     (bufor) w wiêkszo¶ci tych urz±dzeñ da siê wy³±czyæ dziêki:
     <informalexample>
      <programlisting role="php">
<![CDATA[
header ("Expires: Mon, 26 Jul 1997 05:00:00 GMT");    // data w przesz³o¶ci
header ("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); 
                                                      // ci±gle modyfikowany
header("Cache-Control: no-store, no-cache, must-revalidate");  // HTTP/1.1
header("Cache-Control: post-check=0, pre-check=0", false);
header("Pragma: no-cache");                          // HTTP/1.0
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       Mo¿esz zaobserwowaæ, ¿e strony nie s± buforowane, nawet je¶li
       nie u¿y³e¶ wszystkich ww. nag³ówków. Jest wiele sposobów, w jakie
       u¿ytkownicy mog± skonfigurowaæ swoje przegl±darki, aby zmieniæ
       standardowy sposób buforowania. Przez wys³anie powy¿szych nag³ówków,
       powinno siê udaæ omin±æ jakiekolwiek ustawienia pozwalaj±ce
       na zbuforowanie wyniku pracy twojego skryptu.
      </para>
      <para>
       Dodatkowo, <function>session_cache_limiter</function> i dyrektywa
       konfiguracyjna <literal>session.cache_limiter</literal> s³u¿±
       do automatycznego generowania nag³ówków zwi±zanych z bufurowaniem,
       kiedy sesje s± w u¿yciu.
      </para>
     </note>
    </para>
    <para>
     Pamiêtaj, ¿e <function>header</function> mo¿e byæ wywo³ywana 
     jedynie do momentu nim zostanie wys³ana jakakolwiek tre¶æ, tzn. 
     znaczniki HTML, puste linie lub wynik pracy PHP. Jest to bardzo
     czêsty b³±d, gdzie skrypty z funkcjami <function>include</function>, 
     <function>require</function> itp. maj± spacje albo puste linie przed
     wywo³aniem funkcji <function>header</function>. 
     Problem ten pojawia siê równie¿ w skryptach opartych na
     pojedynczym pliku PHP/HTML.
     <informalexample>
      <programlisting role="php">
<![CDATA[
&lt;?php require("user_logging.inc") ?&gt;


&lt;?php header ("Content-Type: audio/x-pn-realaudio"); ?&gt;
// skrypt nie dzia³a - zauwa¿ puste linie pomiêdzy instrukcjami
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       W PHP 4 mo¿na u¿yæ buforowania wyj¶cia aby omin±æ ten problem.
       Wszystko, co skrypt wy¶le do przegl±darki zostanie zatrzymane na
       serwerze do momentu, kiedy pojawi siê instrukcja wys³ania danych.
       Mo¿na to zrobiæ za pomoc± funkcji <function>ob_start</function> i
       <function>ob_end_flush</function>, lub ustawiaj±c dyrektywê kofiguracyjn±
       <literal>output_buffering</literal> w pliku <filename>php.ini</filename>
       lub w plikach konfiguracyjnych serwera.
      </para>
     </note>
    </para>
    <para>
     Aby u¿ytkownik zosta³ monitowany o zapisanie wysy³anych danych,
     takich jak np. wygenerowany plik PDF, mo¿na u¿yæ nag³ówka <ulink
     url="&url.rfc2183;">Content-Disposition</ulink> aby podaæ zalecan± nazwê
     pliku i zmusiæ przegl±darkê do wy¶wietlenia okienka Zapisz jako.
     <informalexample>
      <programlisting role="php">
<![CDATA[
&lt;?php
header("Content-type: application/pdf");
header("Content-Disposition: attachment; filename=downloaded.pdf");

/* ... tre¶æ pliku pdf ... */
]]>
      </programlisting>
     </informalexample>
     <note>
      <para>
       W Microsoft Internet Explorer 4.01 jest b³±d, który uniemo¿liwia
       wykorzystanie tego mechanizmu. Nie ma na to rozwi±zania. B³±d, który
       zahacza o ten mechanizm, jest tak¿e w Microsoft Internet Explorer 5.5,
       jednak da siê go omin±æ aktualizuj±c przegl±darkê poprzez Service Pack 2
       lub pó¼niejszy.
      </para>
     </note>
    </para>    
    <para>
     Zobacz te¿ <function>headers_sent</function>,
     <function>setcookie</function>, i rozdzia³ 
     <link linkend="features.http-auth">Autoryzacja HTTP</link>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.headers-sent">
   <refnamediv>
    <refname>headers_sent</refname>
    <refpurpose>Zwraca &true; je¶li nag³ówki zosta³y ju¿ wys³ane</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>bool</type><methodname>headers_sent</methodname>
      <void/>
     </methodsynopsis>
    <para>
     <function>headers_sent</function> zwraca &true; je¶li nag³ówki HTTP ju¿
     zosta³y wys³ane, lub &false; w przeciwnym wypadku.
    </para>
    <para>
     Zobacz te¿ <function>header</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Wysy³a ciasteczko</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
     <methodsynopsis>
      <type>int</type><methodname>setcookie</methodname>
      <methodparam><type>string</type><parameter>nazwa</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>warto¶æ</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>data_wa¿no¶ci</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>¶cie¿ka</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>domena</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>bezpieczne</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>setcookie</function> okre¶la ciasteczko (ang. cookie) do
     wys³ania z nag³ówkami HTTP. Ciasteczko musi byæ wys³ane <emphasis>zanim
     </emphasis> jakiekolwiek inne nag³ówki zostan± wys³ane (to jest
     ograniczenie ciasteczek, nie PHP). To wymaga od ciebie umieszczenia
     wywo³añ tej funkcji przed znacznikami <literal>&lt;html></literal> czy
     <literal>&lt;head></literal>.
    </para>
    <para>
     Wszystkie argumenty poza <parameter>nazwa</parameter> s± opcjonalne.
     Je¶li tylko argument nazwa jest obecny, ciasteczko o takie nazwie zostanie
     usuniête z klienta. Mo¿esz te¿ opu¶ciæ argumenty za pomoc± pustego ³añcucha
     (<emphasis>&quot;&quot;</emphasis>). Argumenty <parameter>data_wa¿no¶ci
     </parameter> i <parameter>bezpieczne</parameter> s± liczbami ca³kowitymi
     i nie mo¿na ich opu¶ciæ wstawiaj±c pusty ³añcuch. Zamiast niego u¿yj
     liczby zero (<emphasis>0</emphasis>). Argument 
     <parameter>data_wa¿no¶ci</parameter> 
     jest regularnym uniksowym znacznikiem czasu, takim jak
     zwracany przez funkcje <function>time</function> lub <function>mktime
     </function>. Argument <parameter>bezpieczne</parameter> oznacza, ¿e
     ciasteczko mo¿e byæ przekazywane tylko poprzez bezpieczne po³±czenie HTTPS.
    </para>
    <para>
     Czêste pu³apki:
     <itemizedlist>
      <listitem>
       <simpara>
        Ciasteczka nie bêd± widziane do nastêpnego prze³adowania strony
        dla której maj± byæ widoczne.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Ciasteczko mo¿e byæ usuniête tylko z tymi parametrami, z jakimi je
        ustawiono.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     W PHP 3, wielokrotne wywo³ania <function>setcookie</function> w jednym
     skrypcie wykonywane by³y w odwrotnej kolejno¶ci. Je¶li chcesz usun±æ jedno
     ciastko przed wprowadzeniem kolejnego, powiniene¶ umie¶ciæ wprowadzenie
     nowego przed usunêciem starego. W PHP 4, wielokrotne wywo³ania 
     <function>setcookie</function> wykonywane s± we w³a¶ciwej kolejno¶ci.
    </simpara>
    <para>
     Parê przyk³adów - jak wysy³aæ ciasteczka:
     <example>
      <title><function>setcookie</function> wysy³a przyk³adowe ciasteczka
      </title>
      <programlisting role="php">
<![CDATA[
setcookie ("TestCookie", $value);
setcookie ("TestCookie", $value,time()+3600);  /* traci wa¿no¶æ za godzinê */
setcookie ("TestCookie", $value,time()+3600, "/~rasmus/", ".utoronto.ca", 1);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Aby skasowaæ ciasteczko, nale¿y ustawiæ datê wa¿no¶ci na datê w
     przesz³o¶ci, co uruchomi w przegl±darce mechanizm kasowania ciasteczek.
     A teraz, jak usun±æ ciasteczka z poprzedniego przyk³adu:
     <example>
      <title>Kasowanie ciasteczek</title>
      <programlisting role="php">
<![CDATA[
// ustaw datê wa¿no¶ci na godzinê wstecz
setcookie ("TestCookie", "", time() - 3600);
setcookie ("TestCookie", "", time() - 3600, "/~rasmus/", ".utoronto.ca", 1);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Proszê zwróciæ uwagê, ¿e zawarto¶æ ciasteczka jest automatycznie kodowana
     do formatu
     URL przy wysy³aniu, a po odebraniu automatycznie dekodowana i przypisywana
     do zmiennej o tej samej nazwie co ciasteczko. Aby poznaæ zawarto¶æ
     przyk³adowego ciasteczka ze skryptu, nale¿y zastosowaæ poni¿szy przyk³ad:
     <informalexample>
      <programlisting role="php">
<![CDATA[
echo $TestCookie;
echo $HTTP_COOKIE_VARS["TestCookie"];
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Mo¿na te¿ tworzyæ tablice z³o¿one z ciasteczek za pomoc± zapisu tablicowego
     w nazwie ciasteczka. Powoduje to utworzenie tylu ciasteczek, ile jest
     elemetów tablicy, a po otrzymaniu takiego ciasteczka, jego warto¶ci
     umieszczane s± w tablicy o nazwie takiej jak ciasteczko.
     <informalexample>
      <programlisting role="php">
<![CDATA[
setcookie ("cookie[three]", "cookiethree");
setcookie ("cookie[two]", "cookietwo");
setcookie ("cookie[one]", "cookieone");
if (isset ($cookie)) {
    while (list ($name, $value) = each ($cookie)) {
        echo "$name == $value&lt;br>\n";
    }
}
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Wiêcej informacji na temat ciasteczek znajduje siê w specyfikacji
     Netscape'a, na stronie <ulink
     url="&spec.cookies;">&spec.cookies;</ulink>.
    </para>
    <simpara>
     Microsoft Internet Explorer 4 z zainstalowanym Service Pack 1 nie radzi
     sobie poprawnie z ciasteczkami, które maj± ustawiony parametr
     <parameter>¶cie¿ka</parameter>. 
    </simpara>
    <simpara>
     Netscape Communicator 4.05 i Microsoft Internet Explorer 3.x niepoprawnie
     obs³uguj± ciasteczka, w których <parameter>¶cie¿ka</parameter> i 
     <parameter>data_wa¿no¶ci</parameter> nie s± ustawione.
    </simpara>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

