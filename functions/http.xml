<?xml encoding="iso-8859-2"?>
<!-- $Revision: 1.1 $ -->
 <reference id="ref.http">
  <title>Funkcje obs³ugi HTTP</title>
  <titleabbrev>HTTP</titleabbrev>

  <partintro>
   <simpara>
    Te funkcje pozwalaj± ci operowaæ na danych wysy³anych do przegl±darki
    internetowej ju¿ na poziomie protoko³u HTTP.
   </simpara>
  </partintro>

  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Wysy³a surowy nag³owek HTTP</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>header</function></funcdef>
      <paramdef>string <parameter>tre¶æ_nag³ówka</parameter></paramdef>
      <paramdef>bool <parameter><optional>zamieñ</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Funkcja <function>header</function> s³u¿y do wys³ania surowego
     nag³ówka HTTP przed wys³aniem zawarto¶ci dokumentu <acronym>HTML</acronym>.
     Zajrzyj do <ulink url="&spec.http1.1;">Specyfikacji HTTP 1.1</ulink>
     aby dowiedzieæ siê wiêcej na temat nag³ówków HTTP.
    </para>
    <para>
     Opcjonalny parametr <parameter>replace</parameter> okre¶la, czy podany
     nag³ówek ma zast±piæ nag³ówek tego samego typu przygotowany przez serwer,
     czy dodaæ jeszcze jeden. Domy¶lnie, oryginalny
     nag³ówek zostanie zast±piony, ale je¶li ustawisz ten argument na &false;,
     to nowy nag³ówek zostanie dodany do ju¿ istniej±cych. Na przyk³ad:
     <informalexample>
      <programlisting role="php">
header('www-authenticate: Negociate');
header('www-authenticate: NTLM',false);
      </programlisting>
     </informalexample>
    </para>
    <para>
     W PHP s± dwa specjalne wywo³ania funkcji <function>header</function>.
     Pierwszym z nich jest &quot;Location&quot;.  To wywo³anie, nie tylko
     wysy³a ten nag³ówek do przegl±darki, ale tak¿e zwraca do serwera Apache
     status PRZEKIEROWANIA. Z punktu widzenia pisz±cego skrypt PHP nie jest 
     to najistostniejsze, jednak dla osób, które rozumiej± zasadê dzia³ania
     Apache'a mo¿e byæ to istotne.
     <informalexample>
      <programlisting role="php">
header ("Location: http://www.php.net/"); /* Przekieruj przegl±darkê 
                                            na stronê g³ówn± PHP */
exit;                 /* Upewnij siê, ¿e kod poni¿ej nie zostanie wykonany 
                         po przekierowaniu. */
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Protokó³ HTTP 1.1 wymaga URL-i bezwzglêdnych w nag³ówku
      <ulink url="&spec.http1.1;/rfc2616-sec14.html#sec14.30">Location:</ulink>
      w³±cznie z okre¶leniem protoko³u, nazwy hosta and i bezwzglêdnej scie¿ki
      dostêpu.
      Niektóre klienty mog± akceptowaæ wzglêdne URL-e, jednak zdecydowanie nie
      powinienie¶ bazowaæ na tym. Zwykle u¿ywa siê
      $HTTP_SERVER_VARS['HTTP_HOST'], $HTTP_SERVER_VARS['PHP_SELF'] i
      funkcji <function>dirname</function> by wygenerowaæ bezwglêdnego URL-a:
      <informalexample>
       <programlisting>
header ("Location: http://".$HTTP_SERVER_VARS['HTTP_HOST']
                       ."/".dirname($HTTP_SERVER_VARS['PHP_SELF'])
                       ."/".$relative_url);
       </programlisting>
      </informalexample>
     </para>
    </note>
    <para>
     Drugim specjalnym wywo³aniem funkcji jest ka¿dy nag³ówek zaczynaj±cy siê
     od ci±gu znaków &quot;HTTP/&quot; (wielko¶æ liter nie gra roli). Na
     przyk³ad, je¶li dyrektywa konfiguracyjna ErrorDocument 404 twojego Apache-a
     wskazuje na skrypt PHP, by³oby dobrze przekonaæ siê, czy ten skrypt 
     faktycznie generuje 404. Pierwsz± rzecz±, któr± powiniene¶ zrobiæ w swoim
     skrypcie jest wtedy: 
     <informalexample>
      <programlisting role="php">
header ("HTTP/1.0 404 Not Found");
      </programlisting>
     </informalexample>
    </para>
    <para>
     Skrypty PHP czêsto s³u¿± do generowania dynamicznych dokumentów HTML, które
     nie mog± byæ buforowane przez klienta czy serwer proxy. Pamiêæ cache
     w wiêkszo¶ci tych urz±dzeñ da siê wy³±czyæ dziêki:
     <informalexample>
      <programlisting role="php">
header ("Expires: Mon, 26 Jul 1997 05:00:00 GMT");    // data w przesz³o¶ci
header ("Last-Modified: " . gmdate("D, d M Y H:i:s") . " GMT"); 
                                                      // ci±gle modyfikowany
header ("Cache-Control: no-cache, must-revalidate");  // HTTP/1.1
header ("Pragma: no-cache");                          // HTTP/1.0
      </programlisting>
     </informalexample>
    </para>
    <para>
     Pamiêtaj, ¿e funkcja <function>header</function> mo¿e byæ wywo³ywana 
     jedynie do momentu nim jakakolwiek tre¶æ zostanie wys³ana, czyli zarówno
     znaczniki HTML, puste linie jak i wynik pracy PHP. Jest to bardzo
     czêsty b³±d, gdzie skrypty z funkcjami <function>include</function>, 
     <function>require</function> itp. maj± spacje albo puste linie przed
     wywo³aniem funkcji <function>header</function>. 
     Problem ten pojawia siê równie¿ w skryptach opartych na
     pojedynczym pliku PHP/HTML.
     <informalexample>
      <programlisting role="php">
&lt;?php require("user_logging.inc") ?>


&lt;?php header ("Content-Type: audio/x-pn-realaudio"); ?>
// skrypt nie dzia³a - zauwa¿ puste linie pomiêdzy instrukcjami
      </programlisting>
     </informalexample>
    </para>    
    <para>
     Zobacz te¿ <function>headers_sent</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.headers-sent">
   <refnamediv>
    <refname>headers_sent</refname>
    <refpurpose>Zwraca &true; je¶li nag³ówki zosta³y ju¿ wys³ane</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>headers_sent</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Ta funkcja zwraca &true; je¶li nag³ówki HTTP ju¿ zosta³y wys³ane, lub
     &false; w przeciwnym wypadku.
    </para>
    <para>
     Zobacz te¿ <function>header</function>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Wysy³a ciasteczko</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Opis</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>setcookie</function></funcdef>
      <paramdef>string <parameter>nazwa</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>warto¶æ</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>data_wa¿no¶ci</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>¶cie¿ka</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>domena</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>bezpieczne</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>setcookie</function> okre¶la ciasteczko (ang. cookie) do
     wys³ania z nag³ówkami HTTP. Ciasteczko musi byæ wys³ane <emphasis>zanim
     </emphasis> jakiekolwiek inne nag³ówki zostan± wys³ane (to jest
     ograniczenie ciasteczek, nie PHP). To wymaga od ciebie umieszczenia
     wywo³añ tej funkcji przed znacznikami <literal>&lt;html></literal> czy
     <literal>&lt;head></literal>.
    </para>
    <para>
     Wszystkie argumenty poza <parameter>nazwa</parameter> s± opcjonalne.
     Je¶li tylko argument nazwa jest obecny, ciasteczko o takie nazwie zostanie
     usuniête z klienta. Mo¿esz te¿ opu¶ciæ argumenty za pomoc± pustego ³añcucha
     (<emphasis>&quot;&quot;</emphasis>). Argumenty <parameter>data_wa¿no¶ci
     </parameter> i <parameter>bezpieczne</parameter> s± liczbami ca³kowitymi
     i nie mo¿na ich opu¶ciæ wstawiaj±c pusty ³añcuch. Zamiast niego u¿yj
     liczby zero (<emphasis>0</emphasis>). Argument 
     <parameter>data_wa¿no¶ci</parameter> 
     jest regularnym uniksowym znacznikiem czasu, takim jak
     zwracany przez funkcje <function>time</function> lub <function>mktime
     </function>. Argument <parameter>bezpieczne</parameter> oznacza, ¿e
     ciasteczko mo¿e byæ przekazywane tylko poprzez bezpieczne po³±czenie HTTPS.
    </para>
    <para>
     Czêste pu³apki:
     <itemizedlist>
      <listitem>
       <simpara>
        Ciasteczka nie bêd± widziane do nastêpnego prze³adowania strony
        dla której maj± byæ widoczne.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Ciasteczko mo¿e byæ usuniête tylko z tymi parametrami, z jakimi je
        ustawiono.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <simpara>
     W PHP 3, wielokrotne wywo³ania <function>setcookie</function> w jednym
     skrypcie wykonywane by³y w odwrotnej kolejno¶ci. Je¶li chcesz usun±æ jedno
     ciastko przed wprowadzeniem kolejnego, powiniene¶ umie¶ciæ wprowadzenie
     nowego przed usunêciem starego. W PHP 4 , wielokrotne wywo³ania 
     <function>setcookie</function> wykonywane s± we w³a¶ciwej kolejno¶ci.
    </simpara>
    <para>
     Parê przyk³adów - jak wysy³aæ ciasteczka:
     <example>
      <title><function>setcookie</function> wysy³a przyk³adowe ciasteczka
      </title>
      <programlisting role="php">
setcookie ("TestCookie", "Test Value");
setcookie ("TestCookie", $value,time()+3600);  /* traci wa¿no¶æ za godzinê */
setcookie ("TestCookie", $value,time()+3600, "/~rasmus/", ".utoronto.ca", 1);
      </programlisting>
     </example>
    </para>
    <para>
     A teraz, jak usun±æ ciasteczka z poprzedniego przyk³adu:
     <example>
      <title>Kasowanie ciasteczek
      </title>
      <programlisting role="php">
setcookie ("TestCookie");
// ustaw datê wa¿no¶ci na godzinê wstecz
setcookie ("TestCookie", "", time() - 3600);
setcookie ("TestCookie", "", time() - 3600, "/~rasmus/", ".utoronto.ca", 1);
      </programlisting>
     </example>
     Kiedy chcesz skasowaæ ciasteczko, upewnij siê, ¿e data wa¿no¶ci jest
     w przesz³o¶ci, co uruchomi mechanizm kasowania ciasteczka w przegl±darce.
    </para>
    <para>
     Zwróæ uwagê, ¿e zawarto¶æ ciasteczka jest automatycznie kodowana do formatu
     URL przy wysy³aniu, a po odebraniu automatycznie dekodowana i przypisywana
     do zmiennej o tej samej nazwie co ciasteczko. Aby poznaæ zawarto¶æ
     przyk³adowego ciasteczka ze skryptu, zastosuj poni¿szy przyk³ad:
     <informalexample>
      <programlisting role="php">
echo $TestCookie;
echo $HTTP_COOKIE_VARS["TestCookie"];
      </programlisting>
     </informalexample>
    </para>
    <para>
     Mo¿na te¿ tworzyæ tablice z³o¿one z ciasteczek za pomoc± zapisu tablicowego
     w nazwie ciasteczka. Powoduje to utworzenie tylu ciasteczek, ile jest
     elemetów tablicy, a po otrzymaniu takiego ciasteczka, jego warto¶ci
     umieszczane s± w tablicy o nazwie takiej jak ciasteczko.
     <informalexample>
      <programlisting role="php">
setcookie ("cookie[three]", "cookiethree");
setcookie ("cookie[two]", "cookietwo");
setcookie ("cookie[one]", "cookieone");
if (isset ($cookie)) {
    while (list ($name, $value) = each ($cookie)) {
        echo "$name == $value&lt;br>\n";
    }
}
      </programlisting>
     </informalexample>
    </para>
    <para>
     Wiêcej informacji na temat ciasteczek znajdziesz w specyfikacji Netscape'a
     na stronie <ulink
     url="&spec.cookies;">&spec.cookies;</ulink>.
    </para>
    <simpara>
     Microsoft Internet Explorer 4 z zainstalowanym Service Pack 1 nie radzi
     sobie poprawnie z ciasteczkami, które maj± ustawiony parametr ¶cie¿ka. 
    </simpara>
    <simpara>
     Netscape Communicator 4.05 i Microsoft Internet Explorer 3.x obs³uguj±
     niepoprawnie ciasteczka, w których ¶cie¿ka i data_wa¿no¶ci nie s± 
     ustawione.
    </simpara>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
