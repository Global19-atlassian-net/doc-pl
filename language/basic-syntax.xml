<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.19 Maintainer: Yagood Status: ready -->
<!-- $Revision: 1.7 $ -->
  <chapter id="language.basic-syntax">
   <title>Podstawowa sk³adnia</title>

   <!--

    UWAGA:			Ostatnia modyfikacja: 2001-05-16 13:00 GMT
				T³umaczenie	    : 2001-10-12 18:48 GMT

    the language part is currently under heavy revision. Please do not
    not make any heavy (i.e. structural) modifications to this part
    for a moment.

    You'd also better not start any translation yet.

    Comments are always welcome at phpdoc@lists.php.net

    Progress:

     intro : DOESN'T EXIST - yet?
	     new chapter, with some introductionary remarks?
	     Will be discussed on the ML soon.
     basic-syntax:
	     FINISHED
	     except maybe moving the 'advanced escaping'
	     to a better place?
	     TODO:
	      - nada
     types : Being revised. Added all new types
	     Boolean and Integer are more or less finished.
	     The rest isn't.
	     TODO:
	      - why is $foo[bar] bad syntax?
	      - what's the difference between unset($bla) and
		$bla = NULL; (it is different!)
	      - $obj->{expr} syntax
	      - (unset) cast?????
	      - $bla = unset <== should've been nuked, don't mention it
	      - $str{offset} syntax, rather than $str[offset]
	      - read notes and apply when any of them are useful
	      - remove notes which have been included here.
	      - ...
     the rest: Not yet started with.
	     TODO:
	      - ?
     oop   : has been revised by Kristian, DONE.
   -->

   <sect1 id="language.basic-syntax.phpmode">
    <title>Wyskakiwanie z HTMLa</title>

    <para>
     Kiedy PHP zaczyna przetwarzaæ plik, po prostu wy¶wietla tekst,
     który napotka. Zatem, je¶li zmienisz rozszerzenie pliku HTML na .php,
     ten plik bêdzie dzia³a³ nadal.
    </para>

    <para>
     Je¶li chcesz wstawiæ komendy PHP w jakim¶ miejscu w swoim dokumencie
     musisz to zasygnalizowaæ, wchodz±c w "tryb PHP" którym¶ ze sposobów
     podanych poni¿ej:
    </para>

    <para>
     <example>
      <title>Mo¿liwo¶ci wyskoczenia z HTMLa</title>
      <programlisting role="php">
1.  &lt;? echo ("To jest najprostszy test, instrukcja SGML\n"); ?&gt;
    &lt;?= wyra¿enie ?&gt; To jest skrót takiej formy: "&lt;? echo wyra¿enie ?&gt;"

2.  &lt;?php echo("Je¶li chcesz u¿ywaæ dokumentów XHTML i XML, rób to tak\n"); ?&gt;

3.  &lt;script language="php"&gt;
	echo ("Niektóre edytory (jak FrontPage)
	      nie lubi± instrukcji wchodz±cych w 'tryb PHP'");
    &lt;/script&gt;

4.  &lt;% echo ("Mo¿esz tak¿e u¿yæ znaczników w stylu ASP"); %&gt;
    &lt;%= $variable; # To jest skrót takiej formy: "&lt;%echo .." %&gt;
      </programlisting>
     </example>
    </para>

    <para>
     Pierwszy sposób jest dostêpny tylko kiedy zosta³y w³±czone krótkie
     znaczniki. Mo¿na to zrobiæ
     <!-- funkcjê <function>short_tags</function>,-->
     wpisuj±c <link linkend="ini.short-open-tag">short_open_tag</link>
     do pliku konfiguracyjnego PHP albo kompiluj±c PHP dodaj±c
     --enable-short-tags do <command>configure</command>.
    </para>

    <para>
     Drugi sposób jest preferowany, zapewnia on nastêpnej generacji XHTMLa
     ³atw± implementacjê w PHP.
    </para>

    <para>
     Czwarty sposób jest dostêpny tylko kiedy znaczniki ASP zosta³y
     w³±czone poprzez uaktywnianie opcji
     konfiguracyjnej <link linkend="ini.asp-tags">asp_tags</link>.

    <note>
     <para>Obs³uga dla znaczników ASP zosta³a dodana w wersji 3.0.4.</para>
    </note></para>

    <para>
     Znacznik zamykaj±cy blok bêdzie dodawa³ koñcow±
     now± liniê, je¶li taka istnieje.
    </para>

    <para> <!-- TODO: find a better place for this para -->
     PHP pozawala ci u¿ywaæ takich struktur:
     <example><title>Zaawansowane wyskakiwanie</title>
     <programlisting role="php">
&lt;?php

if (wyrazenie-logiczne) {
    ?&gt;
&lt;strong&gt;prawda &lt;/strong&gt;
    &lt;?php
} else {
    ?&gt;
&lt;strong&gt;fa³sz &lt;/strong&gt;
    &lt;?php
}
    ?&gt;
     </programlisting></example>

     Powy¿szy kod dzia³a, poniewa¿ PHP traktuje tekst pomiêdzy ?&gt; i
     &lt;?php jak gdyby by³a to funkcja <function>echo</function>.
     <!-- without the parsing if vars, that is (hopefully?) obvious -->
    </para>

   </sect1>

   <sect1 id="language.basic-syntax.instruction-separation">
    <title>Oddzielanie instrukcji</title>

    <simpara>
     Instrukcje s± oddzielane tak samo jak w C czy Perlu - nale¿y koñczyæ
     ka¿de wyra¿enie ¶rednikiem.
    </simpara>

    <para>
     Znacznik zamykaj±cy (?&gt;) tak¿e koñczy instrukcjê, wiêc poni¿sze
     przyk³ady s± równowa¿ne:

     <informalexample>
      <programlisting role="php">
&lt;?php
    echo "To jest test";
?>

&lt;?php echo "To jest test" ?>
      </programlisting>
     </informalexample></para></sect1>

   <sect1 id="language.basic-syntax.comments">
    <title>Kometarze</title>

    <para>
     PHP obs³uguje komentarze w stylu C, C++ oraz komentarze u¿ywane
     w pow³okach uniksowych ("#"):

     <informalexample>
      <programlisting role="php">
&lt;?php
    echo "To jest test"; // to jest kometarz jednoliniowy w stylu C++
    /* to jest komentarz wieloliniowy
       a tutaj inna komentowana linia */
    echo "To jest jeszcze jeden test";
    echo "Ostatni test"; # to jest kometarz w stylu shell'a
?>
     </programlisting>
    </informalexample></para>

    <simpara>
     Komentarze typu jednoliniowego maj± zasiêg do koñca linii w której siê
     znajduj± lub do koñca bloku kodu PHP, zale¿nie co wyst±pi pierwsze.
    </simpara>
     <informalexample><programlisting role="php">
&lt;h1>To jest &lt;?php # echo "prosty";?> przyk³ad.&lt;/h1>
&lt;p>Powy¿szy kod wypisze zdanie "To jest przyk³ad."
     </programlisting></informalexample>

    <simpara>
     Powniene¶ uwa¿aæ by nie zagnie¿d¿aæ komentarzy w stylu C++
     (szczególnie komentarzy wieloliniowych), co mo¿e siê staæ kiedy
     komentujesz d³u¿szy blok kodu.</simpara>

    <informalexample><programlisting role="php">
&lt;?php
 /*
    echo "To jest test"; /* ten komentarz spowoduje problem */
 */
?>
    </programlisting></informalexample></sect1>
  </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
