<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: 1.29 Maintainer: leon Status: ready -->
<!-- $Revision: 1.7 $ -->
 <chapter id="introduction">
  <title>Wprowadzenie</title>

  <sect1 id="intro-whatis">
   <title>Czym jest PHP?</title>
   <simpara>
    <acronym>PHP</acronym> (akronim rekursywny "PHP: Hypertext Preprocessor"),
    jest szeroko u¿ywanym jêzykiem skryptowym ogólnego zastosowania, tworzonym
    na zasadach Open Source, dopasowanym do potrzeb aplikacji WWW, z mo¿liwo¶ci±
    zagnie¿d¿ania w HTML.
   </simpara>
   <para>
    Prosta odpowied¼, ale co to znaczy? Przyk³ad:
   </para>
   <para>
    <example>
     <title>Wprowadzaj±cy przyk³ad</title>
     <programlisting role="php">
<![CDATA[
<html>
    <head>
        <title>Przyk³ad</title>
    </head>
    <body>
        <?php echo "Cze¶æ! Jestem skryptem PHP!"; ?>
    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Zauwa¿ jak bardzo ró¿ni siê to od skryptów pisanych w innych
    jêzykach, takich jak C czy Perl -- zamiast pisaæ program, zawieraj±cy
    mnóstwo komend tylko do wypisania HTML, piszesz kod HTML zawieraj±cy
    troche zagnie¿d¿onego kodu, który robi co¶ konkretnego (w powy¿szym
    przypadku wypisuje jaki¶ tekst). Kod PHP jest zawarty pomiêdzy specjalnymi
    <link linkend="language.basic-syntax.phpmode">znacznikami otwieraj±cymi i
    zamykaj±cymi</link> które pozwalaj± na wchodzenie do i wychodzenie z
    "trybu PHP".
   </para>
   <para>
    PHP ró¿ni siê od skryptów wykonywanych po stronie klienta takich
    jak np. JavaScript tym, ¿e ca³y kod PHP wykonywany jest na serwerze.
    Je¶li masz na serwerze skrypt podobny do przedstawionego wy¿ej,
    klient dostanie tylko rezultat wykonania skryptu, bez mo¿liwo¶ci
    stwierdzenia jak wygl±da generuj±cy go kod. Mo¿esz nawet
    skonfigurowaæ serwer WWW, tak aby wszystkie pliki HTML by³y przetwarzane
    przez PHP. A wtedy nie ma sposobu, aby u¿ytkownik móg³ stwierdziæ jakie asy
    trzymasz w rêkawie.
   </para>
   <para>
    Najlepsz± rzecz± w u¿ywaniu PHP jest to, ¿e jest bardzo ³atwy w opanowaniu
    dla pocz±tkuj±cego, ale oferuje tak¿e wiele zaawansowanych w³a¶ciwo¶ci
    zaawansowanym programistom. Nie bój siê przegl±daj±c d³ug± listê
    mo¿liwo¶ci PHP. PHP mo¿na siê szybko nauczyæ i ju¿ po kilku godzinach
    pisaæ proste skrypty.
   </para>
   <para>
    Pomimo ¿e PHP jest rozwijane pod k±tem skryptowania server-side, mo¿e on
    znacznie wiêcej. Przeczytaj rozdzia³ <link linkend="intro-whatcando">Co
    potrafi PHP</link> aby uzyskaæ wiêcej informacji.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>Co potrafi PHP?</title>
   <para>
    Wszystko. PHP jest rozwijane pod k±tem pisania skryptów server-side, wiêc
    mo¿esz zrobiæ wszystko co potrafi± inne programy CGI, jak na przyk³ad
    odbieraæ dane z formularzy, generowaæ dynamicznie zawarto¶æ strony, lub
    odbieraæ i wysy³aæ ciasteczka. Ale PHP mo¿e o wiele wiêcej.
   </para>
   <para>
    Istniej± trzy g³ówne pola u¿ytkowania skryptów PHP.
    <itemizedlist>
     <listitem>
      <simpara>
       Pisanie skryptów server-side. Jest to najbardziej tradycyjne i g³ówne
       pole dzia³ania PHP. Potrzebujesz 3 rzeczy aby to robiæ: parser PHP
       (plik wykonywalny CGI lub modu³ serwera), serwer WWW i przegl±darka.
       Musisz uruchomiæ serwer WWW po³±czony z PHP. Dane wyj¶ciowe programów
       PHP mo¿esz ogl±daæ ko¿ystaj±c z przegl±darki poprzez serwer. Zobacz
       rozdzia³ <link linkend="installation">Instalacja</link> aby uzyskaæ
       wiêcej informacji.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Pisanie skryptów uruchamianych z linii poleceñ. Mo¿sz napisaæ skrypt
       PHP i uruchomiæ go bez serwera i przegl±darki. Potrzebujesz do tego
       tylko parsera PHP. Ten typ u¿ytkowania jest idealny do uruchamiania
       skryptów regularnie poprzez crona (lub mened¿er zadañ na Windowsach),
       lub przetwarzania tekstu. Zobacz rozdzia³ <link linkend="commandline">
       U¿ytkowanie PHP z linii poleceñ</link> aby uzyskaæ wiêcej informacji.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Pisanie aplikacji client-side z interfejsem u¿ytkownika. PHP jest
       prawdopodobnie nienajlepszym jêzykiem do pisania okienkowych aplikacji,
       ale je¶li bardzo dobrze znasz PHP i chcesz skorzystaæ z zaawansowanych
       mo¿liwo¶ci PHP w swojej aplikacji client-side, mo¿esz tak¿e u¿yæ pakiet
       PHP-GTK do pisania takich programów. Z PHP-GTK Masz tak¿e mo¿liwo¶æ
       pisania aplikacji wieloplatformowych. PHP-GTK jest rozszerzeniem PHP i
       nie jest dostêpne w g³ównej dystrybucji. Je¶li jeste¶ zainteresowany
       PHP-GTK, odwied¼ <ulink url="&url.php.gtk;">stronê domow±
       projektu</ulink>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP mo¿e byæ tak¿e u¿yty w wiêkszo¶ci najwa¿niejszych systemów
    operacyjnych, takich jak Linux, wiele wariantów systemu Unix (w³±czaj±c w
    to HP-UX, Solaris i OpenBSD), Microsoft Windows, Mac OS X, RISC OS i
    prawdopodobnie wiele innych. PHP w chwili obecnej obs³uguje wiêkszo¶æ
    serwerów HTTP, w³±czaj±c w to Apache, Microsoft Internet Information
    Server, Personal Web Server, serwery Netscape i iPlanet, Oreilly Website
    Pro, Caudium, Xitami, OmniHTTPd i wiele innych. Dla wiêszo¶ci z nich PHP
    dostêpne jest jako modu³y serwera, dla pozosta³ych jako program CGI. PHP
    mo¿e pracowaæ jako procesor CGI.
   </para>
   <para>
    A wiêc z PHP istnieje wolno¶c wyboru systemu operacyjnego i serwera WWW.
    Mo¿na tak¿e wybraæ pomiêdzy programowaniem proceduralnym a obiektowym, lub
    pomieszaniem ich obu. Pomimo ¿e nie wszystkie standardy OOP s± obs³ugiwane
    w PHP, wiele bibliotek i du¿ych aplikacji (w³±czaj±c w to biblioteki PEAR)
		jest napisanych ca³kowicie w sposób obiektowy.
   </para>
   <para>
    W PHP nie ma ograniczenia, ¿e na wyj¶ciu musi byæ HTML. Mo¿liwo¶ci PHP
    obejmuj± tworzenie obrazów, plików PDF, a nawet animacji Flash (u¿ywaj±c
    libswf i Ming) generowanych "w locie". Mo¿esz tak¿e wyprowadzaæ na wyj¶cie
    dowolne dane tekstowe, jak na przyk³ad XHTML czy dowolny inny plik XMLowy.
    PHP mo¿e autogenerowaæ te pliki i zapisywaæ je w systemie plików zamiast
    wysy³aæ je na wyj¶cie, tworz±c pamiêæ podrêczn± dla twojej dynamicznej
    zawarto¶ci.
   </para>
   <para>
    Jedn± z najmocniejszych i najbardziej znacz±cych mo¿liwo¶ci PHP jest
    obs³uga wielu rodzajów baz danych. Pisanie strony WWW wykorzystuj±cej bazê
    danych jest niewiarygodnie proste. Obecnie obs³ugiwane s± nastêpuj±ce bazy
    danych:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (tylko do odczytu)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 i OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    Istenieje tak¿e abstrakcyjne rozszerzenie DBX pozwalaj±ce na przezroczyste
    u¿ywanie dowolnej bazy danych obs³ugiwanych przez to rozszerzenie.
    Dodatkowo PHP obs³uguje standard ODBC (Open Database Connection), przez co
    mo¿esz po³±czyæ siê do dowolnej innej bazy danych obs³uguj±cej ten
    popularny standard. 
   </para>
   <para>
    PHP obs³uguje równie¿ inne serwisy u¿ywaj±ce protoko³ów
    takich jak IMAP, SNMP, NNTP, POP3, HTTP, COM (pod systemami Windows)
    i wiele innych. Mo¿esz tak¿e otwieraæ surowe gniazda sieciowe i korzystaæ
    z innych protoko³ów. PHP obs³uguje WDDX - kompleksowy model wymiany danych
    pomiêdzy praktycznie wszystkimi sieciowymi jêzykami programowania. PHP
    obs³uguje tak¿e obiekty Java i mo¿e korzystaæ z nich przezroczy¶cie - tak
    jak z obiektów PHP. Mo¿esz tak¿e skorzystaæ z rozszerzenia Corba aby
    u¿yskaæ dostêp do zdalnych obiektów.
   </para>
   <para>
    PHP mam niezwykle przydatne mo¿liwo¶ci do obróbki tekstów, od POSIX'owych
    i PERL'owych wyra¿eñ regularnych po parsowanie dokumentów XML. Do
    parsowania i uzyskiwania dostêpu do dokumentów XML wykorzystywane s±
    standardy SAX i XML. Mo¿esz tak¿e u¿yæ naszych rozszerzeñ XSLT do
    przetwarzania dokumentów XML.
   </para>
   <para>
    PHP mo¿e byæ u¿ywane w sferze e-commerce, poniewa¿ obs³uguje p³atno¶ci
    Cybercash, a tak¿e funkcje CyberMUT, VeriSign Payflow Pro i CCVS,
    przydatne przy p³atno¶ciach on-line.
   </para>
   <para>
    Na koniec warto wspomnieæ, ¿e w PHP istnieje wiele innych interesuj±cych
    rozszerzeñ, takich jak funkcje przeszykiwawcze mnoGoSearch, funkcje bramki
    IRC, wiele narzêdzi do kompresji (gzip, bz2), konwersji kalendarza,
    t³umaczeñ...
   </para>
   <para>
    To co widaæ na tej stronie, to nie jest wszystko co ma do zaoferowanie
    PHP. Przeczytaj rozdzia³ o <link linkend="installation">instalacji</link>
    i zobacz <link linkend="funcref">przegl±d funkcji</link> je¶li chcesz
    dowiedzieæ siê wiêcej o rozszerzeniach tutaj wspomnianych.
   </para>
  </sect1>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
