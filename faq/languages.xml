<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: n/a Maintainer: shutdownrunner Status: ready -->
<!-- $Revision$ -->
 <chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP i inne języki</title>
  <titleabbrev>PHP i inne języki</titleabbrev>

  <para>
   PHP jest najlepszym językiem do zastosowań sieciowych,
   ale co z innymi językami?
  </para>

  <qandaset>
   <qandaentry xml:id="faq.languages.asp">
    <question>
     <para>PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASP nie jest tak naprawdę językiem programowania, ale skrótem od 
      Active Server Pages. W rzeczywistości ASP programuje się przy użyciu
      języków Visual Basic oraz JScript. Największą wadą ASP jest fakt, że
      działa on wyłącznie na serwerach Internet Information Server(IIS) firmy
      Microsoft. Ogranicza to możliwość zastosowania ASP wyłącznie do 
      serwerów bazujących na systemie Win32.
      Istnieje kilka projektów, których celem jest umożliwienie uruchamiania ASP w
      innych środowiskach i na innych serwerach:
      <link xlink:href="&url.instantasp;">InstantASP</link>
      firmy <link xlink:href="&url.halcyon;">Halcyon</link> (komercyjny),
      Chili!Soft ASP firmy 
      <link xlink:href="&url.chilisoft;">Chili!Soft</link> (komercyjny).
      Przez wielu ASP określany jest jako wolniejszy, mniej wygodny oraz
      nie tak stabilny jak PHP. Do zalet ASP można zaliczyć fakt, że używa
      on języka VBScript, którego osoba umiejąca już
      programować w Visual Basic jest w stanie bardzo szybko się nauczyć. 
      Serwery IIS mają domyślnie włączoną obsługę ASP co znacznie
      ułatwia jego instalację oraz użtkowanie. Ilość komponentów napisanych 
      w ASP jest bardzo ograniczona, co oznacza, że jeśli będziesz
      chciał używać "zaawansowanych" funkcji takich jak np. współpraca
      z serwerami FTP będziesz musiał dokupić dodatkowe komponenty.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.aspconverter">
    <question>
     <para>Czy można skonwertować ASP na PHP?</para>
    </question>
    <answer>
     <para>
      Tak. Do najczęściej wymienianych narzędzi tego typu należą działający
      po stronie serwera <link xlink:href="&url.asp2php;">asp2php</link> oraz
      <link xlink:href="&url.asptranslator;">to rozwiązanie</link> działające po stronie klienta.
      </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.coldfusion">
    <question>
     <para>PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
      Przez wielu ludzi PHP jest uważany za znacznie szybszy i wydajniejszy.
      Bardzo dobrze nadaje się do tworzenia złożonych projektów oraz do 
      wypróbowywania nowych pomysłów. Do jego zalet można zaliczyć również 
      większa stabilność oraz mniejsze zużycie zasobów. Mocną stroną Cold Fusion
      jest lepsza obsługa błędów, abstrakcja baz danych oraz parsowanie
      daty. Jeśli chodzi o abstrakcję baz danych poświęcono jej więcej uwagi w 
      PHP 4. Zaletą Cold Fusion jest bardzo dobry silnik wyszukiwarki. Nie jest to 
      jednak ważna różnica, bo niewiele osób oczekuje implementacji takiej funkcji w języku 
      skryptowym. PHP jest obsługuiwany przez praktycznie wszystkie platformy, podczas gdy
      Cold Fusion działa wyłącznie na systemach Win32, Solaris, Linux oraz HP/UX.
      Cold Fusion ma bardzo dobre zintegrowane środowisko programowania (IDE) co 
      umożliwia programowanie przy jego użyciu nawet początkującym użytkownikom.
      Z kolei PHP już od samego początku wymaga od użytkownika pewnej wiedzy
      o programowaniu i nie został stworzony z myślą o ludziach stawiających 
      dopiero pierwsze kroki na tym polu.
     </para>
     <para>
      Michael J Sheldon wysłał bardzo ciekawy artykuł na ten temat 
      na listę dyskusyjną PHP. Jego kopię znajdziesz tutaj
      <link xlink:href="&url.coldfusion.summary;">&url.coldfusion.summary;</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.perl">
    <question>
     <para>PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
      Największą przewagą PHP nad językiem Perl jest fakt, że PHP został
      stworzony wyłącznie z myślą o zastosowaniach sieciowych. Natomiast Perl
      ma dużo więcej zastosowań i właśnie ta ogromna ilość funkcji może
      niektórym sprawiać trudności. Z jednej strony elastyczność / kompleksowość
      Perla ułatwia pisanie w nim kodu, z drugiej jednak strony inny autor /
      programista może mieć problemy z jego odczytaniem. PHP jest
      równie elastyczny, a rygorystyczna składnia czyni kod bardziej
      przejrzystym. PHP łatwiej niż Perl daje się wkomponowanać w istniejący dokument
      HTML. PHP zawiera wszystkie 'użyteczne' funkcje Perl: budowę, 
      składnię, itd., przy czym ich używanie zostało w PHP znacznie uproszczone.
      Perl jest językiem sprawdzonym, używanym od końca lat 80. PHP
      jest jeszcze dosyć młodym językiem, ale bardzo szybko dojrzewa.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
