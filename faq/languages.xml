<?xml version="1.0" encoding="iso-8859-2"?>
<!-- EN-Revision: n/a Maintainer: shutdownrunner Status: ready -->
<!-- $Revision$ -->
 <chapter xml:id="faq.languages" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>PHP i inne jêzyki</title>
  <titleabbrev>PHP i inne jêzyki</titleabbrev>

  <para>
   PHP jest najlepszym jêzykiem do zastosowañ sieciowych,
   ale co z innymi jêzykami?
  </para>

  <qandaset>
   <qandaentry xml:id="faq.languages.asp">
    <question>
     <para>PHP vs. ASP?</para>
    </question>
    <answer>
     <para>
      ASP nie jest tak naprawdê jêzykiem programowania, ale skrótem od 
      Active Server Pages. W rzeczywisto¶ci ASP programuje siê przy u¿yciu
      jêzyków Visual Basic oraz JScript. Najwiêksz± wad± ASP jest fakt, ¿e
      dzia³a on wy³±cznie na serwerach Internet Information Server(IIS) firmy
      Microsoft. Ogranicza to mo¿liwo¶æ zastosowania ASP wy³±cznie do 
      serwerów bazuj±cych na systemie Win32.
      Istnieje kilka projektów, których celem jest umo¿liwienie uruchamiania ASP w
      innych ¶rodowiskach i na innych serwerach:
      <link xlink:href="&url.instantasp;">InstantASP</link>
      firmy <link xlink:href="&url.halcyon;">Halcyon</link> (komercyjny),
      Chili!Soft ASP firmy 
      <link xlink:href="&url.chilisoft;">Chili!Soft</link> (komercyjny).
      Przez wielu ASP okre¶lany jest jako wolniejszy, mniej wygodny oraz
      nie tak stabilny jak PHP. Do zalet ASP mo¿na zaliczyæ fakt, ¿e u¿ywa
      on jêzyka VBScript, którego osoba umiej±ca ju¿
      programowaæ w Visual Basic jest w stanie bardzo szybko siê nauczyæ. 
      Serwery IIS maj± domy¶lnie w³±czon± obs³ugê ASP co znacznie
      u³atwia jego instalacjê oraz u¿tkowanie. Ilo¶æ komponentów napisanych 
      w ASP jest bardzo ograniczona, co oznacza, ¿e je¶li bêdziesz
      chcia³ u¿ywaæ "zaawansowanych" funkcji takich jak np. wspó³praca
      z serwerami FTP bêdziesz musia³ dokupiæ dodatkowe komponenty.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.aspconverter">
    <question>
     <para>Czy mo¿na skonwertowaæ ASP na PHP?</para>
    </question>
    <answer>
     <para>
      Tak. Do najczê¶ciej wymienianych narzêdzi tego typu nale¿± dzia³aj±cy
      po stronie serwera <link xlink:href="&url.asp2php;">asp2php</link> oraz
      <link xlink:href="&url.asptranslator;">to rozwi±zanie</link> dzia³aj±ce po stronie klienta.
      </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.coldfusion">
    <question>
     <para>PHP vs. Cold Fusion?</para>
    </question>
    <answer>
     <para>
      Przez wielu ludzi PHP jest uwa¿any za znacznie szybszy i wydajniejszy.
      Bardzo dobrze nadaje siê do tworzenia z³o¿onych projektów oraz do 
      wypróbowywania nowych pomys³ów. Do jego zalet mo¿na zaliczyæ równie¿ 
      wiêksza stabilno¶æ oraz mniejsze zu¿ycie zasobów. Mocn± stron± Cold Fusion
      jest lepsza obs³uga b³êdów, abstrakcja baz danych oraz parsowanie
      daty. Je¶li chodzi o abstrakcjê baz danych po¶wiêcono jej wiêcej uwagi w 
      PHP 4. Zalet± Cold Fusion jest bardzo dobry silnik wyszukiwarki. Nie jest to 
      jednak wa¿na ró¿nica, bo niewiele osób oczekuje implementacji takiej funkcji w jêzyku 
      skryptowym. PHP jest obs³uguiwany przez praktycznie wszystkie platformy, podczas gdy
      Cold Fusion dzia³a wy³±cznie na systemach Win32, Solaris, Linux oraz HP/UX.
      Cold Fusion ma bardzo dobre zintegrowane ¶rodowisko programowania (IDE) co 
      umo¿liwia programowanie przy jego u¿yciu nawet pocz±tkuj±cym u¿ytkownikom.
      Z kolei PHP ju¿ od samego pocz±tku wymaga od u¿ytkownika pewnej wiedzy
      o programowaniu i nie zosta³ stworzony z my¶l± o ludziach stawiaj±cych 
      dopiero pierwsze kroki na tym polu.
     </para>
     <para>
      Michael J Sheldon wys³a³ bardzo ciekawy artyku³ na ten temat 
      na listê dyskusyjn± PHP. Jego kopiê znajdziesz tutaj
      <link xlink:href="&url.coldfusion.summary;">&url.coldfusion.summary;</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry xml:id="faq.languages.perl">
    <question>
     <para>PHP vs. Perl?</para>
    </question>
    <answer>
     <para>
      Najwiêksz± przewag± PHP nad jêzykiem Perl jest fakt, ¿e PHP zosta³
      stworzony wy³±cznie z my¶l± o zastosowaniach sieciowych. Natomiast Perl
      ma du¿o wiêcej zastosowañ i w³a¶nie ta ogromna ilo¶æ funkcji mo¿e
      niektórym sprawiaæ trudno¶ci. Z jednej strony elastyczno¶æ / kompleksowo¶æ
      Perla u³atwia pisanie w nim kodu, z drugiej jednak strony inny autor /
      programista mo¿e mieæ problemy z jego odczytaniem. PHP jest
      równie elastyczny, a rygorystyczna sk³adnia czyni kod bardziej
      przejrzystym. PHP ³atwiej ni¿ Perl daje siê wkomponowanaæ w istniej±cy dokument
      HTML. PHP zawiera wszystkie 'u¿yteczne' funkcje Perl: budowê, 
      sk³adniê, itd., przy czym ich u¿ywanie zosta³o w PHP znacznie uproszczone.
      Perl jest jêzykiem sprawdzonym, u¿ywanym od koñca lat 80. PHP
      jest jeszcze dosyæ m³odym jêzykiem, ale bardzo szybko dojrzewa.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
